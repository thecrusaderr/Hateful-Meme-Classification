{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Meme Hateful.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "code",
      "metadata": {
        "id": "deaFROvSyG5g"
      },
      "source": [
        "from tensorflow import keras\n",
        "model = keras.models.load_model('/content/drive/My Drive/Colab Notebooks/Project/abc2.json')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AhnGHQ510e9N"
      },
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import tensorflow as tf\n",
        "from tensorflow.keras.preprocessing import text, sequence\n",
        "from tensorflow.keras.models import Sequential\n",
        "from tensorflow.keras.layers import Dense, Dropout, Activation\n",
        "from tensorflow.keras.layers import Embedding\n",
        "from tensorflow.keras.layers import Conv1D, GlobalMaxPooling1D\n",
        "from sklearn.model_selection import train_test_split"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tHLzHbwNyetH",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "71c576c2-b84e-49a3-e0cb-ada58b0d0d77"
      },
      "source": [
        "model.summary()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"sequential\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "embedding (Embedding)        (None, None, 100)         2000000   \n",
            "_________________________________________________________________\n",
            "dropout (Dropout)            (None, None, 100)         0         \n",
            "_________________________________________________________________\n",
            "conv1d (Conv1D)              (None, None, 250)         75250     \n",
            "_________________________________________________________________\n",
            "max_pooling1d (MaxPooling1D) (None, None, 250)         0         \n",
            "_________________________________________________________________\n",
            "conv1d_1 (Conv1D)            (None, None, 250)         312750    \n",
            "_________________________________________________________________\n",
            "global_max_pooling1d (Global (None, 250)               0         \n",
            "_________________________________________________________________\n",
            "dense (Dense)                (None, 250)               62750     \n",
            "_________________________________________________________________\n",
            "dropout_1 (Dropout)          (None, 250)               0         \n",
            "_________________________________________________________________\n",
            "dense_1 (Dense)              (None, 1)                 251       \n",
            "=================================================================\n",
            "Total params: 2,451,001\n",
            "Trainable params: 2,451,001\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tAJcCYs0yewT"
      },
      "source": [
        "model.load_weights(\"/content/drive/My Drive/Colab Notebooks/Project/abc.h5\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oJ_TbO4Myeze"
      },
      "source": [
        "import numpy as np\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YbEMO8B61LqD"
      },
      "source": [
        "train_df = pd.read_csv('/content/drive/My Drive/Colab Notebooks/Project/train.csv').fillna(' ')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Y4Ga9gnEYMhH"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VPmXsZndJZO7"
      },
      "source": [
        "import json"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nkQ_vSosJx36"
      },
      "source": [
        "def load_jsonl(input_path) -> list:\n",
        "    data = []\n",
        "    with open(input_path, 'r', encoding='utf-8') as f:\n",
        "        for line in f:\n",
        "            data.append(json.loads(line.rstrip('\\n|\\r')))\n",
        "    print('Loaded {} records from {}'.format(len(data), input_path))\n",
        "    return data"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Fh3MOszPJx_U",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4ff4e5ac-a1aa-483f-de02-bcfde86b7a10"
      },
      "source": [
        "import pandas as pd\n",
        "webpage_data = load_jsonl('/content/drive/My Drive/Colab Notebooks/Project/train.jsonl')\n",
        "db_data = []\n",
        "db_cols = ['id', 'img', 'label', 'text']\n",
        "for d in webpage_data:\n",
        "    db_data.append([])\n",
        "    for col in db_cols:\n",
        "        db_data[-1].append(d.get(col, float('nan')))\n",
        "df = pd.DataFrame(db_data, columns=db_cols)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Loaded 8500 records from /content/drive/My Drive/Colab Notebooks/Project/train.jsonl\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bxSOB2yUJyNe"
      },
      "source": [
        "dd = df.values"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "c_c7xiGWJyGi",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e6b644da-1466-4cb1-9f62-6a0c7c9e8871"
      },
      "source": [
        "dd"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[42953, 'img/42953.png', 0,\n",
              "        'its their character not their color that matters'],\n",
              "       [23058, 'img/23058.png', 0,\n",
              "        \"don't be afraid to love again everyone is not like your ex\"],\n",
              "       [13894, 'img/13894.png', 0, 'putting bows on your pet'],\n",
              "       ...,\n",
              "       [36947, 'img/36947.png', 1,\n",
              "        'gays on social media: equality! body positivity! love love love! gays in real life: there is no place for her in our social circle'],\n",
              "       [16492, 'img/16492.png', 1,\n",
              "        \"having a bad day? you could be a siamese twin attached to a gay brother who has a date and you're the only one with an ass\"],\n",
              "       [15937, 'img/15937.png', 1,\n",
              "        'i hate muslims too they take their religion too seriously pathetic weaklings']],\n",
              "      dtype=object)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GMWyOBeC1QOJ"
      },
      "source": [
        "x = train_df['comment_text'].values"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RJRGYOA_zyxB"
      },
      "source": [
        "max_features = 20000\n",
        "max_text_length = 400\n",
        "x_tokenizer = tf.keras.preprocessing.text.Tokenizer(max_features)\n",
        "x_tokenizer.fit_on_texts(list(x))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QQqhlMEg0_1W"
      },
      "source": [
        "x_test=[\"you can't be racist if there is no other race.\"]\n",
        "x_test=np.array(x_test)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rjt9JkmXye2y"
      },
      "source": [
        "x_test_tokenized = x_tokenizer.texts_to_sequences(x_test)\n",
        "x_testing = sequence.pad_sequences(x_test_tokenized, maxlen=max_text_length)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5GR5SrjMye56",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "50bcedc6-0acb-42ee-a536-148a20a856e5"
      },
      "source": [
        "model.predict(x_testing)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0.64807165]], dtype=float32)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hDxqEYoeyfCW",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2730e4ae-ce48-4c9f-8718-f0c0796d5b98"
      },
      "source": [
        "type(x_testing)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "numpy.ndarray"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 67
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3Ml8OYVMyfAD",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 37
        },
        "outputId": "70d8aa3b-61e6-4dfc-95e5-9a3fb6e7a0cc"
      },
      "source": [
        "import os.path\n",
        "os.path.sep\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'/'"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 65
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "H2TFV4ngh88L"
      },
      "source": [
        "import json"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rU3ssYrSye9X"
      },
      "source": [
        "def load_jsonl(input_path) -> list:\n",
        "    data = []\n",
        "    with open(input_path, 'r', encoding='utf-8') as f:\n",
        "        for line in f:\n",
        "            data.append(json.loads(line.rstrip('\\n|\\r')))\n",
        "    print('Loaded {} records from {}'.format(len(data), input_path))\n",
        "    return data"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DsTCy1ICho30",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8ab30766-b6ff-4f51-f9e2-600de4985b62"
      },
      "source": [
        "import pandas as pd\n",
        "webpage_data = load_jsonl('/content/drive/My Drive/Colab Notebooks/Project/train.jsonl')\n",
        "db_data = []\n",
        "db_cols = ['id', 'img', 'label', 'text']\n",
        "for d in webpage_data:\n",
        "    db_data.append([])\n",
        "    for col in db_cols:\n",
        "        db_data[-1].append(d.get(col, float('nan')))\n",
        "df = pd.DataFrame(db_data, columns=db_cols)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Loaded 8500 records from /content/drive/My Drive/Colab Notebooks/Project/train.jsonl\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FPRkU1Zoho7F"
      },
      "source": [
        "dd=df.values"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yuWJaQPgjEcL",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "457424a2-846a-48fc-fcd0-3e0cea7ef3a5"
      },
      "source": [
        "dd"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[42953, 'img/42953.png', 0,\n",
              "        'its their character not their color that matters'],\n",
              "       [23058, 'img/23058.png', 0,\n",
              "        \"don't be afraid to love again everyone is not like your ex\"],\n",
              "       [13894, 'img/13894.png', 0, 'putting bows on your pet'],\n",
              "       ...,\n",
              "       [36947, 'img/36947.png', 1,\n",
              "        'gays on social media: equality! body positivity! love love love! gays in real life: there is no place for her in our social circle'],\n",
              "       [16492, 'img/16492.png', 1,\n",
              "        \"having a bad day? you could be a siamese twin attached to a gay brother who has a date and you're the only one with an ass\"],\n",
              "       [15937, 'img/15937.png', 1,\n",
              "        'i hate muslims too they take their religion too seriously pathetic weaklings']],\n",
              "      dtype=object)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Kpi0gQ4TjEfe"
      },
      "source": [
        "import pandas as pd\n",
        "di = pd.read_pickle(r'/content/drive/My Drive/Colab Notebooks/Project/dict2000.txt')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1NgStwmwt7lB"
      },
      "source": [
        "import pandas as pd\n",
        "di = pd.read_pickle(r'/content/drive/My Drive/Colab Notebooks/Project/d3pkl.txt')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mmn5IBzW4cwr"
      },
      "source": [
        "import pandas as pd\n",
        "di = pd.read_pickle(r'/content/drive/My Drive/Colab Notebooks/Project/d4pkl.txt')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Q3k9Kli6jExF",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b67891b4-55b7-4b2d-e72f-551bb325af58"
      },
      "source": [
        "len(di)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1001"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "q2BzGQhEaDC2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b02df05a-a069-4ef9-d851-a4a30bab677d"
      },
      "source": [
        "#for converting .txt to dict\n",
        "import ast\n",
        "\n",
        "with open('/content/drive/My Drive/Colab Notebooks/Project/d-2.txt') as f: \n",
        "    data = f.read() \n",
        "  \n",
        "print(\"Data type before reconstruction : \", type(data)) \n",
        "print(data)\n",
        "\n",
        "d = ast.literal_eval(data) \n",
        "print(\"Data type after reconstruction : \", type(d)) \n",
        "print(d) "
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Data type before reconstruction :  <class 'str'>\n",
            "{'41086.png': 'A Man Wearing A Red Shirt And A Tie . ', '28613.png': 'A Man And Woman Sitting At A Table With A Cell Phone . ', '19248.png': 'A Woman Holding A Pink Umbrella In Front Of A Crowd . ', '07618.png': 'A Man In A Suit And Tie With A Camera . ', '43527.png': 'A Man Is Holding A Hot Dog In His Mouth . ', '37185.png': 'A Man In A Suit And Tie With A Cell Phone . ', '46172.png': 'A Group Of People Standing Around A Table With A Laptop . ', '18074.png': 'A Man Wearing A Suit And Tie With A Tie . ', '31960.png': 'A White Cat Sitting On A Shelf Next To A Cup . ', '71095.png': 'A Bunch Of Stuffed Animals Sitting On A Table . ', '61859.png': 'A Man In A Suit And Tie With A Tie . ', '83150.png': 'A Man Wearing A Suit And Tie With A Tie . ', '47918.png': 'A Man Is Sitting In Front Of A Laptop Computer . ', '50149.png': 'A Man Wearing A Suit And Tie With A Tie . ', '37204.png': 'A Man Is Sitting In Front Of A Laptop . ', '25170.png': 'A Person Holding A Cell Phone In Front Of A Car . ', '30591.png': 'A Man Is Standing In The Snow With A Snowboard . ', '26538.png': 'A Man In A Suit And Tie With A Phone . ', '98157.png': 'A Man And A Woman Are Sitting On A Bench . ', '34217.png': 'A Man With A Hat And A Tie On A Table . ', '32416.png': 'A Man Wearing A Suit And Tie With A Tie . ', '49758.png': 'A Man Is Holding A Baseball Bat In Front Of A Crowd . ', '15064.png': 'A Man With A Hat Sitting On A Bench . ', '94786.png': 'A Man Is Holding A Cell Phone In Front Of A Television . ', '32650.png': 'A Little Boy With A Toothbrush In His Mouth . ', '34078.png': 'A Street Sign With A Sign On The Side Of It . ', '29148.png': 'A Man Holding A Smart Phone In His Hand . ', '18926.png': 'A Man Wearing A Suit And Tie With A Tie . ', '38251.png': 'A Man In A Suit And Tie Is Sitting On A Cell Phone . ', '74920.png': 'A Black And White Dog Standing In A Field . ', '65240.png': 'A Young Boy Is Holding A Stuffed Animal . ', '91270.png': 'A Man Is Holding A Cell Phone In His Hand . ', '37819.png': 'A Woman In A Dress Shirt And A Tie . ', '45691.png': 'A Young Man Wearing A Red Shirt And A Tie . ', '35091.png': 'A Dog Is Sitting On A Couch With A Remote . ', '91537.png': 'A Man Is Holding A Cell Phone In Front Of A Building . ', '62710.png': 'A Small Dog Is Sitting On A Couch With A Remote . ', '76214.png': 'A Woman Wearing A Red Shirt And A Tie . ', '03681.png': 'A Man With A Hat And A Tie In His Mouth . ', '79053.png': 'A Man In A Suit And Tie With A Tie . ', '15493.png': 'A Man Wearing A Suit And Tie With A Tie . ', '49017.png': 'A Man In A Suit And Tie With A Tie . ', '45209.png': 'A Man Is Holding A Cell Phone In Front Of A Crowd . ', '52130.png': 'A Man Wearing A Suit And Tie With A Tie . ', '46510.png': 'A Man In A Black Shirt And A Black Tie ', '16520.png': 'A Man Holding A Cell Phone In Front Of A Crowd . ', '12675.png': 'A Man Holding A Stuffed Animal In His Mouth . ', '08395.png': 'A Man Is Sitting On A Bed With A Remote In His Hand . ', '75192.png': 'A Man Is Holding A Baseball Bat In Front Of A Crowd . ', '34806.png': 'A Dog Is Sitting On A Couch With A Frisbee . ', '28605.png': 'A Man Wearing A Suit And Tie With A Tie . ', '07465.png': 'A Man With A Hat And A Tie In His Hand . ', '53914.png': 'A Group Of People Sitting Around A Table Eating Food . ', '17392.png': 'A Man Holding A Cell Phone In Front Of A Man . ', '42675.png': 'A Person Holding A Smart Phone In Front Of A Building . ', '49785.png': 'A Man Is Holding A Baseball Bat And A Baseball Bat . ', '80957.png': 'A Man Holding A Smart Phone In Front Of A Building . ', '91536.png': 'A Man Wearing A Suit And Tie With A Tie . ', '69807.png': 'A Man With A Tie And A Tie In His Hand . ', '72945.png': 'A Group Of People Standing Around A Large Group Of People . ', '50894.png': 'A Bunch Of Different Types Of Bananas . ', '93610.png': 'A Man Wearing A Suit And Tie With A Tie . ', '09251.png': 'A Man Wearing A Suit And Tie With A Tie . ', '90753.png': 'A Man In A Suit And Tie With A Tie . ', '39645.png': 'A Man Wearing A Suit And Tie With A Tie . ', '24980.png': 'A Man With A Hat And A Tie In His Mouth . ', '31709.png': 'A Man Is Holding A Remote In His Hand . ', '93286.png': 'A Man Is Holding A Frisbee In A Field . ', '64781.png': 'A Man Is Holding A Baseball Bat In His Hand . ', '23514.png': 'A Bunch Of Different Types Of Scissors On A Table . ', '64320.png': 'A Person Holding A Pair Of Scissors In A Room . ', '10867.png': 'A Man And A Woman Are Walking On A Beach . ', '95803.png': 'A Man In A Suit And Tie Standing In Front Of A Building . ', '62791.png': 'A Group Of People Standing In Front Of A Store . ', '83215.png': 'A Black And White Cat Sitting On A Wooden Bench . ', '97604.png': 'A Man With A Baseball Bat Standing In Front Of A Building . ', '05716.png': 'A Black Dog Sitting On A Table Next To A Person . ', '81705.png': 'A Dog Is Laying On A Blanket On A Couch . ', '04187.png': 'A Man Is Cutting A Cake On A Table . ', '52619.png': 'A Man Wearing A Red Shirt And A Tie . ', '38720.png': 'A Black And White Photo Of A Person Holding A Snowboard . ', '15029.png': 'A Group Of People Standing Next To A Fire Hydrant . ', '08624.png': 'A Close Up Of A Bird That Is Sitting On A Tree . ', '41925.png': 'A Man Wearing A Tie And A Tie . ', '80932.png': 'A Man Holding A Smart Phone In His Hand . ', '45930.png': 'A Man And Woman Are Sitting In Front Of A Laptop . ', '19647.png': 'A Man Is Sitting On A Bench In Front Of A Crowd . ', '36842.png': 'A Man Wearing A Suit And Tie With A Tie . ', '31629.png': 'A Man Is Sitting On A Bench In The Street . ', '19426.png': 'A Man Is Flying A Kite In The Sky . ', '40953.png': 'A Close Up Of A Bird With A Bird On It ', '07469.png': 'A Man Holding A Smart Phone In Front Of A Television . ', '38209.png': 'A Man Is Holding A Banana In His Hand . ', '87235.png': 'A Man Is Sitting On A Bed With A Blanket . ', '42160.png': 'A Man Holding A Pair Of Scissors In Front Of A Crowd . ', '49670.png': 'A Man Wearing A Suit And Tie In A Room . ', '45126.png': 'A Man Wearing A Suit And Tie With A Tie . ', '86329.png': 'A Man With A Beard And A Tie In His Hand . ', '48930.png': 'A Person Wearing A Hat And A Tie . ', '12039.png': 'A Black And White Photo Of A Train On A Train Track ', '14632.png': 'A Man Is Holding A Banana In His Mouth . ', '64350.png': 'A Man Is Sitting On A Bench In A Room . ', '62084.png': 'A Man Wearing A Hat And A Tie . ', '28049.png': 'A Man In A Suit And Tie With A Tie . ', '56290.png': 'A Man Is Holding A Remote In His Hand . ', '28935.png': 'A Close Up Of A Street Sign With A Sign On It ', '35417.png': 'A Man With A Tie And A Tie In His Hand . ', '93082.png': 'A Man Wearing A Suit And Tie With A Tie . ', '56249.png': 'A Man In A Suit And Tie With A Tie . ', '23140.png': 'A Woman In A Suit And Tie With A Cell Phone . ', '68371.png': 'A Person Wearing A Suit And Tie In A Room . ', '78039.png': 'A Man Wearing A Suit And Tie With A Tie . ', '36014.png': 'A Large Group Of People In A Field With A Large Clock . ', '86273.png': 'A Man Holding A Baseball Bat In Front Of A Crowd . ', '23504.png': 'A Man And Woman In A Room With A Man And A Woman . ', '72608.png': 'A Man Is Sitting On A Couch With A Laptop . ', '10238.png': 'A Woman Wearing A Tie And A Tie . ', '35247.png': 'A Man Is Holding A Remote In His Hand . ', '46978.png': 'A Group Of Black Bears Sitting On A Rock . ', '40857.png': 'A Man In A Suit And Tie With A Tie . ', '93128.png': 'A Man Is Holding A Cell Phone In Front Of A Man . ', '63784.png': 'A Man Wearing A Suit And Tie With A Tie . ', '81296.png': 'A Man Standing Next To A Fire Hydrant On A Street . ', '37058.png': 'A Man In A Suit And Tie With A Tie . ', '34028.png': 'A Man Sitting On A Bench With A Cat . ', '98064.png': 'A Man Is Sitting In Front Of A Laptop Computer . ', '76483.png': 'A Woman Is Holding A Pink Umbrella In Her Hand . ', '92354.png': 'A Man Is Holding A Remote Control In His Hand . ', '71830.png': 'A Man Holding A Banana In His Hand . ', '06541.png': 'A Man With A Tie And A Tie In Front Of A Man . ', '21569.png': 'A Man Wearing A Suit And Tie With A Tie . ', '04863.png': 'A Man Is Holding A Cell Phone In His Hand . ', '87429.png': 'A Woman Wearing A Red Shirt And A Tie . ', '94350.png': 'A Man In A Black Shirt And A Tie ', '24189.png': 'A Man Is Sitting In Front Of A Laptop Computer . ', '26073.png': 'A Woman Wearing A Red Shirt And A Tie . ', '61908.png': 'A Close Up Of A Piece Of Cake With A Knife . ', '46310.png': 'A Man In A Suit And Tie Sitting On A Table . ', '89302.png': 'A Man Is Holding A Cell Phone In Front Of A Crowd . ', '85901.png': 'A Person Holding A Banana In A Hand . ', '26179.png': 'A Woman Is Sitting On A Horse In A Park . ', '59072.png': 'A Man In A Suit And Tie Standing In Front Of A Building . ', '41387.png': 'A Man Wearing A Suit And Tie With A Tie . ', '08415.png': 'A Bunch Of Different Types Of Luggage On A Table . ', '38547.png': 'A Man With A Cell Phone In Front Of A Mirror . ', '82674.png': 'A Man In A Suit And Tie With A Camera . ', '12608.png': 'A Car Parked Next To A Car With A Car . ', '02413.png': 'A Woman Wearing A Tie And A Tie . ', '51627.png': 'A Man In A Suit And Tie Standing In Front Of A Building . ', '26318.png': 'A Man Wearing A Hat And A Tie . ', '79584.png': 'A Man Wearing A Suit And Tie With A Hat On His Head . ', '09547.png': 'A Man Holding A Cell Phone In Front Of A Crowd . ', '69470.png': 'A Group Of People On A Beach With A Kite . ', '08546.png': 'A Man In A Suit And Tie Standing In Front Of A Tree . ', '52803.png': 'A Black And White Photo Of A Person On A Snowboard ', '63251.png': 'A Man Wearing A Suit And Tie With A Tie . ', '14823.png': 'A Man Is Standing In Front Of A Crowd Of People . ', '14520.png': 'A Man In A Black Shirt And A Tie ', '57602.png': 'A Black Bear Is Standing In A Tree . ', '46813.png': 'A Man Holding A Banana Up To A Man . ', '70368.png': 'A Man Is Sitting In Front Of A Laptop Computer . ', '40791.png': 'A Person Holding A Cell Phone In Front Of A Building . ', '65908.png': 'A Man With A Hat And A Tie In Front Of A Mirror . ', '15738.png': 'A Man Is Holding A Cell Phone In Front Of A Man . ', '63417.png': 'A Man In A Suit And Tie With A Candle . ', '51237.png': 'A Person Holding A Plate Of Food On A Table . ', '30286.png': 'A Black And White Photo Of A Black And White Photo . ', '07254.png': 'A Man Wearing A Suit And Tie With A Tie . ', '12837.png': 'A Close Up Of A Pair Of Scissors On A Table . ', '95814.png': 'A Man In A Suit And Tie With A Tie . ', '52716.png': 'A Small Dog Is Sitting On A Couch With A Remote . ', '65940.png': 'A Small Child Is Holding A Teddy Bear . ', '39175.png': 'A Man Is Holding A Cell Phone In His Hand . ', '68903.png': 'A Dog Is Sitting On A Couch With A Frisbee . ', '04287.png': 'A Woman With A Cell Phone In Her Hand . ', '26319.png': 'A Man Wearing A Suit And Tie With A Cell Phone . ', '24653.png': 'A Group Of People Walking On A Beach With A Dog . ', '13248.png': 'A Man Is Sitting On A Bench With A Phone . ', '41958.png': 'A Man Is Holding A Teddy Bear In Front Of A Crowd . ', '17054.png': 'A Man Wearing A Suit And Tie With A Tie . ', '52960.png': 'A Man Wearing A Suit And Tie With A Tie . ', '81245.png': 'A Man Is Sitting On A Bench In Front Of A Building . ', '90127.png': 'A Truck With A Red Truck Parked On The Side Of The Road . ', '03871.png': 'A Man In A Suit And Tie With A Camera . ', '71625.png': 'A Person Is Holding A Cell Phone In Front Of A Window . ', '84907.png': 'A Dog Is Sitting On A Table With A Dog . ', '09376.png': 'A Man Wearing A Suit And Tie With A Tie . ', '92408.png': 'A Man With A Tie And A Tie In His Hand . ', '41325.png': 'A Man Is Holding A Bunch Of Stuffed Animals . ', '57826.png': 'A Man With A Red Shirt And A Blue Shirt . ', '52318.png': 'A Man With A Cell Phone In His Hand . ', '63025.png': 'A Man Holding A Smart Phone In Front Of A Television . ', '35902.png': 'A Man Is Holding A Surfboard In The Ocean . ', '90573.png': 'A Person Holding A Smart Phone In Front Of A Wall . ', '73154.png': 'A Man And Woman In A Kitchen With A Large Cake . ', '19234.png': 'A Man With A Hat And A Tie In His Lap . ', '83764.png': 'A Man Is Sitting On A Couch Holding A Cell Phone . ', '30697.png': 'A Man Wearing A Suit And Tie With A Tie . ', '48162.png': 'A Man Wearing A Tie And A Tie . ', '18942.png': 'A Small Dog Is Sitting On A Table With A Cat . ', '23450.png': 'A Woman In A Red Shirt And A Red Tie . ', '01327.png': 'A Man Wearing A Suit And Tie With A Tie . ', '70194.png': 'A Man Wearing A Suit And Tie With A Tie . ', '65380.png': 'A Man Wearing A Suit And Tie With A Tie . ', '34652.png': 'A Woman And Woman Are Holding A Cell Phone . ', '15439.png': 'A Man Holding A Banana In His Hand . ', '83921.png': 'A Man Wearing A Suit And Tie With A Tie . ', '46857.png': 'A Woman Wearing A Red Shirt And A Tie . ', '69140.png': 'A Man Wearing A Suit And Tie With A Tie . ', '35016.png': 'A Man Is Holding A Cell Phone In His Mouth . ', '87351.png': 'A Man With A Beard And A Tie In His Mouth . ', '39452.png': 'A Person Holding A Hot Dog In A Bun . ', '75320.png': 'A Table With A Bunch Of Food On It ', '46983.png': 'A Man Is Standing In A Kitchen With A Microwave . ', '01875.png': 'A Group Of People Standing Around A Building With A Cell Phone . ', '79854.png': 'A Man Wearing A Hat And A Tie . ', '35271.png': 'A Man Wearing A Suit And Tie With A Tie . ', '79321.png': 'A Man Wearing A Suit And Tie With A Tie . ', '31426.png': 'A Man Is Sitting On A Wooden Bench . ', '26379.png': 'A Pizza With A Knife And A Knife On A Plate . ', '81902.png': 'A Man Wearing A Suit And Tie With A Tie . ', '81602.png': 'A Truck With A Red Truck Parked On The Side Of A Road . ', '78631.png': 'A Stop Sign With A Blue Sky In The Background . ', '90365.png': 'A Man Wearing A Suit And Tie With A Tie . ', '63187.png': 'A Man Is Holding A Cell Phone In Front Of A Television . ', '15893.png': 'A Man Wearing A Suit And Tie With A Tie . ', '60741.png': 'A Man Is Sitting On A Bench In The Street . ', '78401.png': 'A Man Wearing A Red Shirt And A Tie . ', '84152.png': 'A Young Girl Is Sitting On A Bed With A Laptop . ', '46952.png': 'A Sign That Has A Sign On It . ', '69237.png': 'A Small Child Is Sitting On A Small Chair ', '59260.png': 'A Group Of People Standing Around A Table With A Sign . ', '51978.png': 'A Person Holding A Donut In A Box . ', '19027.png': 'A Woman Is Holding A Nintendo Wii Game Controller . ', '71645.png': 'A Man Holding A Tennis Racket In Front Of A Crowd . ', '06194.png': 'A Person Sitting On A Table With A Laptop On It . ', '50723.png': 'A Woman In A Dress Shirt And A Tie . ', '07839.png': 'A Woman In A Dress Shirt And A Tie . ', '52316.png': 'A Man In A Suit And Tie With A Tie . ', '97842.png': 'A Man Wearing A Suit And Tie With A Tie . ', '28976.png': 'A Man Is Standing In Front Of A Store . ', '46198.png': 'A Man And Woman In A Room With A Man And A Woman . ', '14837.png': 'A Man Wearing A Hat And A Tie In His Mouth . ', '71206.png': 'A Man With A Hat And A Tie In His Mouth . ', '30824.png': 'A Little Girl Sitting On A Table With A Cat . ', '07931.png': 'A Bunch Of Stuffed Animals Sitting On A Table . ', '02983.png': 'A Man Wearing A Suit And Tie With A Phone . ', '15674.png': 'A Man In A Suit And Tie With A Tie . ', '64193.png': 'A Man Wearing A Suit And Tie With A Tie . ', '65378.png': 'A Group Of People Standing Around A Building With A Sign . ', '28765.png': 'A Man Wearing A Suit And Tie With A Tie . ', '30462.png': 'A Man Wearing A Suit And Tie With A Tie . ', '46301.png': 'A Man Is Laying On A Bed With A Blanket . ', '32806.png': 'A Man With A Tie And A Tie In His Mouth . ', '59362.png': 'A Man In A Suit And Tie With A Tie . ', '34915.png': 'A Man Holding A Banana In His Mouth . ', '97102.png': 'A Man With A Hat And A Tie On A Leash . ', '71486.png': 'A Man In A Suit And Tie With A Tie . ', '56281.png': 'A Man Is Holding A Smart Phone In Front Of A Television . ', '69024.png': 'A Man And A Woman With A Tie And A Tie . ', '86910.png': 'A Man And Woman Standing In Front Of A Building . ', '97413.png': 'A Man Wearing A Hat And A Tie . ', '97564.png': 'A Woman Holding A Banana In Her Hand . ', '79806.png': 'A White Plate With A Bunch Of White Flowers . ', '12309.png': 'A Man With A Hat And A Tie In His Hand . ', '17598.png': 'A Close Up Of A Red And White Plate With A Banana . ', '61032.png': 'A Man With A Hat And A Tie In His Hand . ', '62384.png': 'A Dog Wearing A Hat And A Tie . ', '52743.png': 'A Man Is Sitting In A Room With A Bag Of Luggage . ', '52904.png': 'A Young Boy Is Brushing His Teeth In The Mirror . ', '06325.png': 'A Man Holding A Cell Phone In Front Of A Crowd . ', '17483.png': 'A Man Holding A Smart Phone In His Hand . ', '21943.png': 'A Man With A Hat And A Tie On A Street . ', '28195.png': 'A Man In A Suit And Tie With A Tie . ', '46315.png': 'A Close Up Of A Person Holding A Remote ', '10256.png': 'A Man In A Suit And Tie With A Tie . ', '19650.png': 'A Man Is Holding A Tennis Racket In His Hand . ', '07523.png': 'A Person Is Holding A Banana In A Bowl . ', '24905.png': 'A Man Is Sitting On A Motorcycle In A Parking Lot . ', '69017.png': 'A Man Is Holding A Piece Of Cake On A Train . ', '09413.png': 'A Man Is Holding A Cell Phone In His Mouth . ', '37140.png': 'A Man Wearing A Suit And Tie With A Tie . ', '58164.png': 'A Woman Wearing A Red Shirt And A Red Tie . ', '01578.png': 'A Group Of People Are Playing With A Frisbee . ', '12460.png': 'A Man Sitting On A Bench With A Cat On His Lap . ', '73514.png': 'A Man Is Holding A Cake With A Sword . ', '28197.png': 'A Bunch Of Different Types Of Different Types Of Luggage . ', '28043.png': 'A Person Is Holding A Piece Of Cake . ', '32401.png': 'A Man Is Holding A Remote In Front Of A Television . ', '34095.png': 'A Black And White Cat Sitting On A Wooden Table . ', '52089.png': 'A Close Up Of A Cell Phone With A Cell Phone . ', '25103.png': 'A Man Is Jumping In The Air With A Skateboard . ', '41389.png': 'A Man Wearing A Suit And Tie With A Tie . ', '93124.png': 'A Table With A Bunch Of Different Types Of Flowers . ', '32985.png': 'A Man With A Hat And A Tie In His Hand . ', '68549.png': 'A Man With A Tie And A Tie In His Hand . ', '05189.png': 'A Person Is Holding A Cell Phone In Front Of A Car . ', '96078.png': 'A Man Is Holding A Cell Phone In Front Of A Crowd . ', '18490.png': 'A Man With A Tie In His Mouth . ', '03795.png': 'A Man Wearing A Suit And Tie With A Tie . ', '86512.png': 'A Cat Is Sitting On A Chair With A Remote . ', '32160.png': 'A Man Is Holding A Pair Of Scissors . ', '47031.png': 'A Person Holding A Piece Of Cake On A Table . ', '50142.png': 'A Man Wearing A Suit And Tie With A Tie . ', '58310.png': 'A Group Of People Sitting Around A Table With A Laptop . ', '42510.png': 'A Man Wearing A Suit And Tie With A Tie . ', '37542.png': 'A Teddy Bear Wearing A Red Bow Tie . ', '41795.png': 'A Man Wearing A Suit And Tie With A Tie . ', '18937.png': 'A Display Of A Store With A Bunch Of Different Types Of Luggage . ', '14037.png': 'A Small Bird Sitting On A Tree Branch . ', '90568.png': 'A Man With A Tie And A Tie In His Mouth . ', '08534.png': 'A Man In A Suit And Tie With A Tie . ', '42751.png': 'A Man Is Holding A Piece Of Cake On A Table . ', '69518.png': 'A Truck With A Bunch Of Green And Yellow Tires ', '97162.png': 'A Man Is Holding A Cell Phone In His Hand . ', '31560.png': 'A Man Holding A Cell Phone In Front Of A Window . ', '14893.png': 'A Man In A Suit And Tie Standing In Front Of A Building . ', '45371.png': 'A Man Holding A Bunch Of Bananas On A Wooden Table . ', '54367.png': 'A Man Is Holding A Sign In Front Of A Building . ', '35708.png': 'A Bunch Of Stuffed Animals Sitting On A Table . ', '97543.png': 'A Man In A Suit And Tie In Front Of A Man . ', '36870.png': 'A Bunch Of People Sitting On A Bench In The Background . ', '12570.png': 'A Small Child Is Wearing A Tie And A Tie . ', '41265.png': 'A Red Fire Hydrant In The Middle Of A Field . ', '76951.png': 'A Black And White Photo Of A Cow With A Camera . ', '16837.png': 'A Man Wearing A Suit And Tie With A Tie . ', '30157.png': 'A Close Up Of A Person Standing In Front Of A Building ', '76498.png': 'A Group Of People Standing Next To A Large Clock . ', '04783.png': 'A Man In A Suit And Tie Standing In Front Of A Television . ', '59024.png': 'A Man Wearing A Hat And A Tie . ', '64051.png': 'A Man Is Holding A Baseball Bat On A Field . ', '90148.png': 'A Woman Is Holding A Cell Phone In Her Hand . ', '85092.png': 'A Man Wearing A Suit And Tie With A Tie . ', '41697.png': 'A Man Wearing A Suit And Tie With A Tie . ', '17860.png': 'A Cat Is Sitting On A Couch Next To A Cat . ', '24958.png': 'A Man Wearing A Hat And A Tie . ', '97160.png': 'A Man Is Holding A Cell Phone In Front Of A Man . ', '97860.png': 'A Man In A Suit And Tie With A Tie . ', '63524.png': 'A Man Holding A Cell Phone In His Hand . ', '70189.png': 'A Woman In A Dress Shirt And Tie With A Tie . ', '32587.png': 'A Young Boy Is Brushing His Teeth In The Mirror . ', '12967.png': 'A Group Of People Walking Down A Street Next To A Building . ', '67915.png': 'A Man And A Woman Sitting On A Couch With A Cell Phone . ', '03854.png': 'A Man Wearing A Suit And Tie With A Tie . ', '76938.png': \"A Person 'S Hand Is Sitting On A Motorcycle . \", '65037.png': 'A Man Wearing A Hat And A Hat . ', '39285.png': 'A Man Holding A Cell Phone In Front Of A Crowd . ', '67041.png': 'A Man Wearing A Suit And Tie With A Tie . ', '51680.png': 'A Person Holding A Cell Phone In Front Of A Building . ', '62981.png': 'A Man Wearing A Suit And Tie With A Tie . ', '42598.png': 'A Piece Of Cake On A Plate Next To A Cup Of Coffee . ', '05471.png': 'A Man In A Suit And Tie Standing In Front Of A Crowd . ', '97105.png': 'A Man Wearing A Suit And Tie With A Tie . ', '53160.png': 'A Group Of People Standing Next To A Truck . ', '70821.png': 'A Black And White Bird Sitting On A Tree Branch . ', '62831.png': 'A Dog Is Laying On A Blanket On A Couch . ', '78904.png': 'A Man Wearing A Suit And Tie With A Tie . ', '78164.png': 'A Man Is Holding A Bag Of Luggage In A Store . ', '68417.png': 'A Man In A Suit And Tie Sitting On A Table . ', '68521.png': 'A Man In A Hat Is Holding A Banana . ', '43961.png': 'A Man Wearing A Suit And Tie With A Tie . ', '76423.png': 'A Man Wearing A Suit And Tie With A Tie . ', '71963.png': 'A Group Of People Standing Around A Baseball Game . ', '07824.png': 'A Man Is Holding A Cell Phone In His Hand . ', '62850.png': 'A Man Is Holding A Cell Phone In Front Of A Building . ', '23109.png': 'A Man And Woman Are Holding A Cell Phone . ', '96804.png': 'A Brown And White Cow Is Eating From A Trough . ', '38712.png': 'A Stop Sign With A Stop Sign On It . ', '92541.png': 'A Brown And White Dog Laying On A Bed . ', '89206.png': 'A Small Dog Is Sitting On A Table . ', '42167.png': 'A Group Of People Standing Around A Baseball Game . ', '14679.png': 'A Man Is Holding A Cell Phone In Front Of A Laptop . ', '39416.png': 'A Little Girl Holding A Cell Phone In Front Of A Crowd . ', '62891.png': 'A Close Up Of A Piece Of Cake With A Knife . ', '09185.png': 'A Man Is Holding A Cell Phone In His Hand . ', '58479.png': 'A Woman Wearing A Red Shirt And A Tie . ', '26315.png': 'A Small Child Is Holding A Baby In A Bed . ', '13520.png': 'A Man Wearing A Suit And Tie With A Tie . ', '69524.png': 'A Man In A Black Shirt And A Black Tie ', '45931.png': 'A Man Wearing A Suit And Tie With A Tie . ', '27041.png': 'A Man With A Beard And A Tie In His Hand . ', '27801.png': 'A Man Wearing A Suit And Tie With A Tie . ', '95024.png': 'A Man With A Red Shirt And A Tie . ', '93718.png': 'A Man With A Hat And A Tie In Front Of A Crowd . ', '89072.png': 'A Man Holding A Baseball Bat And A Crowd Of People . ', '87615.png': 'A Black And White Photo Of A Black And White Photo ', '96235.png': 'A White And White Dog With A Red Bow On A Leash . ', '35692.png': 'A Man Is Sitting On A Bench With A Man In His Lap . ', '60389.png': 'A Man Wearing A Red Shirt And A Tie . ', '78624.png': 'A Man Standing Next To A Man Holding A Cell Phone . ', '83509.png': 'A Man Is Holding A Skateboard In Front Of A Building . ', '87645.png': 'A Black And White Photo Of A Person Holding A Cell Phone . ', '41362.png': 'A Man Wearing A Hat And A Tie . ', '75139.png': 'A Man And Woman In A Room With A Man And A Woman . ', '67835.png': 'A Man And Woman Are Holding A Cell Phone . ', '04281.png': 'A Black And White Photo Of A Man In A Suit And Tie . ', '14920.png': 'A Woman Is Holding A Teddy Bear In A Bed . ', '16082.png': 'A Man With A Hat And A Tie In His Lap . ', '72816.png': 'A Man With A Hat And A Tie In His Mouth . ', '36450.png': 'A Man In A Kitchen With A Microwave And A Microwave . ', '84106.png': 'A Man Is Holding A Cell Phone While Standing Next To A Building . ', '38724.png': 'A Group Of People Standing Around A Table With A Bunch Of Bananas . ', '97153.png': 'A Person Wearing A Hat And A Tie . ', '35620.png': 'A Close Up Of A Banana On A Table ', '67439.png': 'A Man With A Cell Phone In His Hand . ', '75104.png': 'A Man In A Suit And Tie With A Tie . ', '56981.png': 'A Clock Tower With A Clock On Top Of It . ', '56130.png': 'A Woman Holding A Cell Phone In Front Of A Woman . ', '36725.png': 'A Bunch Of Different Types Of Different Types Of Scissors . ', '27963.png': 'A Black And White Bird Sitting On A Tree Branch . ', '92643.png': 'A Man Wearing A Suit And Tie With A Tie . ', '94026.png': 'A Man Is Standing In Front Of A Crowd Of People . ', '15926.png': 'A Man With A Tie And A Tie In His Hand . ', '90752.png': 'A Group Of Men Standing Next To Each Other On A Tennis Court . ', '71305.png': 'A Man Holding A Smart Phone In His Mouth . ', '83964.png': 'A Woman In A Dress And A Tie With A Tie . ', '84392.png': 'A Man And Woman Are Eating A Cake . ', '30598.png': 'A Man Wearing A Hat And A Tie . ', '62815.png': 'A Man Wearing A Suit And Tie With A Tie . ', '13968.png': 'A Man Wearing A Suit And Tie With A Tie . ', '25436.png': 'A Man Wearing A Suit And Tie With A Tie . ', '17385.png': 'A Man Wearing A Hat And A Tie . ', '47581.png': 'A Person Holding A Piece Of Cake On A Table . ', '52768.png': 'A Cup Of Coffee And A Cup Of Coffee . ', '60827.png': 'A Large Clock On A Pole With A Clock On It . ', '65298.png': 'A Bowl Of Soup With A Spoon In It . ', '91462.png': 'A Man Is Sitting In Front Of A Laptop Computer . ', '48269.png': 'A Man Sitting On A Couch With A Laptop On His Lap . ', '18940.png': 'A Man Wearing A Red Shirt And A Tie . ', '63709.png': 'A Man Wearing A Suit And Tie With A Tie . ', '26184.png': 'A Man Wearing A Suit And Tie With A Tie . ', '09851.png': 'A Plate Of Food With A Spoon And A Fork . ', '73924.png': 'A Woman Wearing A Red Shirt And A Tie . ', '56870.png': 'A Man In A Suit And Tie In Front Of A Television . ', '58209.png': 'A Man Is Sitting On A Skateboard In A Room . ', '69521.png': 'A Man Wearing A Suit And Tie With A Tie . ', '72396.png': 'A Man In A Suit And Tie With A Tie . ', '43089.png': 'A Woman Wearing A Red Shirt And A Tie . ', '07651.png': 'A Man Is Sitting On A Couch With A Stuffed Animal . ', '28315.png': 'A Man Wearing A Suit And Tie With A Tie . ', '85136.png': 'A Man Is Sitting In Front Of A Window . ', '94153.png': 'A Man Wearing A Suit And Tie With A Tie . ', '12576.png': 'A Man Is Sitting On A Bed With A Laptop . ', '03178.png': 'A Man Wearing A Suit And Tie With A Tie . ', '78035.png': 'A Pizza With A Bunch Of Different Types Of Vegetables . ', '32491.png': 'A Man With A Beard And A Tie In His Mouth . ', '42931.png': 'A Cat Is Sitting On A Wooden Table . ', '91065.png': 'A Man Wearing A Suit And Tie With A Tie . ', '28957.png': 'A Red And White Photo Of A Red And White Photo . ', '53927.png': 'A Man With A Hat And A Hat On His Shoulder . ', '28134.png': 'A Group Of Men Standing Next To Each Other Holding A Cell Phone . ', '85916.png': 'A Car Parked Next To A Car Parked On A Street . ', '17230.png': 'A Man Is Holding A Cell Phone In Front Of A Crowd . ', '50186.png': 'A Black And White Dog Sitting On A Black Suitcase . ', '21305.png': 'A Man Is Flying A Kite In The Sky . ', '76320.png': 'A Man With A Hat And A Tie In His Hand . ', '14086.png': 'A Man Is Holding A Cell Phone In Front Of A Crowd . ', '73026.png': 'A Group Of People Sitting On A Beach With A Surfboard . ', '86129.png': 'A Man Is Holding A Bunch Of Bananas . ', '64285.png': 'A Dog Is Sitting On A Blue Blanket . ', '46785.png': 'A Man Is Sitting On A Cell Phone . ', '20691.png': 'A Man Is Eating A Donut With A Fork . ', '97823.png': 'A Man Wearing A Suit And Tie With A Tie . ', '70614.png': 'A Group Of People Standing Around A Table With A Bunch Of Bananas . ', '72340.png': 'A Man In A Suit And Tie Sitting On A Bench . ', '63092.png': 'A Man Is Sitting On A Couch With A Cell Phone . ', '97810.png': 'A Dog That Is Sitting On A Bench . ', '94723.png': 'A Man Wearing A Suit And Tie With A Tie . ', '09156.png': 'A Man In A Suit And Tie With A Tie . ', '81403.png': 'A Man And Woman Sitting On A Bench With A Teddy Bear . ', '72914.png': 'A Man Is Holding A Cell Phone In Front Of A Building . ', '47208.png': 'A Man Is Sitting On A Bench With A Frisbee . ', '50148.png': 'A Man Sitting On A Bench With A Banana . ', '16935.png': 'A Man Wearing A Suit And Tie With A Tie . ', '36508.png': 'A Man Wearing A Hat And A Tie . ', '39401.png': 'A Man In A Suit And Tie With A Camera . ', '48062.png': 'A Man Wearing A Hat And A Tie . ', '91358.png': 'A Man Wearing A Suit And Tie With A Tie . ', '83256.png': 'A Young Boy Wearing A Red Shirt And A Red Tie . ', '56143.png': 'A Man Wearing A Hat And A Tie . ', '16280.png': 'A Man Wearing A Suit And Tie With A Tie . ', '37018.png': 'A Black And White Cat Laying On A Bed . ', '74126.png': 'A Man Is Holding A Cell Phone In Front Of A Crowd . ', '38190.png': 'A Man Is Sitting On A Bench In A Room . ', '49387.png': 'A Man In A Suit And Tie With A Tie . ', '72506.png': 'A Group Of Cows That Are Standing In The Grass . ', '79258.png': 'A Bird With A Bird Sitting On A Branch . ', '80736.png': 'A Close Up Of A Pair Of Scissors On A Table . ', '02965.png': 'A Man Wearing A Suit And Tie With A Tie . ', '27685.png': 'A Man Is Holding A Cell Phone In Front Of A Building . ', '59043.png': 'A Man In A Suit And Tie With A Camera . ', '46137.png': 'A Man Holding A Cell Phone In His Hand . ', '87196.png': 'A Man Is Holding A Cell Phone In His Hand . ', '95687.png': 'A Man With A Hat And A Tie In His Lap . ', '38527.png': 'A Man Wearing A Tie And A Tie . ', '71562.png': 'A Man Is Standing In Front Of A Building With A Skateboard . ', '30629.png': 'A Man And Woman Sitting At A Table With A Laptop . ', '38417.png': 'A Man With A Hat Sitting On A Bench . ', '45289.png': 'A Black And White Photo Of A Toilet And A Cup . ', '14793.png': 'A Man And Woman Are Playing A Video Game . ', '65103.png': 'A Woman Is Sitting On A Bed With A Cat . ', '49728.png': 'A Woman Wearing A Red Shirt And A Tie . ', '72486.png': 'A Large Cake With A Bunch Of Bananas On It ', '53820.png': 'A Group Of People Sitting On A Bench With A Dog . ', '49726.png': 'A Man In A Black Shirt And A Black Tie . ', '09682.png': 'A Woman Is Holding A Cell Phone While Standing Next To A Woman . ', '25917.png': 'A Train Traveling Down A Track Next To A Road . ', '16089.png': 'A Man Standing In Front Of A Large Clock . ', '68019.png': 'A Man Wearing A Suit And Tie With A Tie . ', '70495.png': 'A Man Is Wearing A Suit And Tie . ', '67491.png': 'A Small Teddy Bear Sitting On A Shelf Next To A Toilet . ', '80945.png': 'A Man In A Suit And Tie With A Hat . ', '23091.png': 'A Small Child Is Sitting On A Table With A Piece Of Cake . ', '21593.png': 'A Man In A Suit And Tie With A Tie . ', '72195.png': 'A Man Is Sitting In Front Of A Laptop Computer . ', '30695.png': 'A Man Is Holding A Cell Phone In Front Of A Man . ', '69043.png': 'A Close Up Of A Pair Of Scissors ', '59812.png': 'A Man Is Holding A Frisbee In His Hand . ', '28067.png': 'A Man Wearing A Suit And Tie With A Tie . ', '13469.png': 'A Man Is Sitting On A Couch With A Cat . ', '39784.png': 'A Black And White Photo Of A White And White Photo ', '62198.png': 'A Man Wearing A Suit And Tie With A Tie . ', '50871.png': 'A Woman With A Red Shirt And A Tie . ', '74096.png': 'A Man Sitting On A Bench With A Cat . ', '58769.png': 'A Group Of Motorcycles Parked In A Field . ', '67138.png': 'A Man With A Hat Sitting On A Bench . ', '75086.png': 'A Woman Wearing A Red Shirt And A Tie . ', '78563.png': 'A Group Of People Standing In Front Of A Building . ', '68971.png': 'A Man In A Suit And Tie With A Tie . ', '21693.png': 'A Man Is Holding A Cell Phone In Front Of A Crowd . ', '05297.png': 'A Man Wearing A Suit And Tie In Front Of A Clock . ', '86401.png': 'A Man Is Holding A Cell Phone In Front Of A Building . ', '43197.png': 'A Man Is Holding A Stuffed Animal In A Room . ', '08597.png': 'A Man Is Standing In Front Of A Building . ', '67054.png': 'A Man In A Suit And Tie With A Camera . ', '84721.png': 'A Woman Wearing A Hat And A Tie . ', '91654.png': 'A Woman And Woman Are Sitting On A Couch . ', '58190.png': 'A Man With A Hat And A Tie On His Head . ', '54019.png': 'A Close Up Of A Person Holding A Banana ', '68512.png': 'A Pair Of Scissors Sitting On A Wall Next To A Wall . ', '59672.png': 'A Man With A Hat And A Tie In His Mouth . ', '83402.png': 'A Man Is Holding A Laptop In Front Of A Laptop . ', '45708.png': 'A Man Is Laying On A Bed With A Blanket . ', '46312.png': 'A Man Holding A Baby In A Brown And White Cat . ', '98305.png': 'A Man With A Beard And A Tie In His Mouth . ', '39421.png': 'A Man Wearing A Suit And Tie With A Tie . ', '93071.png': 'A Woman Is Sitting On A Bed With A Laptop . ', '69528.png': 'A Person Wearing A Red Shirt And A Tie ', '90861.png': 'A Group Of People Standing Around A Table With A Cake . ', '40539.png': 'A Couple Of Birds Sitting On A Rock . ', '06374.png': 'A Group Of People Standing Around A Building With A Clock . ', '12376.png': 'A Man Wearing A Suit And Tie With A Tie . ', '27134.png': 'A Man Is Sitting In Front Of A Table With A Cake . ', '46852.png': 'A Man With A Tie And A Tie In His Hand . ', '65349.png': 'A Woman Is Holding A Cell Phone In Her Hand . ', '91208.png': 'A Man Wearing A Suit And Tie With A Tie . ', '82079.png': 'A Man Holding A Bat And A Woman Holding A Cell Phone . ', '74380.png': 'A Man Is Holding A Cell Phone In His Hand . ', '53740.png': 'A Man Wearing A Suit And Tie With A Tie . ', '09841.png': 'A Man Wearing A Suit And Tie With A Tie . ', '58349.png': 'A Plate Of Food With A Spoon And A Fork . ', '74356.png': 'A Man Wearing A Suit And Tie With A Tie . ', '48396.png': 'A Person Holding A Banana In A Package . ', '95403.png': 'A Woman In A Red Shirt And A Tie ', '06934.png': 'A Man Sitting On A Bench With A Cat On His Lap . ', '04859.png': 'A Man Wearing A Suit And Tie With A Tie . ', '29178.png': 'A Close Up Of A Dog With A Hat On It ', '69351.png': 'A Small Brown Dog Is Laying On A Bed . ', '13798.png': 'A Man Is Holding A Knife And A Bottle Of Wine . ', '91320.png': 'A Group Of People Sitting Around A Table With A Laptop . ', '06579.png': 'A Man And Woman Eating A Donut In A Restaurant . ', '47012.png': 'A Man Holding A Donut In Front Of A Crowd . ', '54632.png': 'A Woman Wearing A Suit And Tie With A Tie . ', '95861.png': 'A Dog Is Sitting On A Couch With A Cat . ', '32971.png': 'A Man Wearing A Suit And Tie With A Tie . ', '91064.png': 'A Man Is Holding A Cell Phone In Front Of A Building . ', '94506.png': 'A Man In A Red Shirt And A Red Tie . ', '82461.png': 'A Black And White Photo Of A Man Standing Next To A Building . ', '94305.png': 'A Woman Is Holding A Cell Phone In Her Hand . ', '64301.png': 'A Close Up Of A Cake With A Candle On It ', '48697.png': 'A Man Is Holding A Cell Phone In His Hand . ', '28435.png': 'A Man In A Suit And Tie With A Camera . ', '62381.png': 'A Young Girl Wearing A Red Bow Tie . ', '34756.png': 'A Man Holding A Baseball Bat In Front Of A Crowd . ', '79815.png': 'A Man Wearing A Hat And A Tie . ', '32591.png': 'A Man Is Sitting On A Bench In Front Of A Building . ', '62184.png': 'A Man With A Tie And A Tie In His Mouth . ', '59328.png': 'A Man Wearing A Suit And Tie With A Tie . ', '32647.png': 'A Close Up Of A Plate Of Food With A Fork . ', '01598.png': 'A Dog Is Sitting On A Couch With A Cat On It . ', '89750.png': 'A Person Wearing A Tie And A Tie . ', '93215.png': 'A Close Up Of A Black And White Photo Of A Cake ', '41063.png': 'A Man Wearing A Suit And Tie In A Room . ', '56183.png': 'A Person Wearing A Red Shirt And A Red Tie ', '42380.png': 'A Man Is Holding A Pair Of Scissors . ', '21468.png': 'A Man Wearing A Tie And A Tie . ', '06539.png': 'A Man Wearing A Red Shirt And A Tie . ', '80162.png': 'A Man With A Hat And A Tie In Front Of A Television . ', '94071.png': 'A Man Standing Next To A Fire Hydrant . ', '50927.png': 'A Woman In A Dress And A Tie With A Pink Tie . ', '52490.png': 'A Man Is Holding A Cell Phone In Front Of A Building . ', '87695.png': 'A Man Holding A Teddy Bear In A Room . ', '30721.png': 'A Man In A Suit And Tie With A Hat . ', '23851.png': 'A Man Wearing A Suit And Tie With A Tie . ', '78104.png': 'A Woman Is Holding A Cell Phone In Front Of A Building . ', '97386.png': 'A Man With A Tie And A Tie In His Mouth . ', '16820.png': 'A Man With A Hat And A Tie In The Background . ', '20684.png': 'A Man Wearing A Suit And Tie With A Tie . ', '80316.png': 'A Group Of People Sitting Around A Table With A Cake . ', '93725.png': 'A Dog Is Sitting On A Couch With A Frisbee . ', '45630.png': 'A Woman Is Holding A Cell Phone In Her Hand . ', '13270.png': 'A Man Wearing A Red Shirt And A Tie . ', '96150.png': 'A Man In A Suit And Tie Standing In Front Of A Building . ', '87140.png': 'A Woman In A Dress And A Tie With A Red Tie . ', '46352.png': 'A Man In A Suit And Tie With A Sword . ', '64918.png': 'A Dog Is Sitting On A Couch With A Frisbee . ', '71348.png': 'A Man Wearing A Tie And A Tie . ', '96734.png': 'A Woman And Woman Sitting At A Table Eating A Meal . ', '06543.png': 'A Man Is Jumping A Skateboard On A Ramp . ', '49087.png': 'A Close Up Of A Street Sign With A Clock On It . ', '08452.png': 'A Man Wearing A Suit And Tie With A Tie . ', '82076.png': 'A Person Is Holding A Piece Of Cake . ', '43192.png': 'A Black And White Cat Sitting On A Wooden Table . ', '58327.png': 'A Small White Cake With A Knife And A Knife . ', '02459.png': 'A Man Is Holding A Piece Of Cake On A Table . ', '03984.png': 'A Man In A Suit And Tie With A Tie . ', '29503.png': 'A Man With A Hat Sitting On A Bench . ', '34518.png': 'A Man Is Holding A Baseball Bat In His Hand . ', '94162.png': 'A Man Is Holding A Cell Phone In Front Of A Television . ', '51403.png': 'A Man Wearing A Suit And Tie With A Tie . ', '31758.png': 'A Man Is Holding A Cell Phone In Front Of A Store . ', '17834.png': 'A Man Is Holding A Baseball Bat In His Hand . ', '49786.png': 'A Group Of People Standing Around A Large Group Of People . ', '40563.png': 'A Man Is Sitting On A Bench With A Person . ', '65807.png': 'A Man In A Suit And Tie With A Tie . ', '40792.png': 'A Young Boy Is Holding A Remote Control . ', '09267.png': 'A Man Wearing A Suit And Tie With A Tie . ', '13650.png': 'A Bunch Of Bananas On A Wooden Table . ', '68721.png': 'A Man Holding A Cell Phone In Front Of A Car . ', '32957.png': 'A Man Is Sitting On A Table With A Teddy Bear . ', '31547.png': 'A Large Group Of Different Types Of Different Types Of Scissors . ', '71524.png': 'A Person Is Holding A Cell Phone In Their Hands . ', '06213.png': 'A Man Holding A Baseball Bat And A Man . ', '56081.png': 'A Small Bird Sitting On A Table Next To A Window . ', '02194.png': 'A Man And A Woman Are Looking At A Giraffe . ', '72891.png': 'A Man With A Beard And A Tie In His Mouth . ', '56712.png': 'A Man Holding A Remote In His Hand . ', '35614.png': 'A Man Wearing A Suit And Tie With A Tie . ', '30957.png': 'A Woman Wearing A Tie And A Tie . ', '46507.png': 'A Man With A Hat And A Tie On A Table . ', '19074.png': 'A Man Wearing A Suit And Tie With A Tie . ', '38549.png': 'A Group Of People Sitting On A Bench In Front Of A Building . ', '60598.png': 'A Group Of People Standing Next To A Bunch Of Bananas . ', '80126.png': 'A Man Is Holding A Surfboard In The Ocean . ', '76815.png': 'A Man Holding A Cell Phone In Front Of A Building . ', '98103.png': 'A Man Wearing A Suit And Tie With A Tie . ', '43956.png': 'A Man In A Suit And Tie With A Camera . ', '54672.png': 'A Man Wearing A Suit And Tie With A Tie . ', '07391.png': 'A Man Holding A Cell Phone In Front Of A Crowd . ', '29158.png': 'A Man With A Hat And A Tie In His Lap . ', '56709.png': 'A Man With A Hat And A Tie In His Mouth . ', '21648.png': 'A Man Holding A Tennis Racket In Front Of A Crowd . ', '76208.png': 'A Close Up Of A Cow In A Field ', '95103.png': 'A Man Wearing A Suit And Tie With A Tie . ', '09486.png': 'A Woman In A Dress Shirt And A Tie . ', '98702.png': 'A Man With A Cell Phone In His Hand . ', '19643.png': 'A Close Up Of A Cow In A Fenced Area ', '94802.png': \"A Black And White Photo Of A Person 'S Feet \", '23905.png': 'A Man Is Holding A Cell Phone In Front Of A Building . ', '67892.png': 'A Woman Holding A Cell Phone In Her Hand . ', '24038.png': 'A Man Is Sitting In Front Of A Laptop Computer . ', '96431.png': 'A Man Is Holding A Donut In His Hand . ', '82045.png': 'A Person Is Holding A Piece Of Cake On A Table . ', '87340.png': 'A Man Sitting On A Bench With A Cat On His Lap . ', '31268.png': 'A Man Is Holding A Cell Phone In Front Of A Crowd . ', '82359.png': 'A Man Is Sitting On A Bench With A Cell Phone . ', '21043.png': 'A Man Wearing A Suit And Tie With A Tie . ', '07853.png': 'A Dog Is Sitting On A Green Chair . ', '35276.png': 'A Man With A Hat And A Hat On A Cell Phone . ', '96720.png': 'A Black Bear Is Standing In A Field . ', '53980.png': 'A Black And White Dog With A Frisbee In Its Mouth . ', '02956.png': 'A Young Boy Is Laying On A Bed With A Remote . ', '54317.png': 'A Man And Woman In A Room With A Man And A Woman . ', '05973.png': 'A Man And A Woman Eating A Piece Of Cake . ', '75319.png': 'A Man With A Hat And A Tie In His Mouth . ', '90632.png': 'A Man Wearing A Suit And Tie With A Tie . ', '72968.png': 'A Man Standing In Front Of A Cake With A Candle . ', '38647.png': 'A Man Wearing A Suit And Tie With A Tie . ', '42810.png': 'A Man With A Beard And A Tie In His Mouth . ', '76910.png': 'A Man With A Hat And A Tie In His Mouth . ', '07956.png': 'A Woman Wearing A Red Shirt And A Tie . ', '49165.png': 'A Man Wearing A Suit And Tie With A Tie . ', '24537.png': 'A Group Of People Standing Around A Red Fire Hydrant . ', '41589.png': 'A Dog Is Sitting On A Couch With A Remote . ', '89615.png': 'A Man Holding A Cell Phone In Front Of A Man . ', '12907.png': 'A Man With A Cell Phone In His Mouth . ', '45396.png': 'A Man In A Suit And Tie Is Sitting On A Chair . ', '85417.png': 'A Woman Holding A Cell Phone In Front Of A Woman . ', '14580.png': 'A Man Wearing A Hat And A Tie . ', '63714.png': 'A Man Wearing A Suit And Tie With A Tie . ', '73561.png': 'A Man In A Suit And Tie With A Tie . ', '67193.png': 'A Man Is Holding A Skateboard In Front Of A Building . ', '18094.png': 'A Man Holding A Smart Phone In His Hand . ', '37419.png': 'A Man Is Holding A Remote In His Mouth . ', '51943.png': 'A Man In A Suit And Tie Standing In Front Of A Building . ', '06291.png': 'A Man Is Sitting On A Bed With A Laptop . ', '02571.png': 'A Man And Woman In A Suit And Tie . ', '62947.png': 'A Man Sitting At A Table With A Cake And A Candle . ', '24857.png': 'A Car Parked Next To A Parking Meter . ', '34927.png': 'A Man Is Holding A Cell Phone While Standing In Front Of A Crowd . ', '70415.png': 'A Person Holding A Banana In A Hand . ', '29138.png': 'A Man Wearing A Suit And Tie With A Tie . ', '87063.png': 'A Small Bird Sitting On A Table Next To A Cup Of Coffee . ', '35709.png': 'A Close Up Of A Person Holding A Banana ', '57248.png': 'A Man Wearing A Suit And Tie With A Tie . ', '37509.png': 'A Man Wearing A Black Shirt And A Tie . ', '02761.png': 'A Man With A Tie And A Tie In His Mouth . ', '87401.png': 'A Man In A Suit And Tie Standing In Front Of A Tree . ', '27480.png': 'A Man With A Tie And A Tie In His Hand . ', '73568.png': 'A Man Is Holding A Frisbee In His Hand . ', '57802.png': 'A Man Is Standing On A Skateboard In The Street . ', '30851.png': 'A Man Wearing A Suit And Tie With A Tie . ', '37984.png': 'A Man And Woman In A Dress And Tie . ', '91802.png': 'A Man Holding A Smart Phone In Front Of A Building . ', '43721.png': 'A Man Wearing A Suit And Tie With A Tie . ', '36598.png': 'A Woman Is Standing In Front Of A Building . ', '32140.png': 'A Man Wearing A Suit And Tie With A Tie . ', '21504.png': 'A Person Is Sitting On A Bench With A Laptop . ', '09834.png': 'A Man Wearing A Red Shirt And A Tie . ', '78243.png': 'A Man And Woman Holding A Cell Phone In Their Hands . ', '04639.png': 'A Man With A Tie In His Hand . ', '74802.png': 'A Man With A Hat And A Tie In His Hand . ', '89561.png': 'A Man Wearing A Hat And A Tie . ', '31429.png': 'A Man With A Tie And A Tie In His Hand . ', '41067.png': 'A Dog Is Sitting On A Couch With A Frisbee . ', '48710.png': 'A Truck Is Parked In A Parking Lot . ', '78069.png': 'A Small Child Is Holding A Baby In A Bed . ', '28147.png': 'A Woman Wearing A Red Shirt And A Tie . ', '20491.png': 'A Man With A Hat And A Hat On A Cell Phone . ', '28970.png': 'A Group Of People Standing Around A Table With A Cell Phone . ', '02385.png': 'A Man Sitting On A Bench With A Dog On His Lap . ', '19783.png': 'A Man Is Holding A Baseball Bat In Front Of A Crowd . ', '07865.png': 'A Woman Is Holding A Cell Phone In Her Hand . ', '14569.png': 'A Man Holding A Pink Umbrella In Front Of A Tree . ', '05931.png': 'A Man Wearing A Suit And Tie With A Tie . ', '48096.png': 'A Man Is Holding A Cell Phone In Front Of A Wall . ', '43615.png': 'A Close Up Of A Sign With A Clock On It ', '91340.png': 'A Man Wearing A Suit And Tie With A Tie . ', '01295.png': 'A Group Of People Standing Next To Each Other On A Table . ', '86013.png': 'A Man In A Black Shirt And A Tie ', '59641.png': 'A Close Up Of A Stop Sign With A Sign On It . ', '63812.png': 'A Man Wearing A Suit And Tie With A Tie . ', '89264.png': \"A Person 'S Hand Holding A Cell Phone In Front Of A Building . \", '75298.png': 'A Man With A Hat And A Tie In His Mouth . ', '76293.png': 'A Man In A Suit And Tie Sitting On A Bench . ', '07594.png': 'A Man Wearing A Suit And Tie With A Tie . ', '64758.png': 'A Group Of Men Standing Next To A Group Of People . ', '13945.png': 'A Group Of People Sitting Around A Table With A Cake . ', '67130.png': 'A Young Boy Is Brushing His Teeth In The Mirror . ', '94108.png': 'A Group Of Young Men Standing Next To Each Other . ', '18267.png': 'A Man Is Riding A Horse In A Pen . ', '80591.png': 'A Man Is Sitting In A Chair With A Cat . ', '31609.png': 'A Man Is Holding A Stuffed Animal In His Mouth . ', '12647.png': 'A Man Wearing A Suit And Tie With A Tie . ', '05872.png': 'A Man Is Standing In Front Of A Store . ', '93027.png': 'A Man Wearing A Suit And Tie With A Tie . ', '18739.png': 'A Man In A Suit And Tie With A Tie . ', '25198.png': 'A Man With A Tie And A Tie In His Mouth . ', '76183.png': 'A Man Holding A Baby In A Baseball Game . ', '60348.png': 'A Man In A Suit And Tie With A Tie . ', '02475.png': 'A Man And A Woman Are Sitting On A Bench . ', '04157.png': 'A Man In A Black Shirt And A Black Tie . ', '46827.png': 'A Man With A Tie And A Tie In His Hand . ', '94872.png': 'A Man Is Holding A Cake With A Candle On It . ', '17034.png': 'A Man With A Tie And A Tie In His Mouth . ', '47386.png': 'A Person Is Holding A Piece Of Cake On A Table . ', '20149.png': 'A Man Holding A Banana In His Hand . ', '67254.png': 'A Man Wearing A Suit And Tie With A Tie . ', '16359.png': 'A Man Wearing A Suit And Tie With A Tie . ', '28764.png': 'A Man Wearing A Suit And Tie With A Tie . ', '46013.png': 'A Man Wearing A Suit And Tie With A Tie . ', '69175.png': 'A Man Wearing A Suit And Tie With A Tie . ', '14658.png': 'A Man Wearing A Suit And Tie With A Tie . ', '25097.png': 'A Man With A Cell Phone In His Mouth . ', '13960.png': 'A Man In A Suit And Tie With A Tie . ', '10483.png': 'A Man In A Suit And Tie With A Tie . ', '01379.png': 'A Man And Woman Sitting On A Table With A Cell Phone . ', '27418.png': 'A Man In A Suit And Tie With A Tie . ', '70281.png': 'A Man Wearing A Suit And Tie With A Tie . ', '16540.png': 'A Man Wearing A Suit And Tie With A Tie . ', '92341.png': 'A Bird Sitting On A Branch With A Bird In The Background . ', '71659.png': 'A Man Is Holding A Baseball Bat And A Man . ', '27304.png': 'A Cat Is Sitting On A Wooden Table . ', '90321.png': 'A Man Is Holding A Baseball Bat In Front Of A Crowd . ', '75908.png': 'A Man In A Suit And Tie With A Sword . ', '98421.png': 'A Person Holding A Cell Phone In Front Of A Building . ', '31204.png': 'A Woman In A Dress Shirt And A Tie . ', '53482.png': 'A Black And White Photo Of A Black And White Photo . ', '17630.png': 'A Dog Is Sitting On A Couch With A Cat . ', '60532.png': 'A Woman Is Sitting On A Bed With A Laptop . ', '71902.png': 'A Woman Wearing A Red Shirt And A Tie . ', '07496.png': 'A Man Wearing A Red Shirt And A Tie . ', '38954.png': 'A Man Wearing A Tie And A Tie . ', '48052.png': 'A Man Wearing A Red Shirt And A Tie . ', '51683.png': 'A Man With A Tie And A Tie In His Mouth . ', '02793.png': 'A Man Is Standing In A Boat In The Water . ', '45732.png': 'A Man Is Holding A Cell Phone In Front Of A Television . ', '59408.png': 'A Man With A Tie And A Tie In His Mouth . ', '37180.png': 'A Man Is Sitting On A Bench With A Cell Phone . ', '71930.png': 'A Man Wearing A Suit And Tie With A Tie . ', '47905.png': 'A Man Wearing A Suit And Tie With A Tie . ', '30546.png': 'A Teddy Bear Wearing A Red Shirt And A Red Tie . ', '26149.png': 'A Man Is Sitting On A Bench With A Dog . ', '86741.png': 'A Man Is Sitting On A Motorcycle In A Parking Lot . ', '37208.png': 'A Man With A Beard And A Tie In His Mouth . ', '76139.png': 'A Man Wearing A Red Shirt And A Tie . ', '02594.png': 'A Close Up Of A Person Holding A Cell Phone ', '43679.png': 'A Man In A Suit And Tie With A Tie . ', '40136.png': 'A Man Holding A Baseball Bat In Front Of A Tree . ', '09523.png': 'A Man With A Tie And A Tie In His Mouth . ', '49278.png': 'A Brown Bear Sitting On A Tree Branch . ', '65371.png': 'A Cat Is Sitting On A Chair Next To A Cat . ', '15723.png': 'A Man With A Cell Phone In Front Of A Building . ', '13450.png': 'A Man In A Suit And Tie Standing In Front Of A Building . ', '25943.png': 'A Man With A Tie And A Tie In His Hand . ', '64910.png': 'A Man Wearing A Suit And Tie With A Tie . ', '69480.png': 'A Woman Wearing A Red Shirt And A Tie . ', '65301.png': 'A Woman Wearing A Red Shirt And A Tie . ', '76254.png': 'A Man Wearing A Suit And Tie With A Tie . ', '96420.png': 'A Man In A Suit And Tie With A Tie . ', '04125.png': 'A Man In A Suit And Tie With A Camera In Front Of Him . ', '43015.png': 'A Brown And White Cow Standing In A Field . ', '96034.png': 'A Man Is Holding A Remote In Front Of A Television . ', '20745.png': 'A Person Is Sitting On A Bench In Front Of A Building . ', '90178.png': 'A Man Is Sitting On A Bench In Front Of A Building . ', '61459.png': 'A Man Holding A Piece Of Cake On A Table . ', '19430.png': 'A Bunch Of Different Types Of Different Types Of Luggage . ', '91428.png': 'A Man Wearing A Hat And A Hat On A Skateboard . ', '63905.png': 'A Man In A Suit And Tie With A Tie . ', '56387.png': 'A Brown Bear Sitting On A Tree Branch . ', '96873.png': 'A Man Wearing A Hat And A Tie . ', '37915.png': 'A Man Wearing A Suit And Tie With A Tie . ', '76980.png': 'A Man Wearing A Suit And Tie With A Tie . ', '90138.png': 'A Man In A Suit And Tie With A Tie . ', '38416.png': 'A Close Up Of A Person Holding A Baseball Bat ', '24376.png': 'A Man Wearing A Suit And Tie With A Tie . ', '79682.png': 'A Man Wearing A Hat And A Tie In His Mouth . ', '36724.png': 'A Man In A Suit And Tie With A Phone . ', '07628.png': 'A Man Wearing A Suit And Tie With A Tie . ', '01637.png': 'A Black And White Photo Of A Black And White Photo ', '15238.png': 'A Bunch Of Different Types Of Different Types Of Snow . ', '48630.png': 'A Bird Sitting On A Table Next To A Bird . ', '28751.png': 'A Close Up Of A Clock On A Wall ', '02317.png': 'A Man Is Holding A Baseball Bat And A Man . ', '48617.png': 'A Woman Is Holding A Surfboard In The Ocean . ', '21835.png': 'A Teddy Bear With A Red Bow Tie And A Red Bow Tie . ', '51029.png': 'A Man Wearing A Hat And A Tie . ', '27341.png': 'A Man Holding A Cell Phone In Front Of A Tree . ', '91236.png': 'A Man Is Sitting In A Train On A Train . ', '05941.png': 'A Person Is Holding A Stuffed Animal In A Bed . ', '71692.png': 'A Black And White Cat Sitting On A Green Grass . ', '81497.png': 'A Man With A Hat And A Tie In His Lap . ', '20194.png': 'A Man And Woman Are Holding A Teddy Bear . ', '04926.png': 'A Man Wearing A Hat And A Tie . ', '23501.png': 'A Person Holding A Piece Of Cake On A Table . ', '58014.png': 'A Man Holding A Banana In His Hand . ', '18273.png': 'A Sign That Is On A Pole With A Sign On It . ', '98307.png': 'A Person Is Holding A Knife And A Knife . ', '72814.png': 'A Group Of People Sitting Around A Table With A Bunch Of Food . ', '01589.png': 'A Man Wearing A Suit And Tie With A Tie . ', '28674.png': 'A Dog Is Sitting On A Couch With A Remote . ', '69530.png': 'A Man And Woman Standing Next To A Man Holding A Cell Phone . ', '69758.png': 'A Bunch Of Different Types Of Bananas On A Tree . ', '50789.png': 'A Black And White Photo Of A Person Holding A Frisbee . ', '90541.png': 'A Man With A Tie And A Tie In His Hand . ', '09326.png': 'A Man Is Holding A Smart Phone In Front Of A Crowd . ', '89350.png': 'A Young Boy Is Brushing His Teeth In The Bathroom . ', '54082.png': 'A Man Is Sitting In Front Of A Laptop . ', '72641.png': 'A Man Wearing A Hat And A Tie . ', '14590.png': 'A Man And A Woman Are Standing Next To A Bunch Of Bananas . ', '62789.png': 'A Large Building With A Clock On It . ', '90126.png': 'A Man Is Holding A Cell Phone In Front Of A Building . ', '30526.png': 'A Man Holding A Piece Of Cake On A Table . ', '82973.png': 'A Young Girl Is Brushing Her Teeth With A Toothbrush . ', '12374.png': 'A Woman Is Sitting On A Couch With A Cell Phone . ', '49170.png': 'A Man Is Sitting On A Couch Holding A Cell Phone . ', '04183.png': 'A Man And Woman In A Restaurant With A Bunch Of Food . ', '92613.png': 'A Woman And Woman Are Sitting On A Couch . ', '05987.png': 'A Man Is Standing Next To A Man Holding A Cell Phone . ', '02718.png': 'A Person Is Holding A Remote Control In His Hand . ', '38154.png': 'A Man Is Sitting On A Rock With A Bird . ', '71360.png': 'A Man With A Tie And A Tie In Front Of A Television . ', '12507.png': 'A Man Standing Next To A Store With A Bunch Of Bananas . ', '83527.png': 'A Black And White Dog Sitting On A Table . ', '36107.png': 'A Man In A Black Shirt And A White Shirt . ', '72594.png': 'A Truck With A Red Truck Parked On The Side Of A Road . ', '34190.png': 'A Man Wearing A Suit And Tie With A Tie . ', '36098.png': 'A Man Is Holding A Pair Of Scissors . ', '46097.png': 'A Man In A Suit And Tie With A Tie . ', '36812.png': 'A Group Of Birds Standing On Top Of A Rock . ', '98625.png': 'A Man With A Hat And A Tie In His Hand . ', '61935.png': 'A Close Up Of A Person Holding A Cell Phone ', '69087.png': 'A Man Wearing A Suit And Tie With A Tie . ', '51493.png': 'A Man Wearing A Suit And Tie With A Tie . ', '48357.png': 'A Large Group Of Boats In A River With A Bridge In The Background . ', '64721.png': 'A Man Is Sitting On A Brown Horse ', '82316.png': 'A Man And Woman Holding A Cell Phone In Their Hands . ', '58016.png': 'A Man In A Suit And Tie With A Tie . ', '80153.png': 'A Man Wearing A Suit And Tie With A Tie . ', '52714.png': 'A Man Holding A Cell Phone In His Hand . ', '75068.png': 'A Man Sitting On A Bench In A Room . ', '63894.png': 'A Man Holding A Smart Phone In Front Of A Building . ', '04185.png': 'A Black And White Photo Of A Cow With A Cow In The Background . ', '13962.png': 'A Man Is Holding A Cell Phone In Front Of A Car . ', '72406.png': 'A Man In A Black Shirt And A Tie . ', '83972.png': 'A Man With A Beard And A Tie In His Mouth . ', '14362.png': 'A Man Wearing A Suit And Tie With A Tie . ', '08564.png': 'A Man Is Holding A Cell Phone In Front Of A Building . ', '82014.png': 'A Man With A Tie And A Tie In Front Of A Crowd . ', '94512.png': 'A Man With A Tie And A Tie In His Hand . ', '56429.png': 'A Train Is Sitting On A Train Track . ', '82657.png': 'A Man Wearing A Suit And Tie With A Tie . ', '29760.png': 'A Person Is Holding A Laptop In Front Of A Laptop . ', '49635.png': 'A Clock On A Pole With A Clock On It . ', '53068.png': 'A Man And Woman Are Holding A Teddy Bear . ', '56470.png': 'A White Dog Wearing A Blue Shirt And A Blue Shirt . ', '57812.png': 'A Man Wearing A Suit And Tie With A Tie . ', '31497.png': 'A Man Wearing A Suit And Tie With A Tie . ', '01682.png': 'A Person Holding A Hot Dog In A Bun . ', '87691.png': 'A Man Wearing A Suit And Tie With A Tie . ', '58901.png': 'A Man In A Suit And Tie With A Clock . ', '94518.png': 'A Man Holding A Banana Up To His Ear . ', '47620.png': 'A Man Is Holding A Large Brown Teddy Bear . ', '05482.png': 'A Man With A Hat And A Tie In His Mouth . ', '25461.png': 'A Close Up Of A Cake With A Candle On It ', '09531.png': 'A Close Up Of A Bird With A Bird On It ', '96452.png': 'A Bunch Of People Standing Around A Table With A Bunch Of Bananas . ', '29816.png': 'A Man Is Brushing His Teeth In A Mirror . ', '08937.png': 'A Close Up Of A Piece Of Cake On A Table ', '84729.png': 'A Close Up Of A Piece Of Cake On A Plate ', '36197.png': 'A Man Holding A Smart Phone In His Hand . ', '43579.png': 'A Man And Woman In A Park With A Cell Phone . ', '40693.png': 'A Man Wearing A Suit And Tie With A Tie . ', '75603.png': 'A Man Is Sitting On A Motorcycle On A Street . ', '83692.png': 'A Close Up Of A Person Holding A Cell Phone ', '68579.png': 'A Man In A Suit And Tie With A Tie . ', '72958.png': 'A Man Wearing A Suit And Tie With A Tie . ', '85710.png': 'A Man In A Suit And Tie Standing In Front Of A Building . ', '65019.png': 'A Man Is Holding A Cell Phone In Front Of A Television . ', '68179.png': 'A Man Is Talking On A Cell Phone . ', '10893.png': 'A Bunch Of Different Types Of Different Types Of Scissors . ', '18307.png': 'A Man Wearing A Suit And Tie With A Tie . ', '57134.png': 'A Black And White Photo Of A Man Wearing A Suit . ', '30182.png': 'A Cake With A Bunch Of Different Types Of Food On It . ', '29708.png': 'A Man Wearing A Suit And Tie With A Tie . ', '14830.png': 'A Close Up Of A Bird That Is Sitting On A Tree . ', '98134.png': 'A Black And White Photo Of A Man Wearing A Suit . ', '74652.png': 'A Man Is Holding A Glass Of Wine . ', '06531.png': 'A Man Is Holding A Piece Of Cake On A Table . ', '43691.png': 'A Woman Wearing A Red Shirt And A Tie . ', '12453.png': 'A Picture Of A Clock And A Glass Vase ', '53147.png': 'A Group Of People Standing Around A Table With A Bunch Of Food . ', '90125.png': 'A Man And Woman With A Tie And A Woman . ', '56489.png': 'A Group Of People Standing Around A Table With A Cake . ', '89417.png': 'A Man Is Doing A Trick On A Skateboard . ', '86123.png': 'A Woman Sitting On A Couch With A Cell Phone . ', '86032.png': 'A Man Wearing A Suit And Tie With A Tie . ', '17623.png': 'A Man Is Sitting On A Motorcycle With A Man In His Lap . ', '65094.png': 'A Man Wearing A Suit And Tie With A Tie . ', '58491.png': 'A Stainless Steel Refrigerator With A Microwave And A Microwave . ', '13269.png': 'A Group Of People Standing Around A Table With A Bunch Of Bananas . ', '81692.png': 'A Group Of Sheep In A Field With A Bird On It . ', '06794.png': 'A Black And White Photo Of A Black And White Photo ', '08719.png': 'A Woman Holding A Cake With A Candle On It . ', '58764.png': 'A Pair Of Scissors And A Cell Phone On A Table . ', '71846.png': 'A Man Wearing A Suit And Tie With A Tie . ', '07895.png': 'A Man Wearing A Suit And Tie In A Suit . ', '71463.png': 'A Young Boy Is Playing With A Frisbee . ', '13458.png': 'A Small Dog Is Sitting On A Table With A Remote . ', '82037.png': 'A Young Girl Wearing A Red Shirt And A Tie . ', '43906.png': 'A Man In A Suit And Tie With A Tie . ', '06728.png': 'A Man Holding A Cell Phone In Front Of A Man . ', '40852.png': 'A Man And A Woman Sitting On A Couch With A Remote . ', '40875.png': 'A Person Holding A Smart Phone In Front Of A Crowd . ', '03145.png': 'A Close Up Of A Red And White Toothbrush . ', '74385.png': 'A Man Is Jumping A Skateboard On A Ramp . ', '32891.png': 'A Man With A Tie And A Tie In His Hand . ', '24918.png': 'A Train Station With A Train On The Tracks . ', '29513.png': 'A Man Is Sitting On A Bench With A Cell Phone . ', '64957.png': 'A Woman Is Holding A Small Child In A Kitchen . ', '93648.png': 'A Man In A Suit And Tie With A Tie . ', '91540.png': 'A Woman Is Sitting In A Bed With A Red Tie . ', '12597.png': 'A Man Wearing A Hat And A Tie With A Hat . ', '43271.png': 'A Black And White Photo Of A Building With A Clock On It . ', '76431.png': 'A Group Of People Standing Around A Table With A Bunch Of Bananas . ', '14386.png': 'A Black And White Cat Sitting On A Black Couch . ', '21869.png': 'A Man Wearing A Hat And A Tie . ', '78236.png': 'A Man With A Hat And A Tie In His Hand . ', '09247.png': 'A Bunch Of Different Types Of Different Types Of Donuts . ', '21450.png': 'A Plate Of Food With A Glass Of Wine . '}\n",
            "\n",
            "Data type after reconstruction :  <class 'dict'>\n",
            "{'41086.png': 'A Man Wearing A Red Shirt And A Tie . ', '28613.png': 'A Man And Woman Sitting At A Table With A Cell Phone . ', '19248.png': 'A Woman Holding A Pink Umbrella In Front Of A Crowd . ', '07618.png': 'A Man In A Suit And Tie With A Camera . ', '43527.png': 'A Man Is Holding A Hot Dog In His Mouth . ', '37185.png': 'A Man In A Suit And Tie With A Cell Phone . ', '46172.png': 'A Group Of People Standing Around A Table With A Laptop . ', '18074.png': 'A Man Wearing A Suit And Tie With A Tie . ', '31960.png': 'A White Cat Sitting On A Shelf Next To A Cup . ', '71095.png': 'A Bunch Of Stuffed Animals Sitting On A Table . ', '61859.png': 'A Man In A Suit And Tie With A Tie . ', '83150.png': 'A Man Wearing A Suit And Tie With A Tie . ', '47918.png': 'A Man Is Sitting In Front Of A Laptop Computer . ', '50149.png': 'A Man Wearing A Suit And Tie With A Tie . ', '37204.png': 'A Man Is Sitting In Front Of A Laptop . ', '25170.png': 'A Person Holding A Cell Phone In Front Of A Car . ', '30591.png': 'A Man Is Standing In The Snow With A Snowboard . ', '26538.png': 'A Man In A Suit And Tie With A Phone . ', '98157.png': 'A Man And A Woman Are Sitting On A Bench . ', '34217.png': 'A Man With A Hat And A Tie On A Table . ', '32416.png': 'A Man Wearing A Suit And Tie With A Tie . ', '49758.png': 'A Man Is Holding A Baseball Bat In Front Of A Crowd . ', '15064.png': 'A Man With A Hat Sitting On A Bench . ', '94786.png': 'A Man Is Holding A Cell Phone In Front Of A Television . ', '32650.png': 'A Little Boy With A Toothbrush In His Mouth . ', '34078.png': 'A Street Sign With A Sign On The Side Of It . ', '29148.png': 'A Man Holding A Smart Phone In His Hand . ', '18926.png': 'A Man Wearing A Suit And Tie With A Tie . ', '38251.png': 'A Man In A Suit And Tie Is Sitting On A Cell Phone . ', '74920.png': 'A Black And White Dog Standing In A Field . ', '65240.png': 'A Young Boy Is Holding A Stuffed Animal . ', '91270.png': 'A Man Is Holding A Cell Phone In His Hand . ', '37819.png': 'A Woman In A Dress Shirt And A Tie . ', '45691.png': 'A Young Man Wearing A Red Shirt And A Tie . ', '35091.png': 'A Dog Is Sitting On A Couch With A Remote . ', '91537.png': 'A Man Is Holding A Cell Phone In Front Of A Building . ', '62710.png': 'A Small Dog Is Sitting On A Couch With A Remote . ', '76214.png': 'A Woman Wearing A Red Shirt And A Tie . ', '03681.png': 'A Man With A Hat And A Tie In His Mouth . ', '79053.png': 'A Man In A Suit And Tie With A Tie . ', '15493.png': 'A Man Wearing A Suit And Tie With A Tie . ', '49017.png': 'A Man In A Suit And Tie With A Tie . ', '45209.png': 'A Man Is Holding A Cell Phone In Front Of A Crowd . ', '52130.png': 'A Man Wearing A Suit And Tie With A Tie . ', '46510.png': 'A Man In A Black Shirt And A Black Tie ', '16520.png': 'A Man Holding A Cell Phone In Front Of A Crowd . ', '12675.png': 'A Man Holding A Stuffed Animal In His Mouth . ', '08395.png': 'A Man Is Sitting On A Bed With A Remote In His Hand . ', '75192.png': 'A Man Is Holding A Baseball Bat In Front Of A Crowd . ', '34806.png': 'A Dog Is Sitting On A Couch With A Frisbee . ', '28605.png': 'A Man Wearing A Suit And Tie With A Tie . ', '07465.png': 'A Man With A Hat And A Tie In His Hand . ', '53914.png': 'A Group Of People Sitting Around A Table Eating Food . ', '17392.png': 'A Man Holding A Cell Phone In Front Of A Man . ', '42675.png': 'A Person Holding A Smart Phone In Front Of A Building . ', '49785.png': 'A Man Is Holding A Baseball Bat And A Baseball Bat . ', '80957.png': 'A Man Holding A Smart Phone In Front Of A Building . ', '91536.png': 'A Man Wearing A Suit And Tie With A Tie . ', '69807.png': 'A Man With A Tie And A Tie In His Hand . ', '72945.png': 'A Group Of People Standing Around A Large Group Of People . ', '50894.png': 'A Bunch Of Different Types Of Bananas . ', '93610.png': 'A Man Wearing A Suit And Tie With A Tie . ', '09251.png': 'A Man Wearing A Suit And Tie With A Tie . ', '90753.png': 'A Man In A Suit And Tie With A Tie . ', '39645.png': 'A Man Wearing A Suit And Tie With A Tie . ', '24980.png': 'A Man With A Hat And A Tie In His Mouth . ', '31709.png': 'A Man Is Holding A Remote In His Hand . ', '93286.png': 'A Man Is Holding A Frisbee In A Field . ', '64781.png': 'A Man Is Holding A Baseball Bat In His Hand . ', '23514.png': 'A Bunch Of Different Types Of Scissors On A Table . ', '64320.png': 'A Person Holding A Pair Of Scissors In A Room . ', '10867.png': 'A Man And A Woman Are Walking On A Beach . ', '95803.png': 'A Man In A Suit And Tie Standing In Front Of A Building . ', '62791.png': 'A Group Of People Standing In Front Of A Store . ', '83215.png': 'A Black And White Cat Sitting On A Wooden Bench . ', '97604.png': 'A Man With A Baseball Bat Standing In Front Of A Building . ', '05716.png': 'A Black Dog Sitting On A Table Next To A Person . ', '81705.png': 'A Dog Is Laying On A Blanket On A Couch . ', '04187.png': 'A Man Is Cutting A Cake On A Table . ', '52619.png': 'A Man Wearing A Red Shirt And A Tie . ', '38720.png': 'A Black And White Photo Of A Person Holding A Snowboard . ', '15029.png': 'A Group Of People Standing Next To A Fire Hydrant . ', '08624.png': 'A Close Up Of A Bird That Is Sitting On A Tree . ', '41925.png': 'A Man Wearing A Tie And A Tie . ', '80932.png': 'A Man Holding A Smart Phone In His Hand . ', '45930.png': 'A Man And Woman Are Sitting In Front Of A Laptop . ', '19647.png': 'A Man Is Sitting On A Bench In Front Of A Crowd . ', '36842.png': 'A Man Wearing A Suit And Tie With A Tie . ', '31629.png': 'A Man Is Sitting On A Bench In The Street . ', '19426.png': 'A Man Is Flying A Kite In The Sky . ', '40953.png': 'A Close Up Of A Bird With A Bird On It ', '07469.png': 'A Man Holding A Smart Phone In Front Of A Television . ', '38209.png': 'A Man Is Holding A Banana In His Hand . ', '87235.png': 'A Man Is Sitting On A Bed With A Blanket . ', '42160.png': 'A Man Holding A Pair Of Scissors In Front Of A Crowd . ', '49670.png': 'A Man Wearing A Suit And Tie In A Room . ', '45126.png': 'A Man Wearing A Suit And Tie With A Tie . ', '86329.png': 'A Man With A Beard And A Tie In His Hand . ', '48930.png': 'A Person Wearing A Hat And A Tie . ', '12039.png': 'A Black And White Photo Of A Train On A Train Track ', '14632.png': 'A Man Is Holding A Banana In His Mouth . ', '64350.png': 'A Man Is Sitting On A Bench In A Room . ', '62084.png': 'A Man Wearing A Hat And A Tie . ', '28049.png': 'A Man In A Suit And Tie With A Tie . ', '56290.png': 'A Man Is Holding A Remote In His Hand . ', '28935.png': 'A Close Up Of A Street Sign With A Sign On It ', '35417.png': 'A Man With A Tie And A Tie In His Hand . ', '93082.png': 'A Man Wearing A Suit And Tie With A Tie . ', '56249.png': 'A Man In A Suit And Tie With A Tie . ', '23140.png': 'A Woman In A Suit And Tie With A Cell Phone . ', '68371.png': 'A Person Wearing A Suit And Tie In A Room . ', '78039.png': 'A Man Wearing A Suit And Tie With A Tie . ', '36014.png': 'A Large Group Of People In A Field With A Large Clock . ', '86273.png': 'A Man Holding A Baseball Bat In Front Of A Crowd . ', '23504.png': 'A Man And Woman In A Room With A Man And A Woman . ', '72608.png': 'A Man Is Sitting On A Couch With A Laptop . ', '10238.png': 'A Woman Wearing A Tie And A Tie . ', '35247.png': 'A Man Is Holding A Remote In His Hand . ', '46978.png': 'A Group Of Black Bears Sitting On A Rock . ', '40857.png': 'A Man In A Suit And Tie With A Tie . ', '93128.png': 'A Man Is Holding A Cell Phone In Front Of A Man . ', '63784.png': 'A Man Wearing A Suit And Tie With A Tie . ', '81296.png': 'A Man Standing Next To A Fire Hydrant On A Street . ', '37058.png': 'A Man In A Suit And Tie With A Tie . ', '34028.png': 'A Man Sitting On A Bench With A Cat . ', '98064.png': 'A Man Is Sitting In Front Of A Laptop Computer . ', '76483.png': 'A Woman Is Holding A Pink Umbrella In Her Hand . ', '92354.png': 'A Man Is Holding A Remote Control In His Hand . ', '71830.png': 'A Man Holding A Banana In His Hand . ', '06541.png': 'A Man With A Tie And A Tie In Front Of A Man . ', '21569.png': 'A Man Wearing A Suit And Tie With A Tie . ', '04863.png': 'A Man Is Holding A Cell Phone In His Hand . ', '87429.png': 'A Woman Wearing A Red Shirt And A Tie . ', '94350.png': 'A Man In A Black Shirt And A Tie ', '24189.png': 'A Man Is Sitting In Front Of A Laptop Computer . ', '26073.png': 'A Woman Wearing A Red Shirt And A Tie . ', '61908.png': 'A Close Up Of A Piece Of Cake With A Knife . ', '46310.png': 'A Man In A Suit And Tie Sitting On A Table . ', '89302.png': 'A Man Is Holding A Cell Phone In Front Of A Crowd . ', '85901.png': 'A Person Holding A Banana In A Hand . ', '26179.png': 'A Woman Is Sitting On A Horse In A Park . ', '59072.png': 'A Man In A Suit And Tie Standing In Front Of A Building . ', '41387.png': 'A Man Wearing A Suit And Tie With A Tie . ', '08415.png': 'A Bunch Of Different Types Of Luggage On A Table . ', '38547.png': 'A Man With A Cell Phone In Front Of A Mirror . ', '82674.png': 'A Man In A Suit And Tie With A Camera . ', '12608.png': 'A Car Parked Next To A Car With A Car . ', '02413.png': 'A Woman Wearing A Tie And A Tie . ', '51627.png': 'A Man In A Suit And Tie Standing In Front Of A Building . ', '26318.png': 'A Man Wearing A Hat And A Tie . ', '79584.png': 'A Man Wearing A Suit And Tie With A Hat On His Head . ', '09547.png': 'A Man Holding A Cell Phone In Front Of A Crowd . ', '69470.png': 'A Group Of People On A Beach With A Kite . ', '08546.png': 'A Man In A Suit And Tie Standing In Front Of A Tree . ', '52803.png': 'A Black And White Photo Of A Person On A Snowboard ', '63251.png': 'A Man Wearing A Suit And Tie With A Tie . ', '14823.png': 'A Man Is Standing In Front Of A Crowd Of People . ', '14520.png': 'A Man In A Black Shirt And A Tie ', '57602.png': 'A Black Bear Is Standing In A Tree . ', '46813.png': 'A Man Holding A Banana Up To A Man . ', '70368.png': 'A Man Is Sitting In Front Of A Laptop Computer . ', '40791.png': 'A Person Holding A Cell Phone In Front Of A Building . ', '65908.png': 'A Man With A Hat And A Tie In Front Of A Mirror . ', '15738.png': 'A Man Is Holding A Cell Phone In Front Of A Man . ', '63417.png': 'A Man In A Suit And Tie With A Candle . ', '51237.png': 'A Person Holding A Plate Of Food On A Table . ', '30286.png': 'A Black And White Photo Of A Black And White Photo . ', '07254.png': 'A Man Wearing A Suit And Tie With A Tie . ', '12837.png': 'A Close Up Of A Pair Of Scissors On A Table . ', '95814.png': 'A Man In A Suit And Tie With A Tie . ', '52716.png': 'A Small Dog Is Sitting On A Couch With A Remote . ', '65940.png': 'A Small Child Is Holding A Teddy Bear . ', '39175.png': 'A Man Is Holding A Cell Phone In His Hand . ', '68903.png': 'A Dog Is Sitting On A Couch With A Frisbee . ', '04287.png': 'A Woman With A Cell Phone In Her Hand . ', '26319.png': 'A Man Wearing A Suit And Tie With A Cell Phone . ', '24653.png': 'A Group Of People Walking On A Beach With A Dog . ', '13248.png': 'A Man Is Sitting On A Bench With A Phone . ', '41958.png': 'A Man Is Holding A Teddy Bear In Front Of A Crowd . ', '17054.png': 'A Man Wearing A Suit And Tie With A Tie . ', '52960.png': 'A Man Wearing A Suit And Tie With A Tie . ', '81245.png': 'A Man Is Sitting On A Bench In Front Of A Building . ', '90127.png': 'A Truck With A Red Truck Parked On The Side Of The Road . ', '03871.png': 'A Man In A Suit And Tie With A Camera . ', '71625.png': 'A Person Is Holding A Cell Phone In Front Of A Window . ', '84907.png': 'A Dog Is Sitting On A Table With A Dog . ', '09376.png': 'A Man Wearing A Suit And Tie With A Tie . ', '92408.png': 'A Man With A Tie And A Tie In His Hand . ', '41325.png': 'A Man Is Holding A Bunch Of Stuffed Animals . ', '57826.png': 'A Man With A Red Shirt And A Blue Shirt . ', '52318.png': 'A Man With A Cell Phone In His Hand . ', '63025.png': 'A Man Holding A Smart Phone In Front Of A Television . ', '35902.png': 'A Man Is Holding A Surfboard In The Ocean . ', '90573.png': 'A Person Holding A Smart Phone In Front Of A Wall . ', '73154.png': 'A Man And Woman In A Kitchen With A Large Cake . ', '19234.png': 'A Man With A Hat And A Tie In His Lap . ', '83764.png': 'A Man Is Sitting On A Couch Holding A Cell Phone . ', '30697.png': 'A Man Wearing A Suit And Tie With A Tie . ', '48162.png': 'A Man Wearing A Tie And A Tie . ', '18942.png': 'A Small Dog Is Sitting On A Table With A Cat . ', '23450.png': 'A Woman In A Red Shirt And A Red Tie . ', '01327.png': 'A Man Wearing A Suit And Tie With A Tie . ', '70194.png': 'A Man Wearing A Suit And Tie With A Tie . ', '65380.png': 'A Man Wearing A Suit And Tie With A Tie . ', '34652.png': 'A Woman And Woman Are Holding A Cell Phone . ', '15439.png': 'A Man Holding A Banana In His Hand . ', '83921.png': 'A Man Wearing A Suit And Tie With A Tie . ', '46857.png': 'A Woman Wearing A Red Shirt And A Tie . ', '69140.png': 'A Man Wearing A Suit And Tie With A Tie . ', '35016.png': 'A Man Is Holding A Cell Phone In His Mouth . ', '87351.png': 'A Man With A Beard And A Tie In His Mouth . ', '39452.png': 'A Person Holding A Hot Dog In A Bun . ', '75320.png': 'A Table With A Bunch Of Food On It ', '46983.png': 'A Man Is Standing In A Kitchen With A Microwave . ', '01875.png': 'A Group Of People Standing Around A Building With A Cell Phone . ', '79854.png': 'A Man Wearing A Hat And A Tie . ', '35271.png': 'A Man Wearing A Suit And Tie With A Tie . ', '79321.png': 'A Man Wearing A Suit And Tie With A Tie . ', '31426.png': 'A Man Is Sitting On A Wooden Bench . ', '26379.png': 'A Pizza With A Knife And A Knife On A Plate . ', '81902.png': 'A Man Wearing A Suit And Tie With A Tie . ', '81602.png': 'A Truck With A Red Truck Parked On The Side Of A Road . ', '78631.png': 'A Stop Sign With A Blue Sky In The Background . ', '90365.png': 'A Man Wearing A Suit And Tie With A Tie . ', '63187.png': 'A Man Is Holding A Cell Phone In Front Of A Television . ', '15893.png': 'A Man Wearing A Suit And Tie With A Tie . ', '60741.png': 'A Man Is Sitting On A Bench In The Street . ', '78401.png': 'A Man Wearing A Red Shirt And A Tie . ', '84152.png': 'A Young Girl Is Sitting On A Bed With A Laptop . ', '46952.png': 'A Sign That Has A Sign On It . ', '69237.png': 'A Small Child Is Sitting On A Small Chair ', '59260.png': 'A Group Of People Standing Around A Table With A Sign . ', '51978.png': 'A Person Holding A Donut In A Box . ', '19027.png': 'A Woman Is Holding A Nintendo Wii Game Controller . ', '71645.png': 'A Man Holding A Tennis Racket In Front Of A Crowd . ', '06194.png': 'A Person Sitting On A Table With A Laptop On It . ', '50723.png': 'A Woman In A Dress Shirt And A Tie . ', '07839.png': 'A Woman In A Dress Shirt And A Tie . ', '52316.png': 'A Man In A Suit And Tie With A Tie . ', '97842.png': 'A Man Wearing A Suit And Tie With A Tie . ', '28976.png': 'A Man Is Standing In Front Of A Store . ', '46198.png': 'A Man And Woman In A Room With A Man And A Woman . ', '14837.png': 'A Man Wearing A Hat And A Tie In His Mouth . ', '71206.png': 'A Man With A Hat And A Tie In His Mouth . ', '30824.png': 'A Little Girl Sitting On A Table With A Cat . ', '07931.png': 'A Bunch Of Stuffed Animals Sitting On A Table . ', '02983.png': 'A Man Wearing A Suit And Tie With A Phone . ', '15674.png': 'A Man In A Suit And Tie With A Tie . ', '64193.png': 'A Man Wearing A Suit And Tie With A Tie . ', '65378.png': 'A Group Of People Standing Around A Building With A Sign . ', '28765.png': 'A Man Wearing A Suit And Tie With A Tie . ', '30462.png': 'A Man Wearing A Suit And Tie With A Tie . ', '46301.png': 'A Man Is Laying On A Bed With A Blanket . ', '32806.png': 'A Man With A Tie And A Tie In His Mouth . ', '59362.png': 'A Man In A Suit And Tie With A Tie . ', '34915.png': 'A Man Holding A Banana In His Mouth . ', '97102.png': 'A Man With A Hat And A Tie On A Leash . ', '71486.png': 'A Man In A Suit And Tie With A Tie . ', '56281.png': 'A Man Is Holding A Smart Phone In Front Of A Television . ', '69024.png': 'A Man And A Woman With A Tie And A Tie . ', '86910.png': 'A Man And Woman Standing In Front Of A Building . ', '97413.png': 'A Man Wearing A Hat And A Tie . ', '97564.png': 'A Woman Holding A Banana In Her Hand . ', '79806.png': 'A White Plate With A Bunch Of White Flowers . ', '12309.png': 'A Man With A Hat And A Tie In His Hand . ', '17598.png': 'A Close Up Of A Red And White Plate With A Banana . ', '61032.png': 'A Man With A Hat And A Tie In His Hand . ', '62384.png': 'A Dog Wearing A Hat And A Tie . ', '52743.png': 'A Man Is Sitting In A Room With A Bag Of Luggage . ', '52904.png': 'A Young Boy Is Brushing His Teeth In The Mirror . ', '06325.png': 'A Man Holding A Cell Phone In Front Of A Crowd . ', '17483.png': 'A Man Holding A Smart Phone In His Hand . ', '21943.png': 'A Man With A Hat And A Tie On A Street . ', '28195.png': 'A Man In A Suit And Tie With A Tie . ', '46315.png': 'A Close Up Of A Person Holding A Remote ', '10256.png': 'A Man In A Suit And Tie With A Tie . ', '19650.png': 'A Man Is Holding A Tennis Racket In His Hand . ', '07523.png': 'A Person Is Holding A Banana In A Bowl . ', '24905.png': 'A Man Is Sitting On A Motorcycle In A Parking Lot . ', '69017.png': 'A Man Is Holding A Piece Of Cake On A Train . ', '09413.png': 'A Man Is Holding A Cell Phone In His Mouth . ', '37140.png': 'A Man Wearing A Suit And Tie With A Tie . ', '58164.png': 'A Woman Wearing A Red Shirt And A Red Tie . ', '01578.png': 'A Group Of People Are Playing With A Frisbee . ', '12460.png': 'A Man Sitting On A Bench With A Cat On His Lap . ', '73514.png': 'A Man Is Holding A Cake With A Sword . ', '28197.png': 'A Bunch Of Different Types Of Different Types Of Luggage . ', '28043.png': 'A Person Is Holding A Piece Of Cake . ', '32401.png': 'A Man Is Holding A Remote In Front Of A Television . ', '34095.png': 'A Black And White Cat Sitting On A Wooden Table . ', '52089.png': 'A Close Up Of A Cell Phone With A Cell Phone . ', '25103.png': 'A Man Is Jumping In The Air With A Skateboard . ', '41389.png': 'A Man Wearing A Suit And Tie With A Tie . ', '93124.png': 'A Table With A Bunch Of Different Types Of Flowers . ', '32985.png': 'A Man With A Hat And A Tie In His Hand . ', '68549.png': 'A Man With A Tie And A Tie In His Hand . ', '05189.png': 'A Person Is Holding A Cell Phone In Front Of A Car . ', '96078.png': 'A Man Is Holding A Cell Phone In Front Of A Crowd . ', '18490.png': 'A Man With A Tie In His Mouth . ', '03795.png': 'A Man Wearing A Suit And Tie With A Tie . ', '86512.png': 'A Cat Is Sitting On A Chair With A Remote . ', '32160.png': 'A Man Is Holding A Pair Of Scissors . ', '47031.png': 'A Person Holding A Piece Of Cake On A Table . ', '50142.png': 'A Man Wearing A Suit And Tie With A Tie . ', '58310.png': 'A Group Of People Sitting Around A Table With A Laptop . ', '42510.png': 'A Man Wearing A Suit And Tie With A Tie . ', '37542.png': 'A Teddy Bear Wearing A Red Bow Tie . ', '41795.png': 'A Man Wearing A Suit And Tie With A Tie . ', '18937.png': 'A Display Of A Store With A Bunch Of Different Types Of Luggage . ', '14037.png': 'A Small Bird Sitting On A Tree Branch . ', '90568.png': 'A Man With A Tie And A Tie In His Mouth . ', '08534.png': 'A Man In A Suit And Tie With A Tie . ', '42751.png': 'A Man Is Holding A Piece Of Cake On A Table . ', '69518.png': 'A Truck With A Bunch Of Green And Yellow Tires ', '97162.png': 'A Man Is Holding A Cell Phone In His Hand . ', '31560.png': 'A Man Holding A Cell Phone In Front Of A Window . ', '14893.png': 'A Man In A Suit And Tie Standing In Front Of A Building . ', '45371.png': 'A Man Holding A Bunch Of Bananas On A Wooden Table . ', '54367.png': 'A Man Is Holding A Sign In Front Of A Building . ', '35708.png': 'A Bunch Of Stuffed Animals Sitting On A Table . ', '97543.png': 'A Man In A Suit And Tie In Front Of A Man . ', '36870.png': 'A Bunch Of People Sitting On A Bench In The Background . ', '12570.png': 'A Small Child Is Wearing A Tie And A Tie . ', '41265.png': 'A Red Fire Hydrant In The Middle Of A Field . ', '76951.png': 'A Black And White Photo Of A Cow With A Camera . ', '16837.png': 'A Man Wearing A Suit And Tie With A Tie . ', '30157.png': 'A Close Up Of A Person Standing In Front Of A Building ', '76498.png': 'A Group Of People Standing Next To A Large Clock . ', '04783.png': 'A Man In A Suit And Tie Standing In Front Of A Television . ', '59024.png': 'A Man Wearing A Hat And A Tie . ', '64051.png': 'A Man Is Holding A Baseball Bat On A Field . ', '90148.png': 'A Woman Is Holding A Cell Phone In Her Hand . ', '85092.png': 'A Man Wearing A Suit And Tie With A Tie . ', '41697.png': 'A Man Wearing A Suit And Tie With A Tie . ', '17860.png': 'A Cat Is Sitting On A Couch Next To A Cat . ', '24958.png': 'A Man Wearing A Hat And A Tie . ', '97160.png': 'A Man Is Holding A Cell Phone In Front Of A Man . ', '97860.png': 'A Man In A Suit And Tie With A Tie . ', '63524.png': 'A Man Holding A Cell Phone In His Hand . ', '70189.png': 'A Woman In A Dress Shirt And Tie With A Tie . ', '32587.png': 'A Young Boy Is Brushing His Teeth In The Mirror . ', '12967.png': 'A Group Of People Walking Down A Street Next To A Building . ', '67915.png': 'A Man And A Woman Sitting On A Couch With A Cell Phone . ', '03854.png': 'A Man Wearing A Suit And Tie With A Tie . ', '76938.png': \"A Person 'S Hand Is Sitting On A Motorcycle . \", '65037.png': 'A Man Wearing A Hat And A Hat . ', '39285.png': 'A Man Holding A Cell Phone In Front Of A Crowd . ', '67041.png': 'A Man Wearing A Suit And Tie With A Tie . ', '51680.png': 'A Person Holding A Cell Phone In Front Of A Building . ', '62981.png': 'A Man Wearing A Suit And Tie With A Tie . ', '42598.png': 'A Piece Of Cake On A Plate Next To A Cup Of Coffee . ', '05471.png': 'A Man In A Suit And Tie Standing In Front Of A Crowd . ', '97105.png': 'A Man Wearing A Suit And Tie With A Tie . ', '53160.png': 'A Group Of People Standing Next To A Truck . ', '70821.png': 'A Black And White Bird Sitting On A Tree Branch . ', '62831.png': 'A Dog Is Laying On A Blanket On A Couch . ', '78904.png': 'A Man Wearing A Suit And Tie With A Tie . ', '78164.png': 'A Man Is Holding A Bag Of Luggage In A Store . ', '68417.png': 'A Man In A Suit And Tie Sitting On A Table . ', '68521.png': 'A Man In A Hat Is Holding A Banana . ', '43961.png': 'A Man Wearing A Suit And Tie With A Tie . ', '76423.png': 'A Man Wearing A Suit And Tie With A Tie . ', '71963.png': 'A Group Of People Standing Around A Baseball Game . ', '07824.png': 'A Man Is Holding A Cell Phone In His Hand . ', '62850.png': 'A Man Is Holding A Cell Phone In Front Of A Building . ', '23109.png': 'A Man And Woman Are Holding A Cell Phone . ', '96804.png': 'A Brown And White Cow Is Eating From A Trough . ', '38712.png': 'A Stop Sign With A Stop Sign On It . ', '92541.png': 'A Brown And White Dog Laying On A Bed . ', '89206.png': 'A Small Dog Is Sitting On A Table . ', '42167.png': 'A Group Of People Standing Around A Baseball Game . ', '14679.png': 'A Man Is Holding A Cell Phone In Front Of A Laptop . ', '39416.png': 'A Little Girl Holding A Cell Phone In Front Of A Crowd . ', '62891.png': 'A Close Up Of A Piece Of Cake With A Knife . ', '09185.png': 'A Man Is Holding A Cell Phone In His Hand . ', '58479.png': 'A Woman Wearing A Red Shirt And A Tie . ', '26315.png': 'A Small Child Is Holding A Baby In A Bed . ', '13520.png': 'A Man Wearing A Suit And Tie With A Tie . ', '69524.png': 'A Man In A Black Shirt And A Black Tie ', '45931.png': 'A Man Wearing A Suit And Tie With A Tie . ', '27041.png': 'A Man With A Beard And A Tie In His Hand . ', '27801.png': 'A Man Wearing A Suit And Tie With A Tie . ', '95024.png': 'A Man With A Red Shirt And A Tie . ', '93718.png': 'A Man With A Hat And A Tie In Front Of A Crowd . ', '89072.png': 'A Man Holding A Baseball Bat And A Crowd Of People . ', '87615.png': 'A Black And White Photo Of A Black And White Photo ', '96235.png': 'A White And White Dog With A Red Bow On A Leash . ', '35692.png': 'A Man Is Sitting On A Bench With A Man In His Lap . ', '60389.png': 'A Man Wearing A Red Shirt And A Tie . ', '78624.png': 'A Man Standing Next To A Man Holding A Cell Phone . ', '83509.png': 'A Man Is Holding A Skateboard In Front Of A Building . ', '87645.png': 'A Black And White Photo Of A Person Holding A Cell Phone . ', '41362.png': 'A Man Wearing A Hat And A Tie . ', '75139.png': 'A Man And Woman In A Room With A Man And A Woman . ', '67835.png': 'A Man And Woman Are Holding A Cell Phone . ', '04281.png': 'A Black And White Photo Of A Man In A Suit And Tie . ', '14920.png': 'A Woman Is Holding A Teddy Bear In A Bed . ', '16082.png': 'A Man With A Hat And A Tie In His Lap . ', '72816.png': 'A Man With A Hat And A Tie In His Mouth . ', '36450.png': 'A Man In A Kitchen With A Microwave And A Microwave . ', '84106.png': 'A Man Is Holding A Cell Phone While Standing Next To A Building . ', '38724.png': 'A Group Of People Standing Around A Table With A Bunch Of Bananas . ', '97153.png': 'A Person Wearing A Hat And A Tie . ', '35620.png': 'A Close Up Of A Banana On A Table ', '67439.png': 'A Man With A Cell Phone In His Hand . ', '75104.png': 'A Man In A Suit And Tie With A Tie . ', '56981.png': 'A Clock Tower With A Clock On Top Of It . ', '56130.png': 'A Woman Holding A Cell Phone In Front Of A Woman . ', '36725.png': 'A Bunch Of Different Types Of Different Types Of Scissors . ', '27963.png': 'A Black And White Bird Sitting On A Tree Branch . ', '92643.png': 'A Man Wearing A Suit And Tie With A Tie . ', '94026.png': 'A Man Is Standing In Front Of A Crowd Of People . ', '15926.png': 'A Man With A Tie And A Tie In His Hand . ', '90752.png': 'A Group Of Men Standing Next To Each Other On A Tennis Court . ', '71305.png': 'A Man Holding A Smart Phone In His Mouth . ', '83964.png': 'A Woman In A Dress And A Tie With A Tie . ', '84392.png': 'A Man And Woman Are Eating A Cake . ', '30598.png': 'A Man Wearing A Hat And A Tie . ', '62815.png': 'A Man Wearing A Suit And Tie With A Tie . ', '13968.png': 'A Man Wearing A Suit And Tie With A Tie . ', '25436.png': 'A Man Wearing A Suit And Tie With A Tie . ', '17385.png': 'A Man Wearing A Hat And A Tie . ', '47581.png': 'A Person Holding A Piece Of Cake On A Table . ', '52768.png': 'A Cup Of Coffee And A Cup Of Coffee . ', '60827.png': 'A Large Clock On A Pole With A Clock On It . ', '65298.png': 'A Bowl Of Soup With A Spoon In It . ', '91462.png': 'A Man Is Sitting In Front Of A Laptop Computer . ', '48269.png': 'A Man Sitting On A Couch With A Laptop On His Lap . ', '18940.png': 'A Man Wearing A Red Shirt And A Tie . ', '63709.png': 'A Man Wearing A Suit And Tie With A Tie . ', '26184.png': 'A Man Wearing A Suit And Tie With A Tie . ', '09851.png': 'A Plate Of Food With A Spoon And A Fork . ', '73924.png': 'A Woman Wearing A Red Shirt And A Tie . ', '56870.png': 'A Man In A Suit And Tie In Front Of A Television . ', '58209.png': 'A Man Is Sitting On A Skateboard In A Room . ', '69521.png': 'A Man Wearing A Suit And Tie With A Tie . ', '72396.png': 'A Man In A Suit And Tie With A Tie . ', '43089.png': 'A Woman Wearing A Red Shirt And A Tie . ', '07651.png': 'A Man Is Sitting On A Couch With A Stuffed Animal . ', '28315.png': 'A Man Wearing A Suit And Tie With A Tie . ', '85136.png': 'A Man Is Sitting In Front Of A Window . ', '94153.png': 'A Man Wearing A Suit And Tie With A Tie . ', '12576.png': 'A Man Is Sitting On A Bed With A Laptop . ', '03178.png': 'A Man Wearing A Suit And Tie With A Tie . ', '78035.png': 'A Pizza With A Bunch Of Different Types Of Vegetables . ', '32491.png': 'A Man With A Beard And A Tie In His Mouth . ', '42931.png': 'A Cat Is Sitting On A Wooden Table . ', '91065.png': 'A Man Wearing A Suit And Tie With A Tie . ', '28957.png': 'A Red And White Photo Of A Red And White Photo . ', '53927.png': 'A Man With A Hat And A Hat On His Shoulder . ', '28134.png': 'A Group Of Men Standing Next To Each Other Holding A Cell Phone . ', '85916.png': 'A Car Parked Next To A Car Parked On A Street . ', '17230.png': 'A Man Is Holding A Cell Phone In Front Of A Crowd . ', '50186.png': 'A Black And White Dog Sitting On A Black Suitcase . ', '21305.png': 'A Man Is Flying A Kite In The Sky . ', '76320.png': 'A Man With A Hat And A Tie In His Hand . ', '14086.png': 'A Man Is Holding A Cell Phone In Front Of A Crowd . ', '73026.png': 'A Group Of People Sitting On A Beach With A Surfboard . ', '86129.png': 'A Man Is Holding A Bunch Of Bananas . ', '64285.png': 'A Dog Is Sitting On A Blue Blanket . ', '46785.png': 'A Man Is Sitting On A Cell Phone . ', '20691.png': 'A Man Is Eating A Donut With A Fork . ', '97823.png': 'A Man Wearing A Suit And Tie With A Tie . ', '70614.png': 'A Group Of People Standing Around A Table With A Bunch Of Bananas . ', '72340.png': 'A Man In A Suit And Tie Sitting On A Bench . ', '63092.png': 'A Man Is Sitting On A Couch With A Cell Phone . ', '97810.png': 'A Dog That Is Sitting On A Bench . ', '94723.png': 'A Man Wearing A Suit And Tie With A Tie . ', '09156.png': 'A Man In A Suit And Tie With A Tie . ', '81403.png': 'A Man And Woman Sitting On A Bench With A Teddy Bear . ', '72914.png': 'A Man Is Holding A Cell Phone In Front Of A Building . ', '47208.png': 'A Man Is Sitting On A Bench With A Frisbee . ', '50148.png': 'A Man Sitting On A Bench With A Banana . ', '16935.png': 'A Man Wearing A Suit And Tie With A Tie . ', '36508.png': 'A Man Wearing A Hat And A Tie . ', '39401.png': 'A Man In A Suit And Tie With A Camera . ', '48062.png': 'A Man Wearing A Hat And A Tie . ', '91358.png': 'A Man Wearing A Suit And Tie With A Tie . ', '83256.png': 'A Young Boy Wearing A Red Shirt And A Red Tie . ', '56143.png': 'A Man Wearing A Hat And A Tie . ', '16280.png': 'A Man Wearing A Suit And Tie With A Tie . ', '37018.png': 'A Black And White Cat Laying On A Bed . ', '74126.png': 'A Man Is Holding A Cell Phone In Front Of A Crowd . ', '38190.png': 'A Man Is Sitting On A Bench In A Room . ', '49387.png': 'A Man In A Suit And Tie With A Tie . ', '72506.png': 'A Group Of Cows That Are Standing In The Grass . ', '79258.png': 'A Bird With A Bird Sitting On A Branch . ', '80736.png': 'A Close Up Of A Pair Of Scissors On A Table . ', '02965.png': 'A Man Wearing A Suit And Tie With A Tie . ', '27685.png': 'A Man Is Holding A Cell Phone In Front Of A Building . ', '59043.png': 'A Man In A Suit And Tie With A Camera . ', '46137.png': 'A Man Holding A Cell Phone In His Hand . ', '87196.png': 'A Man Is Holding A Cell Phone In His Hand . ', '95687.png': 'A Man With A Hat And A Tie In His Lap . ', '38527.png': 'A Man Wearing A Tie And A Tie . ', '71562.png': 'A Man Is Standing In Front Of A Building With A Skateboard . ', '30629.png': 'A Man And Woman Sitting At A Table With A Laptop . ', '38417.png': 'A Man With A Hat Sitting On A Bench . ', '45289.png': 'A Black And White Photo Of A Toilet And A Cup . ', '14793.png': 'A Man And Woman Are Playing A Video Game . ', '65103.png': 'A Woman Is Sitting On A Bed With A Cat . ', '49728.png': 'A Woman Wearing A Red Shirt And A Tie . ', '72486.png': 'A Large Cake With A Bunch Of Bananas On It ', '53820.png': 'A Group Of People Sitting On A Bench With A Dog . ', '49726.png': 'A Man In A Black Shirt And A Black Tie . ', '09682.png': 'A Woman Is Holding A Cell Phone While Standing Next To A Woman . ', '25917.png': 'A Train Traveling Down A Track Next To A Road . ', '16089.png': 'A Man Standing In Front Of A Large Clock . ', '68019.png': 'A Man Wearing A Suit And Tie With A Tie . ', '70495.png': 'A Man Is Wearing A Suit And Tie . ', '67491.png': 'A Small Teddy Bear Sitting On A Shelf Next To A Toilet . ', '80945.png': 'A Man In A Suit And Tie With A Hat . ', '23091.png': 'A Small Child Is Sitting On A Table With A Piece Of Cake . ', '21593.png': 'A Man In A Suit And Tie With A Tie . ', '72195.png': 'A Man Is Sitting In Front Of A Laptop Computer . ', '30695.png': 'A Man Is Holding A Cell Phone In Front Of A Man . ', '69043.png': 'A Close Up Of A Pair Of Scissors ', '59812.png': 'A Man Is Holding A Frisbee In His Hand . ', '28067.png': 'A Man Wearing A Suit And Tie With A Tie . ', '13469.png': 'A Man Is Sitting On A Couch With A Cat . ', '39784.png': 'A Black And White Photo Of A White And White Photo ', '62198.png': 'A Man Wearing A Suit And Tie With A Tie . ', '50871.png': 'A Woman With A Red Shirt And A Tie . ', '74096.png': 'A Man Sitting On A Bench With A Cat . ', '58769.png': 'A Group Of Motorcycles Parked In A Field . ', '67138.png': 'A Man With A Hat Sitting On A Bench . ', '75086.png': 'A Woman Wearing A Red Shirt And A Tie . ', '78563.png': 'A Group Of People Standing In Front Of A Building . ', '68971.png': 'A Man In A Suit And Tie With A Tie . ', '21693.png': 'A Man Is Holding A Cell Phone In Front Of A Crowd . ', '05297.png': 'A Man Wearing A Suit And Tie In Front Of A Clock . ', '86401.png': 'A Man Is Holding A Cell Phone In Front Of A Building . ', '43197.png': 'A Man Is Holding A Stuffed Animal In A Room . ', '08597.png': 'A Man Is Standing In Front Of A Building . ', '67054.png': 'A Man In A Suit And Tie With A Camera . ', '84721.png': 'A Woman Wearing A Hat And A Tie . ', '91654.png': 'A Woman And Woman Are Sitting On A Couch . ', '58190.png': 'A Man With A Hat And A Tie On His Head . ', '54019.png': 'A Close Up Of A Person Holding A Banana ', '68512.png': 'A Pair Of Scissors Sitting On A Wall Next To A Wall . ', '59672.png': 'A Man With A Hat And A Tie In His Mouth . ', '83402.png': 'A Man Is Holding A Laptop In Front Of A Laptop . ', '45708.png': 'A Man Is Laying On A Bed With A Blanket . ', '46312.png': 'A Man Holding A Baby In A Brown And White Cat . ', '98305.png': 'A Man With A Beard And A Tie In His Mouth . ', '39421.png': 'A Man Wearing A Suit And Tie With A Tie . ', '93071.png': 'A Woman Is Sitting On A Bed With A Laptop . ', '69528.png': 'A Person Wearing A Red Shirt And A Tie ', '90861.png': 'A Group Of People Standing Around A Table With A Cake . ', '40539.png': 'A Couple Of Birds Sitting On A Rock . ', '06374.png': 'A Group Of People Standing Around A Building With A Clock . ', '12376.png': 'A Man Wearing A Suit And Tie With A Tie . ', '27134.png': 'A Man Is Sitting In Front Of A Table With A Cake . ', '46852.png': 'A Man With A Tie And A Tie In His Hand . ', '65349.png': 'A Woman Is Holding A Cell Phone In Her Hand . ', '91208.png': 'A Man Wearing A Suit And Tie With A Tie . ', '82079.png': 'A Man Holding A Bat And A Woman Holding A Cell Phone . ', '74380.png': 'A Man Is Holding A Cell Phone In His Hand . ', '53740.png': 'A Man Wearing A Suit And Tie With A Tie . ', '09841.png': 'A Man Wearing A Suit And Tie With A Tie . ', '58349.png': 'A Plate Of Food With A Spoon And A Fork . ', '74356.png': 'A Man Wearing A Suit And Tie With A Tie . ', '48396.png': 'A Person Holding A Banana In A Package . ', '95403.png': 'A Woman In A Red Shirt And A Tie ', '06934.png': 'A Man Sitting On A Bench With A Cat On His Lap . ', '04859.png': 'A Man Wearing A Suit And Tie With A Tie . ', '29178.png': 'A Close Up Of A Dog With A Hat On It ', '69351.png': 'A Small Brown Dog Is Laying On A Bed . ', '13798.png': 'A Man Is Holding A Knife And A Bottle Of Wine . ', '91320.png': 'A Group Of People Sitting Around A Table With A Laptop . ', '06579.png': 'A Man And Woman Eating A Donut In A Restaurant . ', '47012.png': 'A Man Holding A Donut In Front Of A Crowd . ', '54632.png': 'A Woman Wearing A Suit And Tie With A Tie . ', '95861.png': 'A Dog Is Sitting On A Couch With A Cat . ', '32971.png': 'A Man Wearing A Suit And Tie With A Tie . ', '91064.png': 'A Man Is Holding A Cell Phone In Front Of A Building . ', '94506.png': 'A Man In A Red Shirt And A Red Tie . ', '82461.png': 'A Black And White Photo Of A Man Standing Next To A Building . ', '94305.png': 'A Woman Is Holding A Cell Phone In Her Hand . ', '64301.png': 'A Close Up Of A Cake With A Candle On It ', '48697.png': 'A Man Is Holding A Cell Phone In His Hand . ', '28435.png': 'A Man In A Suit And Tie With A Camera . ', '62381.png': 'A Young Girl Wearing A Red Bow Tie . ', '34756.png': 'A Man Holding A Baseball Bat In Front Of A Crowd . ', '79815.png': 'A Man Wearing A Hat And A Tie . ', '32591.png': 'A Man Is Sitting On A Bench In Front Of A Building . ', '62184.png': 'A Man With A Tie And A Tie In His Mouth . ', '59328.png': 'A Man Wearing A Suit And Tie With A Tie . ', '32647.png': 'A Close Up Of A Plate Of Food With A Fork . ', '01598.png': 'A Dog Is Sitting On A Couch With A Cat On It . ', '89750.png': 'A Person Wearing A Tie And A Tie . ', '93215.png': 'A Close Up Of A Black And White Photo Of A Cake ', '41063.png': 'A Man Wearing A Suit And Tie In A Room . ', '56183.png': 'A Person Wearing A Red Shirt And A Red Tie ', '42380.png': 'A Man Is Holding A Pair Of Scissors . ', '21468.png': 'A Man Wearing A Tie And A Tie . ', '06539.png': 'A Man Wearing A Red Shirt And A Tie . ', '80162.png': 'A Man With A Hat And A Tie In Front Of A Television . ', '94071.png': 'A Man Standing Next To A Fire Hydrant . ', '50927.png': 'A Woman In A Dress And A Tie With A Pink Tie . ', '52490.png': 'A Man Is Holding A Cell Phone In Front Of A Building . ', '87695.png': 'A Man Holding A Teddy Bear In A Room . ', '30721.png': 'A Man In A Suit And Tie With A Hat . ', '23851.png': 'A Man Wearing A Suit And Tie With A Tie . ', '78104.png': 'A Woman Is Holding A Cell Phone In Front Of A Building . ', '97386.png': 'A Man With A Tie And A Tie In His Mouth . ', '16820.png': 'A Man With A Hat And A Tie In The Background . ', '20684.png': 'A Man Wearing A Suit And Tie With A Tie . ', '80316.png': 'A Group Of People Sitting Around A Table With A Cake . ', '93725.png': 'A Dog Is Sitting On A Couch With A Frisbee . ', '45630.png': 'A Woman Is Holding A Cell Phone In Her Hand . ', '13270.png': 'A Man Wearing A Red Shirt And A Tie . ', '96150.png': 'A Man In A Suit And Tie Standing In Front Of A Building . ', '87140.png': 'A Woman In A Dress And A Tie With A Red Tie . ', '46352.png': 'A Man In A Suit And Tie With A Sword . ', '64918.png': 'A Dog Is Sitting On A Couch With A Frisbee . ', '71348.png': 'A Man Wearing A Tie And A Tie . ', '96734.png': 'A Woman And Woman Sitting At A Table Eating A Meal . ', '06543.png': 'A Man Is Jumping A Skateboard On A Ramp . ', '49087.png': 'A Close Up Of A Street Sign With A Clock On It . ', '08452.png': 'A Man Wearing A Suit And Tie With A Tie . ', '82076.png': 'A Person Is Holding A Piece Of Cake . ', '43192.png': 'A Black And White Cat Sitting On A Wooden Table . ', '58327.png': 'A Small White Cake With A Knife And A Knife . ', '02459.png': 'A Man Is Holding A Piece Of Cake On A Table . ', '03984.png': 'A Man In A Suit And Tie With A Tie . ', '29503.png': 'A Man With A Hat Sitting On A Bench . ', '34518.png': 'A Man Is Holding A Baseball Bat In His Hand . ', '94162.png': 'A Man Is Holding A Cell Phone In Front Of A Television . ', '51403.png': 'A Man Wearing A Suit And Tie With A Tie . ', '31758.png': 'A Man Is Holding A Cell Phone In Front Of A Store . ', '17834.png': 'A Man Is Holding A Baseball Bat In His Hand . ', '49786.png': 'A Group Of People Standing Around A Large Group Of People . ', '40563.png': 'A Man Is Sitting On A Bench With A Person . ', '65807.png': 'A Man In A Suit And Tie With A Tie . ', '40792.png': 'A Young Boy Is Holding A Remote Control . ', '09267.png': 'A Man Wearing A Suit And Tie With A Tie . ', '13650.png': 'A Bunch Of Bananas On A Wooden Table . ', '68721.png': 'A Man Holding A Cell Phone In Front Of A Car . ', '32957.png': 'A Man Is Sitting On A Table With A Teddy Bear . ', '31547.png': 'A Large Group Of Different Types Of Different Types Of Scissors . ', '71524.png': 'A Person Is Holding A Cell Phone In Their Hands . ', '06213.png': 'A Man Holding A Baseball Bat And A Man . ', '56081.png': 'A Small Bird Sitting On A Table Next To A Window . ', '02194.png': 'A Man And A Woman Are Looking At A Giraffe . ', '72891.png': 'A Man With A Beard And A Tie In His Mouth . ', '56712.png': 'A Man Holding A Remote In His Hand . ', '35614.png': 'A Man Wearing A Suit And Tie With A Tie . ', '30957.png': 'A Woman Wearing A Tie And A Tie . ', '46507.png': 'A Man With A Hat And A Tie On A Table . ', '19074.png': 'A Man Wearing A Suit And Tie With A Tie . ', '38549.png': 'A Group Of People Sitting On A Bench In Front Of A Building . ', '60598.png': 'A Group Of People Standing Next To A Bunch Of Bananas . ', '80126.png': 'A Man Is Holding A Surfboard In The Ocean . ', '76815.png': 'A Man Holding A Cell Phone In Front Of A Building . ', '98103.png': 'A Man Wearing A Suit And Tie With A Tie . ', '43956.png': 'A Man In A Suit And Tie With A Camera . ', '54672.png': 'A Man Wearing A Suit And Tie With A Tie . ', '07391.png': 'A Man Holding A Cell Phone In Front Of A Crowd . ', '29158.png': 'A Man With A Hat And A Tie In His Lap . ', '56709.png': 'A Man With A Hat And A Tie In His Mouth . ', '21648.png': 'A Man Holding A Tennis Racket In Front Of A Crowd . ', '76208.png': 'A Close Up Of A Cow In A Field ', '95103.png': 'A Man Wearing A Suit And Tie With A Tie . ', '09486.png': 'A Woman In A Dress Shirt And A Tie . ', '98702.png': 'A Man With A Cell Phone In His Hand . ', '19643.png': 'A Close Up Of A Cow In A Fenced Area ', '94802.png': \"A Black And White Photo Of A Person 'S Feet \", '23905.png': 'A Man Is Holding A Cell Phone In Front Of A Building . ', '67892.png': 'A Woman Holding A Cell Phone In Her Hand . ', '24038.png': 'A Man Is Sitting In Front Of A Laptop Computer . ', '96431.png': 'A Man Is Holding A Donut In His Hand . ', '82045.png': 'A Person Is Holding A Piece Of Cake On A Table . ', '87340.png': 'A Man Sitting On A Bench With A Cat On His Lap . ', '31268.png': 'A Man Is Holding A Cell Phone In Front Of A Crowd . ', '82359.png': 'A Man Is Sitting On A Bench With A Cell Phone . ', '21043.png': 'A Man Wearing A Suit And Tie With A Tie . ', '07853.png': 'A Dog Is Sitting On A Green Chair . ', '35276.png': 'A Man With A Hat And A Hat On A Cell Phone . ', '96720.png': 'A Black Bear Is Standing In A Field . ', '53980.png': 'A Black And White Dog With A Frisbee In Its Mouth . ', '02956.png': 'A Young Boy Is Laying On A Bed With A Remote . ', '54317.png': 'A Man And Woman In A Room With A Man And A Woman . ', '05973.png': 'A Man And A Woman Eating A Piece Of Cake . ', '75319.png': 'A Man With A Hat And A Tie In His Mouth . ', '90632.png': 'A Man Wearing A Suit And Tie With A Tie . ', '72968.png': 'A Man Standing In Front Of A Cake With A Candle . ', '38647.png': 'A Man Wearing A Suit And Tie With A Tie . ', '42810.png': 'A Man With A Beard And A Tie In His Mouth . ', '76910.png': 'A Man With A Hat And A Tie In His Mouth . ', '07956.png': 'A Woman Wearing A Red Shirt And A Tie . ', '49165.png': 'A Man Wearing A Suit And Tie With A Tie . ', '24537.png': 'A Group Of People Standing Around A Red Fire Hydrant . ', '41589.png': 'A Dog Is Sitting On A Couch With A Remote . ', '89615.png': 'A Man Holding A Cell Phone In Front Of A Man . ', '12907.png': 'A Man With A Cell Phone In His Mouth . ', '45396.png': 'A Man In A Suit And Tie Is Sitting On A Chair . ', '85417.png': 'A Woman Holding A Cell Phone In Front Of A Woman . ', '14580.png': 'A Man Wearing A Hat And A Tie . ', '63714.png': 'A Man Wearing A Suit And Tie With A Tie . ', '73561.png': 'A Man In A Suit And Tie With A Tie . ', '67193.png': 'A Man Is Holding A Skateboard In Front Of A Building . ', '18094.png': 'A Man Holding A Smart Phone In His Hand . ', '37419.png': 'A Man Is Holding A Remote In His Mouth . ', '51943.png': 'A Man In A Suit And Tie Standing In Front Of A Building . ', '06291.png': 'A Man Is Sitting On A Bed With A Laptop . ', '02571.png': 'A Man And Woman In A Suit And Tie . ', '62947.png': 'A Man Sitting At A Table With A Cake And A Candle . ', '24857.png': 'A Car Parked Next To A Parking Meter . ', '34927.png': 'A Man Is Holding A Cell Phone While Standing In Front Of A Crowd . ', '70415.png': 'A Person Holding A Banana In A Hand . ', '29138.png': 'A Man Wearing A Suit And Tie With A Tie . ', '87063.png': 'A Small Bird Sitting On A Table Next To A Cup Of Coffee . ', '35709.png': 'A Close Up Of A Person Holding A Banana ', '57248.png': 'A Man Wearing A Suit And Tie With A Tie . ', '37509.png': 'A Man Wearing A Black Shirt And A Tie . ', '02761.png': 'A Man With A Tie And A Tie In His Mouth . ', '87401.png': 'A Man In A Suit And Tie Standing In Front Of A Tree . ', '27480.png': 'A Man With A Tie And A Tie In His Hand . ', '73568.png': 'A Man Is Holding A Frisbee In His Hand . ', '57802.png': 'A Man Is Standing On A Skateboard In The Street . ', '30851.png': 'A Man Wearing A Suit And Tie With A Tie . ', '37984.png': 'A Man And Woman In A Dress And Tie . ', '91802.png': 'A Man Holding A Smart Phone In Front Of A Building . ', '43721.png': 'A Man Wearing A Suit And Tie With A Tie . ', '36598.png': 'A Woman Is Standing In Front Of A Building . ', '32140.png': 'A Man Wearing A Suit And Tie With A Tie . ', '21504.png': 'A Person Is Sitting On A Bench With A Laptop . ', '09834.png': 'A Man Wearing A Red Shirt And A Tie . ', '78243.png': 'A Man And Woman Holding A Cell Phone In Their Hands . ', '04639.png': 'A Man With A Tie In His Hand . ', '74802.png': 'A Man With A Hat And A Tie In His Hand . ', '89561.png': 'A Man Wearing A Hat And A Tie . ', '31429.png': 'A Man With A Tie And A Tie In His Hand . ', '41067.png': 'A Dog Is Sitting On A Couch With A Frisbee . ', '48710.png': 'A Truck Is Parked In A Parking Lot . ', '78069.png': 'A Small Child Is Holding A Baby In A Bed . ', '28147.png': 'A Woman Wearing A Red Shirt And A Tie . ', '20491.png': 'A Man With A Hat And A Hat On A Cell Phone . ', '28970.png': 'A Group Of People Standing Around A Table With A Cell Phone . ', '02385.png': 'A Man Sitting On A Bench With A Dog On His Lap . ', '19783.png': 'A Man Is Holding A Baseball Bat In Front Of A Crowd . ', '07865.png': 'A Woman Is Holding A Cell Phone In Her Hand . ', '14569.png': 'A Man Holding A Pink Umbrella In Front Of A Tree . ', '05931.png': 'A Man Wearing A Suit And Tie With A Tie . ', '48096.png': 'A Man Is Holding A Cell Phone In Front Of A Wall . ', '43615.png': 'A Close Up Of A Sign With A Clock On It ', '91340.png': 'A Man Wearing A Suit And Tie With A Tie . ', '01295.png': 'A Group Of People Standing Next To Each Other On A Table . ', '86013.png': 'A Man In A Black Shirt And A Tie ', '59641.png': 'A Close Up Of A Stop Sign With A Sign On It . ', '63812.png': 'A Man Wearing A Suit And Tie With A Tie . ', '89264.png': \"A Person 'S Hand Holding A Cell Phone In Front Of A Building . \", '75298.png': 'A Man With A Hat And A Tie In His Mouth . ', '76293.png': 'A Man In A Suit And Tie Sitting On A Bench . ', '07594.png': 'A Man Wearing A Suit And Tie With A Tie . ', '64758.png': 'A Group Of Men Standing Next To A Group Of People . ', '13945.png': 'A Group Of People Sitting Around A Table With A Cake . ', '67130.png': 'A Young Boy Is Brushing His Teeth In The Mirror . ', '94108.png': 'A Group Of Young Men Standing Next To Each Other . ', '18267.png': 'A Man Is Riding A Horse In A Pen . ', '80591.png': 'A Man Is Sitting In A Chair With A Cat . ', '31609.png': 'A Man Is Holding A Stuffed Animal In His Mouth . ', '12647.png': 'A Man Wearing A Suit And Tie With A Tie . ', '05872.png': 'A Man Is Standing In Front Of A Store . ', '93027.png': 'A Man Wearing A Suit And Tie With A Tie . ', '18739.png': 'A Man In A Suit And Tie With A Tie . ', '25198.png': 'A Man With A Tie And A Tie In His Mouth . ', '76183.png': 'A Man Holding A Baby In A Baseball Game . ', '60348.png': 'A Man In A Suit And Tie With A Tie . ', '02475.png': 'A Man And A Woman Are Sitting On A Bench . ', '04157.png': 'A Man In A Black Shirt And A Black Tie . ', '46827.png': 'A Man With A Tie And A Tie In His Hand . ', '94872.png': 'A Man Is Holding A Cake With A Candle On It . ', '17034.png': 'A Man With A Tie And A Tie In His Mouth . ', '47386.png': 'A Person Is Holding A Piece Of Cake On A Table . ', '20149.png': 'A Man Holding A Banana In His Hand . ', '67254.png': 'A Man Wearing A Suit And Tie With A Tie . ', '16359.png': 'A Man Wearing A Suit And Tie With A Tie . ', '28764.png': 'A Man Wearing A Suit And Tie With A Tie . ', '46013.png': 'A Man Wearing A Suit And Tie With A Tie . ', '69175.png': 'A Man Wearing A Suit And Tie With A Tie . ', '14658.png': 'A Man Wearing A Suit And Tie With A Tie . ', '25097.png': 'A Man With A Cell Phone In His Mouth . ', '13960.png': 'A Man In A Suit And Tie With A Tie . ', '10483.png': 'A Man In A Suit And Tie With A Tie . ', '01379.png': 'A Man And Woman Sitting On A Table With A Cell Phone . ', '27418.png': 'A Man In A Suit And Tie With A Tie . ', '70281.png': 'A Man Wearing A Suit And Tie With A Tie . ', '16540.png': 'A Man Wearing A Suit And Tie With A Tie . ', '92341.png': 'A Bird Sitting On A Branch With A Bird In The Background . ', '71659.png': 'A Man Is Holding A Baseball Bat And A Man . ', '27304.png': 'A Cat Is Sitting On A Wooden Table . ', '90321.png': 'A Man Is Holding A Baseball Bat In Front Of A Crowd . ', '75908.png': 'A Man In A Suit And Tie With A Sword . ', '98421.png': 'A Person Holding A Cell Phone In Front Of A Building . ', '31204.png': 'A Woman In A Dress Shirt And A Tie . ', '53482.png': 'A Black And White Photo Of A Black And White Photo . ', '17630.png': 'A Dog Is Sitting On A Couch With A Cat . ', '60532.png': 'A Woman Is Sitting On A Bed With A Laptop . ', '71902.png': 'A Woman Wearing A Red Shirt And A Tie . ', '07496.png': 'A Man Wearing A Red Shirt And A Tie . ', '38954.png': 'A Man Wearing A Tie And A Tie . ', '48052.png': 'A Man Wearing A Red Shirt And A Tie . ', '51683.png': 'A Man With A Tie And A Tie In His Mouth . ', '02793.png': 'A Man Is Standing In A Boat In The Water . ', '45732.png': 'A Man Is Holding A Cell Phone In Front Of A Television . ', '59408.png': 'A Man With A Tie And A Tie In His Mouth . ', '37180.png': 'A Man Is Sitting On A Bench With A Cell Phone . ', '71930.png': 'A Man Wearing A Suit And Tie With A Tie . ', '47905.png': 'A Man Wearing A Suit And Tie With A Tie . ', '30546.png': 'A Teddy Bear Wearing A Red Shirt And A Red Tie . ', '26149.png': 'A Man Is Sitting On A Bench With A Dog . ', '86741.png': 'A Man Is Sitting On A Motorcycle In A Parking Lot . ', '37208.png': 'A Man With A Beard And A Tie In His Mouth . ', '76139.png': 'A Man Wearing A Red Shirt And A Tie . ', '02594.png': 'A Close Up Of A Person Holding A Cell Phone ', '43679.png': 'A Man In A Suit And Tie With A Tie . ', '40136.png': 'A Man Holding A Baseball Bat In Front Of A Tree . ', '09523.png': 'A Man With A Tie And A Tie In His Mouth . ', '49278.png': 'A Brown Bear Sitting On A Tree Branch . ', '65371.png': 'A Cat Is Sitting On A Chair Next To A Cat . ', '15723.png': 'A Man With A Cell Phone In Front Of A Building . ', '13450.png': 'A Man In A Suit And Tie Standing In Front Of A Building . ', '25943.png': 'A Man With A Tie And A Tie In His Hand . ', '64910.png': 'A Man Wearing A Suit And Tie With A Tie . ', '69480.png': 'A Woman Wearing A Red Shirt And A Tie . ', '65301.png': 'A Woman Wearing A Red Shirt And A Tie . ', '76254.png': 'A Man Wearing A Suit And Tie With A Tie . ', '96420.png': 'A Man In A Suit And Tie With A Tie . ', '04125.png': 'A Man In A Suit And Tie With A Camera In Front Of Him . ', '43015.png': 'A Brown And White Cow Standing In A Field . ', '96034.png': 'A Man Is Holding A Remote In Front Of A Television . ', '20745.png': 'A Person Is Sitting On A Bench In Front Of A Building . ', '90178.png': 'A Man Is Sitting On A Bench In Front Of A Building . ', '61459.png': 'A Man Holding A Piece Of Cake On A Table . ', '19430.png': 'A Bunch Of Different Types Of Different Types Of Luggage . ', '91428.png': 'A Man Wearing A Hat And A Hat On A Skateboard . ', '63905.png': 'A Man In A Suit And Tie With A Tie . ', '56387.png': 'A Brown Bear Sitting On A Tree Branch . ', '96873.png': 'A Man Wearing A Hat And A Tie . ', '37915.png': 'A Man Wearing A Suit And Tie With A Tie . ', '76980.png': 'A Man Wearing A Suit And Tie With A Tie . ', '90138.png': 'A Man In A Suit And Tie With A Tie . ', '38416.png': 'A Close Up Of A Person Holding A Baseball Bat ', '24376.png': 'A Man Wearing A Suit And Tie With A Tie . ', '79682.png': 'A Man Wearing A Hat And A Tie In His Mouth . ', '36724.png': 'A Man In A Suit And Tie With A Phone . ', '07628.png': 'A Man Wearing A Suit And Tie With A Tie . ', '01637.png': 'A Black And White Photo Of A Black And White Photo ', '15238.png': 'A Bunch Of Different Types Of Different Types Of Snow . ', '48630.png': 'A Bird Sitting On A Table Next To A Bird . ', '28751.png': 'A Close Up Of A Clock On A Wall ', '02317.png': 'A Man Is Holding A Baseball Bat And A Man . ', '48617.png': 'A Woman Is Holding A Surfboard In The Ocean . ', '21835.png': 'A Teddy Bear With A Red Bow Tie And A Red Bow Tie . ', '51029.png': 'A Man Wearing A Hat And A Tie . ', '27341.png': 'A Man Holding A Cell Phone In Front Of A Tree . ', '91236.png': 'A Man Is Sitting In A Train On A Train . ', '05941.png': 'A Person Is Holding A Stuffed Animal In A Bed . ', '71692.png': 'A Black And White Cat Sitting On A Green Grass . ', '81497.png': 'A Man With A Hat And A Tie In His Lap . ', '20194.png': 'A Man And Woman Are Holding A Teddy Bear . ', '04926.png': 'A Man Wearing A Hat And A Tie . ', '23501.png': 'A Person Holding A Piece Of Cake On A Table . ', '58014.png': 'A Man Holding A Banana In His Hand . ', '18273.png': 'A Sign That Is On A Pole With A Sign On It . ', '98307.png': 'A Person Is Holding A Knife And A Knife . ', '72814.png': 'A Group Of People Sitting Around A Table With A Bunch Of Food . ', '01589.png': 'A Man Wearing A Suit And Tie With A Tie . ', '28674.png': 'A Dog Is Sitting On A Couch With A Remote . ', '69530.png': 'A Man And Woman Standing Next To A Man Holding A Cell Phone . ', '69758.png': 'A Bunch Of Different Types Of Bananas On A Tree . ', '50789.png': 'A Black And White Photo Of A Person Holding A Frisbee . ', '90541.png': 'A Man With A Tie And A Tie In His Hand . ', '09326.png': 'A Man Is Holding A Smart Phone In Front Of A Crowd . ', '89350.png': 'A Young Boy Is Brushing His Teeth In The Bathroom . ', '54082.png': 'A Man Is Sitting In Front Of A Laptop . ', '72641.png': 'A Man Wearing A Hat And A Tie . ', '14590.png': 'A Man And A Woman Are Standing Next To A Bunch Of Bananas . ', '62789.png': 'A Large Building With A Clock On It . ', '90126.png': 'A Man Is Holding A Cell Phone In Front Of A Building . ', '30526.png': 'A Man Holding A Piece Of Cake On A Table . ', '82973.png': 'A Young Girl Is Brushing Her Teeth With A Toothbrush . ', '12374.png': 'A Woman Is Sitting On A Couch With A Cell Phone . ', '49170.png': 'A Man Is Sitting On A Couch Holding A Cell Phone . ', '04183.png': 'A Man And Woman In A Restaurant With A Bunch Of Food . ', '92613.png': 'A Woman And Woman Are Sitting On A Couch . ', '05987.png': 'A Man Is Standing Next To A Man Holding A Cell Phone . ', '02718.png': 'A Person Is Holding A Remote Control In His Hand . ', '38154.png': 'A Man Is Sitting On A Rock With A Bird . ', '71360.png': 'A Man With A Tie And A Tie In Front Of A Television . ', '12507.png': 'A Man Standing Next To A Store With A Bunch Of Bananas . ', '83527.png': 'A Black And White Dog Sitting On A Table . ', '36107.png': 'A Man In A Black Shirt And A White Shirt . ', '72594.png': 'A Truck With A Red Truck Parked On The Side Of A Road . ', '34190.png': 'A Man Wearing A Suit And Tie With A Tie . ', '36098.png': 'A Man Is Holding A Pair Of Scissors . ', '46097.png': 'A Man In A Suit And Tie With A Tie . ', '36812.png': 'A Group Of Birds Standing On Top Of A Rock . ', '98625.png': 'A Man With A Hat And A Tie In His Hand . ', '61935.png': 'A Close Up Of A Person Holding A Cell Phone ', '69087.png': 'A Man Wearing A Suit And Tie With A Tie . ', '51493.png': 'A Man Wearing A Suit And Tie With A Tie . ', '48357.png': 'A Large Group Of Boats In A River With A Bridge In The Background . ', '64721.png': 'A Man Is Sitting On A Brown Horse ', '82316.png': 'A Man And Woman Holding A Cell Phone In Their Hands . ', '58016.png': 'A Man In A Suit And Tie With A Tie . ', '80153.png': 'A Man Wearing A Suit And Tie With A Tie . ', '52714.png': 'A Man Holding A Cell Phone In His Hand . ', '75068.png': 'A Man Sitting On A Bench In A Room . ', '63894.png': 'A Man Holding A Smart Phone In Front Of A Building . ', '04185.png': 'A Black And White Photo Of A Cow With A Cow In The Background . ', '13962.png': 'A Man Is Holding A Cell Phone In Front Of A Car . ', '72406.png': 'A Man In A Black Shirt And A Tie . ', '83972.png': 'A Man With A Beard And A Tie In His Mouth . ', '14362.png': 'A Man Wearing A Suit And Tie With A Tie . ', '08564.png': 'A Man Is Holding A Cell Phone In Front Of A Building . ', '82014.png': 'A Man With A Tie And A Tie In Front Of A Crowd . ', '94512.png': 'A Man With A Tie And A Tie In His Hand . ', '56429.png': 'A Train Is Sitting On A Train Track . ', '82657.png': 'A Man Wearing A Suit And Tie With A Tie . ', '29760.png': 'A Person Is Holding A Laptop In Front Of A Laptop . ', '49635.png': 'A Clock On A Pole With A Clock On It . ', '53068.png': 'A Man And Woman Are Holding A Teddy Bear . ', '56470.png': 'A White Dog Wearing A Blue Shirt And A Blue Shirt . ', '57812.png': 'A Man Wearing A Suit And Tie With A Tie . ', '31497.png': 'A Man Wearing A Suit And Tie With A Tie . ', '01682.png': 'A Person Holding A Hot Dog In A Bun . ', '87691.png': 'A Man Wearing A Suit And Tie With A Tie . ', '58901.png': 'A Man In A Suit And Tie With A Clock . ', '94518.png': 'A Man Holding A Banana Up To His Ear . ', '47620.png': 'A Man Is Holding A Large Brown Teddy Bear . ', '05482.png': 'A Man With A Hat And A Tie In His Mouth . ', '25461.png': 'A Close Up Of A Cake With A Candle On It ', '09531.png': 'A Close Up Of A Bird With A Bird On It ', '96452.png': 'A Bunch Of People Standing Around A Table With A Bunch Of Bananas . ', '29816.png': 'A Man Is Brushing His Teeth In A Mirror . ', '08937.png': 'A Close Up Of A Piece Of Cake On A Table ', '84729.png': 'A Close Up Of A Piece Of Cake On A Plate ', '36197.png': 'A Man Holding A Smart Phone In His Hand . ', '43579.png': 'A Man And Woman In A Park With A Cell Phone . ', '40693.png': 'A Man Wearing A Suit And Tie With A Tie . ', '75603.png': 'A Man Is Sitting On A Motorcycle On A Street . ', '83692.png': 'A Close Up Of A Person Holding A Cell Phone ', '68579.png': 'A Man In A Suit And Tie With A Tie . ', '72958.png': 'A Man Wearing A Suit And Tie With A Tie . ', '85710.png': 'A Man In A Suit And Tie Standing In Front Of A Building . ', '65019.png': 'A Man Is Holding A Cell Phone In Front Of A Television . ', '68179.png': 'A Man Is Talking On A Cell Phone . ', '10893.png': 'A Bunch Of Different Types Of Different Types Of Scissors . ', '18307.png': 'A Man Wearing A Suit And Tie With A Tie . ', '57134.png': 'A Black And White Photo Of A Man Wearing A Suit . ', '30182.png': 'A Cake With A Bunch Of Different Types Of Food On It . ', '29708.png': 'A Man Wearing A Suit And Tie With A Tie . ', '14830.png': 'A Close Up Of A Bird That Is Sitting On A Tree . ', '98134.png': 'A Black And White Photo Of A Man Wearing A Suit . ', '74652.png': 'A Man Is Holding A Glass Of Wine . ', '06531.png': 'A Man Is Holding A Piece Of Cake On A Table . ', '43691.png': 'A Woman Wearing A Red Shirt And A Tie . ', '12453.png': 'A Picture Of A Clock And A Glass Vase ', '53147.png': 'A Group Of People Standing Around A Table With A Bunch Of Food . ', '90125.png': 'A Man And Woman With A Tie And A Woman . ', '56489.png': 'A Group Of People Standing Around A Table With A Cake . ', '89417.png': 'A Man Is Doing A Trick On A Skateboard . ', '86123.png': 'A Woman Sitting On A Couch With A Cell Phone . ', '86032.png': 'A Man Wearing A Suit And Tie With A Tie . ', '17623.png': 'A Man Is Sitting On A Motorcycle With A Man In His Lap . ', '65094.png': 'A Man Wearing A Suit And Tie With A Tie . ', '58491.png': 'A Stainless Steel Refrigerator With A Microwave And A Microwave . ', '13269.png': 'A Group Of People Standing Around A Table With A Bunch Of Bananas . ', '81692.png': 'A Group Of Sheep In A Field With A Bird On It . ', '06794.png': 'A Black And White Photo Of A Black And White Photo ', '08719.png': 'A Woman Holding A Cake With A Candle On It . ', '58764.png': 'A Pair Of Scissors And A Cell Phone On A Table . ', '71846.png': 'A Man Wearing A Suit And Tie With A Tie . ', '07895.png': 'A Man Wearing A Suit And Tie In A Suit . ', '71463.png': 'A Young Boy Is Playing With A Frisbee . ', '13458.png': 'A Small Dog Is Sitting On A Table With A Remote . ', '82037.png': 'A Young Girl Wearing A Red Shirt And A Tie . ', '43906.png': 'A Man In A Suit And Tie With A Tie . ', '06728.png': 'A Man Holding A Cell Phone In Front Of A Man . ', '40852.png': 'A Man And A Woman Sitting On A Couch With A Remote . ', '40875.png': 'A Person Holding A Smart Phone In Front Of A Crowd . ', '03145.png': 'A Close Up Of A Red And White Toothbrush . ', '74385.png': 'A Man Is Jumping A Skateboard On A Ramp . ', '32891.png': 'A Man With A Tie And A Tie In His Hand . ', '24918.png': 'A Train Station With A Train On The Tracks . ', '29513.png': 'A Man Is Sitting On A Bench With A Cell Phone . ', '64957.png': 'A Woman Is Holding A Small Child In A Kitchen . ', '93648.png': 'A Man In A Suit And Tie With A Tie . ', '91540.png': 'A Woman Is Sitting In A Bed With A Red Tie . ', '12597.png': 'A Man Wearing A Hat And A Tie With A Hat . ', '43271.png': 'A Black And White Photo Of A Building With A Clock On It . ', '76431.png': 'A Group Of People Standing Around A Table With A Bunch Of Bananas . ', '14386.png': 'A Black And White Cat Sitting On A Black Couch . ', '21869.png': 'A Man Wearing A Hat And A Tie . ', '78236.png': 'A Man With A Hat And A Tie In His Hand . ', '09247.png': 'A Bunch Of Different Types Of Different Types Of Donuts . ', '21450.png': 'A Plate Of Food With A Glass Of Wine . '}\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5_77_zNLgXLj",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9493b1bf-d377-456c-c59c-2cec411de6c9"
      },
      "source": [
        "d.keys()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dict_keys(['93618.png', '05283.png', '49106.png', '40837.png', '39106.png', '02763.png', '58793.png', '42961.png', '70612.png', '90842.png', '13465.png', '67953.png', '43907.png', '58264.png', '32189.png', '05869.png', '82631.png', '50184.png', '83461.png', '37806.png', '45307.png', '86127.png', '21486.png', '45198.png', '71825.png', '53821.png', '45072.png', '16543.png', '67521.png', '71689.png', '61953.png', '35907.png', '17405.png', '67043.png', '05138.png', '07693.png', '54912.png', '59307.png', '67531.png', '83201.png', '03528.png', '93287.png', '12483.png', '51472.png', '47051.png', '56912.png', '45231.png', '68254.png', '70296.png', '75098.png', '70142.png', '30561.png', '53140.png', '49750.png', '57482.png', '02431.png', '01829.png', '34972.png', '30618.png', '42087.png', '87345.png', '98176.png', '12957.png', '31294.png', '98627.png', '73168.png', '74083.png', '92851.png', '39612.png', '91842.png', '07632.png', '02315.png', '06175.png', '54310.png', '24501.png', '20375.png', '21746.png', '23954.png', '68752.png', '12603.png', '93164.png', '90673.png', '51679.png', '52304.png', '03429.png', '97503.png', '05643.png', '30481.png', '26370.png', '19875.png', '36954.png', '02653.png', '12093.png', '06415.png', '95078.png', '05264.png', '47385.png', '15907.png', '41832.png', '52617.png', '16259.png', '02918.png', '80942.png', '31764.png', '32841.png', '21986.png', '19367.png', '41372.png', '52431.png', '30652.png', '79368.png', '86249.png', '65809.png', '09478.png', '81365.png', '90386.png', '49351.png', '78591.png', '70541.png', '67580.png', '10983.png', '28601.png', '45672.png', '58127.png', '19845.png', '58690.png', '18593.png', '12935.png', '85492.png', '25017.png', '78592.png', '84910.png', '83740.png', '71596.png', '68231.png', '51360.png', '07293.png', '29164.png', '63192.png', '81423.png', '23498.png', '34056.png', '82541.png', '49213.png', '79014.png', '05198.png', '92870.png', '50649.png', '19502.png', '42860.png', '09154.png', '90761.png', '70624.png', '27056.png', '12607.png', '27918.png', '69405.png', '80972.png', '90587.png', '76045.png', '58924.png', '08645.png', '20386.png', '90145.png', '78132.png', '19047.png', '78509.png', '30489.png', '46921.png', '43052.png', '62417.png', '78964.png', '69251.png', '59130.png', '70984.png', '93542.png', '84523.png', '39748.png', '01469.png', '18034.png', '74598.png', '84927.png', '05436.png', '45739.png', '35182.png', '37051.png', '57268.png', '32849.png', '50961.png', '72469.png', '70136.png', '86452.png', '43725.png', '50748.png', '50679.png', '56374.png', '05134.png', '79428.png', '65178.png', '32896.png', '41706.png', '13852.png', '43180.png', '18497.png', '36498.png', '59124.png', '48257.png', '61940.png', '10479.png', '35716.png', '41068.png', '06315.png', '05789.png', '76243.png', '13402.png', '58462.png', '90175.png', '54781.png', '37621.png', '40653.png', '46895.png', '51348.png', '46735.png', '30256.png', '20943.png', '82043.png', '76890.png', '68120.png', '36204.png', '14965.png', '94031.png', '71354.png', '70981.png', '20968.png', '74390.png', '23795.png', '38196.png', '67201.png', '12504.png', '15049.png', '09126.png', '36054.png', '46130.png', '48079.png', '56713.png', '35628.png', '16857.png', '80279.png', '79562.png', '16783.png', '41903.png', '17289.png', '09624.png', '68742.png', '48517.png', '41203.png', '93102.png', '18325.png', '95831.png', '51049.png', '80954.png', '52183.png', '52164.png', '01276.png', '19726.png', '41603.png', '18529.png', '50486.png', '83957.png', '14953.png', '25067.png', '35789.png', '34875.png', '60513.png', '95048.png', '51397.png', '07924.png', '87461.png', '97213.png', '09184.png', '17624.png', '38410.png', '69128.png', '29835.png', '71624.png', '07539.png', '48925.png', '51309.png', '94021.png', '96342.png', '57821.png', '93572.png', '73604.png', '89543.png', '42759.png', '52783.png', '52670.png', '64902.png', '20654.png', '70826.png', '12983.png', '75123.png', '45108.png', '40561.png', '24095.png', '78693.png', '24769.png', '92168.png', '74839.png', '04132.png', '48173.png', '82947.png', '35482.png', '72354.png', '35216.png', '78139.png', '71954.png', '56928.png', '40987.png', '97026.png', '68472.png', '75036.png', '84179.png', '14783.png', '35860.png', '02876.png', '80764.png', '72146.png', '21059.png', '49583.png', '21706.png', '50278.png', '25467.png', '96435.png', '09756.png', '41502.png', '10385.png', '10329.png', '21650.png', '30251.png', '62305.png', '31280.png', '37096.png', '47308.png', '48291.png', '06319.png', '56910.png', '98517.png', '50246.png', '25780.png', '42078.png', '89621.png', '27156.png', '63910.png', '40529.png', '50732.png', '39540.png', '24607.png', '46193.png', '80926.png', '59142.png', '28436.png', '87219.png', '18594.png', '94625.png', '87946.png', '91083.png', '58136.png', '83429.png', '02943.png', '51726.png', '14087.png', '87309.png', '76429.png', '82719.png', '48175.png', '70285.png', '84370.png', '25340.png', '04938.png', '27836.png', '79652.png', '36175.png', '82943.png', '74630.png', '42897.png', '81764.png', '45370.png', '67014.png', '51086.png', '73984.png', '35087.png', '27895.png', '16039.png', '49863.png', '50167.png', '16048.png', '41962.png', '85093.png', '31209.png', '37902.png', '20795.png', '47029.png', '08163.png', '28479.png', '39576.png', '38654.png', '05127.png', '59602.png', '42861.png', '93168.png', '89726.png', '51269.png', '70492.png', '53096.png', '49328.png', '67241.png', '49685.png', '85902.png', '08439.png', '78095.png', '32540.png', '09648.png', '95267.png', '93506.png', '21589.png', '13976.png', '58023.png', '01235.png', '51293.png', '52863.png', '20371.png', '96514.png', '37945.png', '06795.png', '87403.png', '02631.png', '64593.png', '36821.png', '31487.png', '97250.png', '87392.png', '21780.png', '03861.png', '50163.png', '14067.png', '10579.png', '12807.png', '63850.png', '60374.png', '79605.png', '16049.png', '28561.png', '08276.png', '71509.png', '27153.png', '87914.png', '78260.png', '86250.png', '65283.png', '49271.png', '69250.png', '51864.png', '41852.png', '56187.png', '90286.png', '70841.png', '57923.png', '39624.png', '87634.png', '56721.png', '07481.png', '51249.png', '21048.png', '83571.png', '09268.png', '74158.png', '05784.png', '59708.png', '50834.png', '07269.png', '97845.png', '45219.png', '67058.png', '47096.png', '09642.png', '45603.png', '53901.png', '94501.png', '62934.png', '37129.png', '63087.png', '52487.png', '47203.png', '78406.png', '57619.png', '76152.png', '52386.png', '42806.png', '90413.png', '56921.png', '32168.png', '74563.png', '31024.png', '19026.png', '09374.png', '32947.png', '56987.png', '82765.png', '08375.png', '49682.png', '23415.png', '46753.png', '38029.png', '12956.png', '78923.png', '96524.png', '47591.png', '45023.png', '62851.png', '43217.png', '69035.png', '18432.png', '21348.png', '04791.png', '67980.png', '71358.png', '14650.png', '34207.png', '76142.png', '15936.png', '97403.png', '58947.png', '53274.png', '94078.png', '18507.png', '50492.png', '52706.png', '10759.png', '70429.png', '38956.png', '64029.png', '01256.png', '56907.png', '47530.png', '54018.png', '49671.png', '89465.png', '30465.png', '21598.png', '13548.png', '30682.png', '37642.png', '70169.png', '61825.png', '16720.png', '87619.png', '35781.png', '25438.png', '35674.png', '14260.png', '54016.png', '86597.png', '84709.png', '14296.png', '01487.png', '92407.png', '58490.png', '49075.png', '07389.png', '20718.png', '75839.png', '03718.png', '36571.png', '15420.png', '28546.png', '25197.png', '06482.png', '82413.png', '62854.png', '79352.png', '05847.png', '03257.png', '34751.png', '96307.png', '52108.png', '57608.png', '74953.png', '78315.png', '31085.png', '97258.png', '59321.png', '12063.png', '59248.png', '84592.png', '61834.png', '30456.png', '89507.png', '02674.png', '36179.png', '14072.png', '43920.png', '27913.png', '07268.png', '18790.png', '98412.png', '72145.png', '86947.png', '08372.png', '79850.png', '16389.png', '75941.png', '26543.png', '28391.png', '17459.png', '05749.png', '74956.png', '81457.png', '39408.png', '04923.png', '28657.png', '35814.png', '26087.png', '28756.png', '59832.png', '07912.png', '17905.png', '96857.png', '04768.png', '45687.png', '86730.png', '83602.png', '30692.png', '83271.png', '49802.png', '10478.png', '39056.png', '51462.png', '60398.png', '86391.png', '40239.png', '57198.png', '41908.png', '90534.png', '35764.png', '79125.png', '38641.png', '24069.png', '27591.png', '17425.png', '38046.png', '49126.png', '04217.png', '57249.png', '34075.png', '01694.png', '67180.png', '73159.png', '82179.png', '81079.png', '12953.png', '70529.png', '87621.png', '30872.png', '26598.png', '36928.png', '78921.png', '62510.png', '91430.png', '17052.png', '48306.png', '29841.png', '16824.png', '58642.png', '85023.png', '89741.png', '31092.png', '26340.png', '07194.png', '56123.png', '49285.png', '63028.png', '98314.png', '30185.png', '10689.png', '08563.png', '36570.png', '71530.png', '46925.png', '58679.png', '70123.png', '43520.png', '14657.png', '60541.png', '54690.png', '75241.png', '78623.png', '67190.png', '79658.png', '68951.png', '72194.png', '64215.png', '19420.png', '04915.png', '87604.png', '71450.png', '59601.png', '49280.png', '60913.png', '23519.png', '79234.png', '42178.png', '84692.png', '73690.png', '83206.png', '72361.png', '76539.png', '10639.png', '93428.png', '09387.png', '08196.png', '16734.png', '70592.png', '05329.png', '58471.png', '64958.png', '81532.png', '38761.png', '79068.png', '75624.png', '51602.png', '34107.png', '01497.png', '45216.png', '94067.png', '06237.png', '67492.png', '65189.png', '54376.png', '82139.png', '07452.png', '41678.png', '29506.png', '07413.png', '61589.png', '32405.png', '78492.png', '67548.png', '41023.png', '16075.png', '83914.png', '78650.png', '92846.png', '61743.png', '75648.png', '60215.png', '40756.png', '64753.png', '02854.png', '52036.png', '87412.png', '42987.png', '38714.png', '54083.png', '61932.png', '20187.png', '73498.png', '71593.png', '10625.png', '15290.png', '15083.png', '14397.png', '57984.png', '08695.png', '39051.png', '58602.png', '71503.png', '43265.png', '59470.png', '73219.png', '46357.png', '09527.png', '68259.png', '17354.png', '19637.png', '35287.png', '80971.png', '50746.png', '08693.png', '56843.png', '01653.png', '97402.png', '96270.png', '21704.png', '81203.png', '96104.png', '30168.png', '73105.png', '86175.png', '26940.png', '24806.png', '23615.png', '18469.png', '01264.png', '97601.png', '43792.png', '10947.png', '34710.png', '84305.png', '79036.png', '62018.png', '86142.png', '21394.png', '94106.png', '39170.png', '78541.png', '59462.png', '68245.png', '85670.png', '23467.png', '16845.png', '18524.png', '48153.png', '10528.png', '75960.png', '02439.png', '32081.png', '76458.png', '90625.png', '72956.png', '08531.png', '21769.png', '75613.png', '54201.png', '78293.png', '07125.png', '72946.png', '19824.png', '31287.png', '86031.png', '23657.png', '82367.png', '16903.png', '27613.png', '05689.png', '91724.png', '86543.png', '24876.png', '98657.png', '60789.png', '93081.png', '08462.png', '47605.png', '19634.png', '37298.png', '14892.png', '38469.png', '52918.png', '71682.png', '95278.png', '37186.png', '57962.png', '09814.png', '90654.png', '71539.png', '34785.png', '96701.png', '76239.png', '58914.png', '36982.png', '75193.png', '09518.png', '74206.png', '38157.png', '20438.png', '69012.png', '62391.png', '24108.png', '45207.png', '36497.png', '98316.png', '47608.png', '86104.png', '03254.png', '73091.png', '61840.png', '46175.png', '08941.png', '87165.png', '53261.png', '42638.png', '12490.png', '65248.png', '83549.png', '14852.png', '41298.png', '61204.png', '47506.png', '93246.png', '63042.png', '35419.png', '91374.png', '83517.png', '10357.png', '79018.png', '27503.png', '36850.png', '48516.png', '09875.png', '76819.png', '76583.png', '73104.png', '08162.png', '13902.png', '79104.png', '89356.png', '02581.png', '06897.png', '90846.png', '81254.png', '47250.png', '37024.png', '98726.png', '67298.png', '52687.png', '96238.png', '96513.png', '15043.png', '35794.png', '87059.png', '94732.png', '63814.png', '64287.png', '76435.png', '02185.png', '07834.png', '78325.png', '70842.png', '03472.png', '32867.png', '34871.png', '78034.png', '29438.png', '74192.png', '65043.png', '63957.png', '07218.png', '61082.png', '30567.png', '17290.png', '67132.png', '56401.png', '57084.png', '79846.png', '94638.png', '67051.png', '20867.png', '29470.png', '47359.png', '73819.png', '57180.png', '90827.png', '38961.png', '46538.png', '19547.png', '84502.png', '71492.png', '42105.png', '38419.png', '26057.png', '91674.png', '41092.png', '16892.png', '50124.png', '37649.png', '34567.png', '69450.png', '82960.png', '76038.png', '94068.png', '86750.png', '84297.png', '87054.png', '31278.png', '10693.png', '36748.png', '13596.png', '63741.png', '39852.png', '29735.png', '91476.png', '69305.png', '65073.png', '15603.png', '90318.png', '72536.png', '31924.png', '89602.png', '19537.png', '41057.png', '67029.png'])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 56
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Osi8DbHaf3A8"
      },
      "source": [
        "Xtr_final=[]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-JJUYciUfed_"
      },
      "source": [
        "for i in d.keys():\n",
        "  for j in dd:\n",
        "    if(j[1][-9:] == i):\n",
        "      f=[]\n",
        "      f.append(d[i]+j[3])\n",
        "      f.append(j[2])\n",
        "      Xtr_final.append(f)\n",
        "      break"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ATMgtcihgNLs"
      },
      "source": [
        "Xtr_final"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "K4qJ_kx8iHiz"
      },
      "source": [
        "for i in di.keys():\n",
        "  for j in dd:\n",
        "    if(j[1][-9:] == i):\n",
        "      f=[]\n",
        "      f.append(di[i]+j[3])\n",
        "      f.append(j[2])\n",
        "      Xtr_final.append(f)\n",
        "      break\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tjW3UpI274Y8",
        "outputId": "6d4c66ce-c22c-46b9-b50e-6526b4575757"
      },
      "source": [
        "len(Xtr_final)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "5995"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Gx6SxfQJ__jE"
      },
      "source": [
        "Xtr_final2"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lqxQfe5i74zc"
      },
      "source": [
        "Xtr_final2=[]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cNjFLg6H74um"
      },
      "source": [
        "for i in dd:\n",
        "  flag=[]\n",
        "  flag.append(i[3])\n",
        "  flag.append(i[2])\n",
        "  Xtr_final2.append(flag)\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "u7aOL_iI_KTX"
      },
      "source": [
        "Xtr_final2 = np.array(Xtr_final2)\n",
        "Xtr_final2 = np.concatenate((Xtr_final2[:4000, :], Xtr_final2[6000:8000,:]),0)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "88nD8_2x6_cj",
        "outputId": "79256b22-4f0a-4192-8507-102966dd3ab2"
      },
      "source": [
        "len(Xtr_final2)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "6000"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 86
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rjHb0Pai9iry"
      },
      "source": [
        "# Xtr_final2=np.array(Xtr_final2)\n",
        "X_val2=Xtr_final2[5500:,:]\n",
        "Xtr_final2=Xtr_final2[:5500,:]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "I9O_xhun9i6_"
      },
      "source": [
        "X_train2 = Xtr_final2[:,0]\n",
        "x_train_tokenized2 = x_tokenizer.texts_to_sequences(X_train2)\n",
        "x_train2= sequence.pad_sequences(x_train_tokenized2, maxlen=max_text_length)\n",
        "y_tr2 = Xtr_final2[:,1]\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZVbV45Dj8Tjp"
      },
      "source": [
        "y_train2 = [int(numeric_string) for numeric_string in y_tr2]\n",
        "y_train2 = np.array(y_train2)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "EhQm8bHFFctg"
      },
      "source": [
        "model.load_weights(\"/content/drive/My Drive/Colab Notebooks/Project/abc.h5\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KQouWQ46GL9T",
        "outputId": "2d712920-7e50-4717-8335-cd510e69c502"
      },
      "source": [
        "print(len(x_train2), len(y_train2))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "5500 5500\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lpr3EkFx9jLx"
      },
      "source": [
        "model.compile(loss='binary_crossentropy', optimizer='Adam', metrics=['mse', 'accuracy'])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ngniHbSf8A6l",
        "outputId": "c60a5045-57f7-4555-c5fb-313ac3cb75c5"
      },
      "source": [
        "model_adam2 = keras.models.load_model('/content/drive/My Drive/Colab Notebooks/Project/abc2.json')\n",
        "model_adam2.load_weights(\"/content/drive/My Drive/Colab Notebooks/Project/abc.h5\")\n",
        "model_adam2.compile(loss='binary_crossentropy', optimizer='Adam', metrics=['mse', 'accuracy'])\n",
        "h_adam2 = model_adam2.fit(x_train2,y_train2, epochs=20)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/20\n",
            "172/172 [==============================] - 5s 28ms/step - loss: 0.6259 - mse: 0.2153 - accuracy: 0.6744\n",
            "Epoch 2/20\n",
            "172/172 [==============================] - 5s 29ms/step - loss: 0.5741 - mse: 0.1948 - accuracy: 0.7087\n",
            "Epoch 3/20\n",
            "172/172 [==============================] - 5s 28ms/step - loss: 0.5322 - mse: 0.1781 - accuracy: 0.7384\n",
            "Epoch 4/20\n",
            "172/172 [==============================] - 5s 29ms/step - loss: 0.4883 - mse: 0.1619 - accuracy: 0.7578\n",
            "Epoch 5/20\n",
            "172/172 [==============================] - 5s 28ms/step - loss: 0.4257 - mse: 0.1393 - accuracy: 0.7889\n",
            "Epoch 6/20\n",
            "172/172 [==============================] - 5s 28ms/step - loss: 0.3804 - mse: 0.1231 - accuracy: 0.8193\n",
            "Epoch 7/20\n",
            "172/172 [==============================] - 5s 28ms/step - loss: 0.3397 - mse: 0.1098 - accuracy: 0.8395\n",
            "Epoch 8/20\n",
            "172/172 [==============================] - 5s 28ms/step - loss: 0.3181 - mse: 0.1028 - accuracy: 0.8464\n",
            "Epoch 9/20\n",
            "172/172 [==============================] - 5s 28ms/step - loss: 0.2866 - mse: 0.0934 - accuracy: 0.8576\n",
            "Epoch 10/20\n",
            "172/172 [==============================] - 5s 29ms/step - loss: 0.2681 - mse: 0.0877 - accuracy: 0.8660\n",
            "Epoch 11/20\n",
            "172/172 [==============================] - 5s 28ms/step - loss: 0.2518 - mse: 0.0823 - accuracy: 0.8720\n",
            "Epoch 12/20\n",
            "172/172 [==============================] - 5s 28ms/step - loss: 0.2376 - mse: 0.0788 - accuracy: 0.8751\n",
            "Epoch 13/20\n",
            "172/172 [==============================] - 5s 29ms/step - loss: 0.2315 - mse: 0.0770 - accuracy: 0.8725\n",
            "Epoch 14/20\n",
            "172/172 [==============================] - 5s 28ms/step - loss: 0.2203 - mse: 0.0723 - accuracy: 0.8820\n",
            "Epoch 15/20\n",
            "172/172 [==============================] - 5s 28ms/step - loss: 0.2096 - mse: 0.0699 - accuracy: 0.8791\n",
            "Epoch 16/20\n",
            "172/172 [==============================] - 5s 28ms/step - loss: 0.2076 - mse: 0.0695 - accuracy: 0.8780\n",
            "Epoch 17/20\n",
            "172/172 [==============================] - 5s 28ms/step - loss: 0.1990 - mse: 0.0657 - accuracy: 0.8916\n",
            "Epoch 18/20\n",
            "172/172 [==============================] - 5s 29ms/step - loss: 0.1975 - mse: 0.0668 - accuracy: 0.8862\n",
            "Epoch 19/20\n",
            "172/172 [==============================] - 5s 30ms/step - loss: 0.1919 - mse: 0.0646 - accuracy: 0.8889\n",
            "Epoch 20/20\n",
            "172/172 [==============================] - 5s 29ms/step - loss: 0.1860 - mse: 0.0628 - accuracy: 0.8895\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8AHiy_fRFlCz",
        "outputId": "7d38b849-4e15-4484-a011-329063529992"
      },
      "source": [
        "model_adamax2 = keras.models.load_model('/content/drive/My Drive/Colab Notebooks/Project/abc2.json')\n",
        "model_adamax2.load_weights(\"/content/drive/My Drive/Colab Notebooks/Project/abc.h5\")\n",
        "model_adamax2.compile(loss='binary_crossentropy', optimizer='Adamax', metrics=['mse', 'accuracy'])\n",
        "h_adamax2 = model_adamax2.fit(x_train2,y_train2, epochs=20)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/20\n",
            "172/172 [==============================] - 3s 16ms/step - loss: 0.6414 - mse: 0.2215 - accuracy: 0.6569\n",
            "Epoch 2/20\n",
            "172/172 [==============================] - 3s 15ms/step - loss: 0.6142 - mse: 0.2127 - accuracy: 0.6631\n",
            "Epoch 3/20\n",
            "172/172 [==============================] - 3s 15ms/step - loss: 0.6006 - mse: 0.2066 - accuracy: 0.6767\n",
            "Epoch 4/20\n",
            "172/172 [==============================] - 3s 15ms/step - loss: 0.5875 - mse: 0.2006 - accuracy: 0.6985\n",
            "Epoch 5/20\n",
            "172/172 [==============================] - 3s 15ms/step - loss: 0.5790 - mse: 0.1969 - accuracy: 0.7000\n",
            "Epoch 6/20\n",
            "172/172 [==============================] - 3s 15ms/step - loss: 0.5690 - mse: 0.1929 - accuracy: 0.7113\n",
            "Epoch 7/20\n",
            "172/172 [==============================] - 3s 15ms/step - loss: 0.5580 - mse: 0.1882 - accuracy: 0.7164\n",
            "Epoch 8/20\n",
            "172/172 [==============================] - 3s 15ms/step - loss: 0.5495 - mse: 0.1848 - accuracy: 0.7229\n",
            "Epoch 9/20\n",
            "172/172 [==============================] - 3s 15ms/step - loss: 0.5391 - mse: 0.1807 - accuracy: 0.7380\n",
            "Epoch 10/20\n",
            "172/172 [==============================] - 3s 15ms/step - loss: 0.5245 - mse: 0.1751 - accuracy: 0.7385\n",
            "Epoch 11/20\n",
            "172/172 [==============================] - 3s 15ms/step - loss: 0.5165 - mse: 0.1721 - accuracy: 0.7485\n",
            "Epoch 12/20\n",
            "172/172 [==============================] - 3s 15ms/step - loss: 0.5027 - mse: 0.1669 - accuracy: 0.7516\n",
            "Epoch 13/20\n",
            "172/172 [==============================] - 3s 15ms/step - loss: 0.4910 - mse: 0.1626 - accuracy: 0.7649\n",
            "Epoch 14/20\n",
            "172/172 [==============================] - 3s 15ms/step - loss: 0.4744 - mse: 0.1564 - accuracy: 0.7665\n",
            "Epoch 15/20\n",
            "172/172 [==============================] - 3s 15ms/step - loss: 0.4631 - mse: 0.1519 - accuracy: 0.7791\n",
            "Epoch 16/20\n",
            "172/172 [==============================] - 3s 15ms/step - loss: 0.4517 - mse: 0.1483 - accuracy: 0.7811\n",
            "Epoch 17/20\n",
            "172/172 [==============================] - 3s 15ms/step - loss: 0.4400 - mse: 0.1437 - accuracy: 0.7905\n",
            "Epoch 18/20\n",
            "172/172 [==============================] - 3s 15ms/step - loss: 0.4279 - mse: 0.1398 - accuracy: 0.7958\n",
            "Epoch 19/20\n",
            "172/172 [==============================] - 3s 15ms/step - loss: 0.4147 - mse: 0.1350 - accuracy: 0.8024\n",
            "Epoch 20/20\n",
            "172/172 [==============================] - 3s 15ms/step - loss: 0.4049 - mse: 0.1316 - accuracy: 0.8042\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DhvnNAaZFlsu",
        "outputId": "30d3d707-25af-4649-c833-c19eb31bee30"
      },
      "source": [
        "model_RMS2 = keras.models.load_model('/content/drive/My Drive/Colab Notebooks/Project/abc2.json')\n",
        "model_RMS2.load_weights(\"/content/drive/My Drive/Colab Notebooks/Project/abc.h5\")\n",
        "model_RMS2.compile(loss='binary_crossentropy', optimizer='RMSprop', metrics=['mse', 'accuracy'])\n",
        "h_RMS2 = model_RMS2.fit(x_train2,y_train2, epochs=20)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/20\n",
            "172/172 [==============================] - 3s 17ms/step - loss: 0.6259 - mse: 0.2152 - accuracy: 0.6740\n",
            "Epoch 2/20\n",
            "172/172 [==============================] - 3s 16ms/step - loss: 0.5768 - mse: 0.1956 - accuracy: 0.7111\n",
            "Epoch 3/20\n",
            "172/172 [==============================] - 3s 17ms/step - loss: 0.5510 - mse: 0.1844 - accuracy: 0.7313\n",
            "Epoch 4/20\n",
            "172/172 [==============================] - 3s 17ms/step - loss: 0.5197 - mse: 0.1720 - accuracy: 0.7475\n",
            "Epoch 5/20\n",
            "172/172 [==============================] - 3s 16ms/step - loss: 0.4889 - mse: 0.1610 - accuracy: 0.7647\n",
            "Epoch 6/20\n",
            "172/172 [==============================] - 3s 17ms/step - loss: 0.4622 - mse: 0.1509 - accuracy: 0.7778\n",
            "Epoch 7/20\n",
            "172/172 [==============================] - 3s 17ms/step - loss: 0.4287 - mse: 0.1391 - accuracy: 0.7960\n",
            "Epoch 8/20\n",
            "172/172 [==============================] - 3s 17ms/step - loss: 0.4116 - mse: 0.1335 - accuracy: 0.8076\n",
            "Epoch 9/20\n",
            "172/172 [==============================] - 3s 17ms/step - loss: 0.3873 - mse: 0.1242 - accuracy: 0.8196\n",
            "Epoch 10/20\n",
            "172/172 [==============================] - 3s 17ms/step - loss: 0.3680 - mse: 0.1184 - accuracy: 0.8231\n",
            "Epoch 11/20\n",
            "172/172 [==============================] - 3s 17ms/step - loss: 0.3463 - mse: 0.1104 - accuracy: 0.8355\n",
            "Epoch 12/20\n",
            "172/172 [==============================] - 3s 17ms/step - loss: 0.3415 - mse: 0.1084 - accuracy: 0.8407\n",
            "Epoch 13/20\n",
            "172/172 [==============================] - 3s 17ms/step - loss: 0.3254 - mse: 0.1026 - accuracy: 0.8456\n",
            "Epoch 14/20\n",
            "172/172 [==============================] - 3s 17ms/step - loss: 0.3161 - mse: 0.1015 - accuracy: 0.8467\n",
            "Epoch 15/20\n",
            "172/172 [==============================] - 3s 16ms/step - loss: 0.3113 - mse: 0.0975 - accuracy: 0.8544\n",
            "Epoch 16/20\n",
            "172/172 [==============================] - 3s 17ms/step - loss: 0.2961 - mse: 0.0943 - accuracy: 0.8615\n",
            "Epoch 17/20\n",
            "172/172 [==============================] - 3s 16ms/step - loss: 0.2902 - mse: 0.0918 - accuracy: 0.8615\n",
            "Epoch 18/20\n",
            "172/172 [==============================] - 3s 16ms/step - loss: 0.2845 - mse: 0.0903 - accuracy: 0.8589\n",
            "Epoch 19/20\n",
            "172/172 [==============================] - 3s 16ms/step - loss: 0.2830 - mse: 0.0890 - accuracy: 0.8685\n",
            "Epoch 20/20\n",
            "172/172 [==============================] - 3s 17ms/step - loss: 0.2723 - mse: 0.0862 - accuracy: 0.8700\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 266
        },
        "id": "gbOVSmfFFlWP",
        "outputId": "f5f1509c-8eec-468d-fa1a-f8ae196be4b5"
      },
      "source": [
        "plt.plot(h_adam2.history[\"accuracy\"], label=\"adam\")\n",
        "plt.plot(h_adamax2.history[\"accuracy\"], label=\"adamax\")\n",
        "plt.plot(h_RMS2.history[\"accuracy\"], label=\"RMS\")\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "n9SsL_-j8BXl"
      },
      "source": [
        "X_val_f2 = X_val2[:,0]\n",
        "y_val_f2 = X_val2[:,1]\n",
        "y_val_f2 = [int(numeric_string) for numeric_string in y_val_f2]\n",
        "y_val_f2 = np.array(y_val_f2)\n",
        "x_val_tokenized2 = x_tokenizer.texts_to_sequences(X_val_f2)\n",
        "x_val2 = sequence.pad_sequences(x_val_tokenized2, maxlen=max_text_length)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nndhWvh98BnP"
      },
      "source": [
        "y_h_adam2 = model_adam2.predict(x_val2)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kJOeyQ_ORmyA",
        "outputId": "e221f336-197c-4ba6-ce0f-1432af19b772"
      },
      "source": [
        "y2=[]\n",
        "for i in y_h_adam2:\n",
        "  if (i>=0.5):\n",
        "    y2.append(1)\n",
        "  else:\n",
        "    y2.append(0)\n",
        "acc = 0\n",
        "for i in range(len(y2)):\n",
        "  if(y2[i]==y_val_f2[i]):\n",
        "    acc+=1\n",
        "print(acc/len(y2))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "0.602\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "Ycbc_IM_UCka",
        "outputId": "5109e5eb-3c08-4571-c780-c01b64708f0e"
      },
      "source": [
        "from sklearn.metrics import confusion_matrix\n",
        "cf_matrix = confusion_matrix(y_val_f2, y2)\n",
        "import seaborn as sns\n",
        "sns.heatmap(cf_matrix, annot= True)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fb9a148f048>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 177
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "brWzW5P-8BLC"
      },
      "source": [
        "y_h_adamax2 = model_adamax2.predict(x_val2)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ofRTCN5IR0JX",
        "outputId": "9afaec51-082a-46a1-da26-7bdb748a6fa4"
      },
      "source": [
        "y2=[]\n",
        "for i in y_h_adamax2:\n",
        "  if (i>=0.5):\n",
        "    y2.append(1)\n",
        "  else:\n",
        "    y2.append(0)\n",
        "acc = 0\n",
        "for i in range(len(y2)):\n",
        "  if(y2[i]==y_val_f2[i]):\n",
        "    acc+=1\n",
        "print(acc/len(y2))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "0.622\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 286
        },
        "id": "iJhVWyktUEUV",
        "outputId": "10d69ad0-eeb5-4d5a-9fef-45ec74259929"
      },
      "source": [
        "from sklearn.metrics import confusion_matrix\n",
        "cf_matrix = confusion_matrix(y_val_f2, y2)\n",
        "import seaborn as sns\n",
        "sns.heatmap(cf_matrix, annot= True)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fb9a140de80>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 179
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qvqUfAamRWHQ"
      },
      "source": [
        "y_h_RMS2 = model_RMS2.predict(x_val2)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wELqXMs-R263",
        "outputId": "399819c9-c96f-41d6-b56b-637e7820e838"
      },
      "source": [
        "y2=[]\n",
        "for i in y_h_RMS2:\n",
        "  if (i>=0.5):\n",
        "    y2.append(1)\n",
        "  else:\n",
        "    y2.append(0)\n",
        "acc = 0\n",
        "for i in range(len(y2)):\n",
        "  if(y2[i]==y_val_f2[i]):\n",
        "    acc+=1\n",
        "print(acc/len(y2))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "0.614\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "sQQOii8UUFo5",
        "outputId": "b81c6d76-3309-41ff-d9ad-6891db6d2594"
      },
      "source": [
        "from sklearn.metrics import confusion_matrix\n",
        "cf_matrix = confusion_matrix(y_val_f2, y2)\n",
        "import seaborn as sns\n",
        "sns.heatmap(cf_matrix, annot= True)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fb9a137f048>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 181
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xqTezCk99DvN"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kMmYrSG874nT"
      },
      "source": [
        "Xtr_final2"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hIck1NBvszzp",
        "outputId": "3eb2d159-d023-497d-e356-846076c2da95"
      },
      "source": [
        "len(Xtr_final)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "5995"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 126
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_y9UnnYaiHr1"
      },
      "source": [
        "import numpy as np"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tFjLDJZ3k4cP"
      },
      "source": [
        "Xtr_final=np.array(Xtr_final)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oJXxEghrmTQ_",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1527e04b-e709-43bd-ecec-ccfbc8d7db1c"
      },
      "source": [
        "Xtr_final.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(5995, 2)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 129
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RHgJsALtiRbh"
      },
      "source": [
        "X_val=Xtr_final[5495:,:]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YIJDNo5hd3kQ"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xoZZNuePifx-"
      },
      "source": [
        "Xtr_final=Xtr_final[:5496,:]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3aaBxlrJmVWe"
      },
      "source": [
        "X_train = Xtr_final[:,0]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FDVT5IMgmtSt"
      },
      "source": [
        "x_train_tokenized = x_tokenizer.texts_to_sequences(X_train)\n",
        "x_train = sequence.pad_sequences(x_train_tokenized, maxlen=max_text_length)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3D0QaqoZmu4s"
      },
      "source": [
        "y_tr = Xtr_final[:,1]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zXa5bIG0n5tN"
      },
      "source": [
        "y_train = [int(numeric_string) for numeric_string in y_tr]\n",
        "y_train = np.array(y_train)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7ElfOcpTo-Ew"
      },
      "source": [
        "model.load_weights(\"/content/drive/My Drive/Colab Notebooks/Project/abc.h5\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0T7ZS5ZcsCsz"
      },
      "source": [
        "model.compile(loss='binary_crossentropy', optimizer='Adamax', metrics=['mse', 'accuracy'])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2N1rk4wun6vY",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6f409a35-5db8-4b03-9535-347104010e9a"
      },
      "source": [
        "model_adam = keras.models.load_model('/content/drive/My Drive/Colab Notebooks/Project/abc2.json')\n",
        "model_adam.load_weights(\"/content/drive/My Drive/Colab Notebooks/Project/abc.h5\")\n",
        "model_adam.compile(loss='binary_crossentropy', optimizer='Adam', metrics=['mse', 'accuracy'])\n",
        "h_adam = model_adam.fit(x_train,y_train, epochs=20)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/20\n",
            "172/172 [==============================] - 5s 30ms/step - loss: 0.6285 - mse: 0.2178 - accuracy: 0.6694\n",
            "Epoch 2/20\n",
            "172/172 [==============================] - 5s 30ms/step - loss: 0.5767 - mse: 0.1958 - accuracy: 0.7036\n",
            "Epoch 3/20\n",
            "172/172 [==============================] - 5s 30ms/step - loss: 0.5372 - mse: 0.1799 - accuracy: 0.7322\n",
            "Epoch 4/20\n",
            "172/172 [==============================] - 5s 30ms/step - loss: 0.4774 - mse: 0.1581 - accuracy: 0.7695\n",
            "Epoch 5/20\n",
            "172/172 [==============================] - 5s 30ms/step - loss: 0.4316 - mse: 0.1415 - accuracy: 0.7931\n",
            "Epoch 6/20\n",
            "172/172 [==============================] - 5s 30ms/step - loss: 0.3792 - mse: 0.1220 - accuracy: 0.8221\n",
            "Epoch 7/20\n",
            "172/172 [==============================] - 5s 30ms/step - loss: 0.3316 - mse: 0.1060 - accuracy: 0.8450\n",
            "Epoch 8/20\n",
            "172/172 [==============================] - 5s 30ms/step - loss: 0.2901 - mse: 0.0923 - accuracy: 0.8668\n",
            "Epoch 9/20\n",
            "172/172 [==============================] - 5s 30ms/step - loss: 0.2501 - mse: 0.0793 - accuracy: 0.8846\n",
            "Epoch 10/20\n",
            "172/172 [==============================] - 5s 30ms/step - loss: 0.2150 - mse: 0.0664 - accuracy: 0.9072\n",
            "Epoch 11/20\n",
            "172/172 [==============================] - 5s 30ms/step - loss: 0.1989 - mse: 0.0605 - accuracy: 0.9167\n",
            "Epoch 12/20\n",
            "172/172 [==============================] - 5s 30ms/step - loss: 0.1779 - mse: 0.0536 - accuracy: 0.9249\n",
            "Epoch 13/20\n",
            "172/172 [==============================] - 5s 30ms/step - loss: 0.1487 - mse: 0.0443 - accuracy: 0.9396\n",
            "Epoch 14/20\n",
            "172/172 [==============================] - 5s 30ms/step - loss: 0.1410 - mse: 0.0422 - accuracy: 0.9409\n",
            "Epoch 15/20\n",
            "172/172 [==============================] - 5s 30ms/step - loss: 0.1251 - mse: 0.0365 - accuracy: 0.9501\n",
            "Epoch 16/20\n",
            "172/172 [==============================] - 5s 30ms/step - loss: 0.1180 - mse: 0.0350 - accuracy: 0.9516\n",
            "Epoch 17/20\n",
            "172/172 [==============================] - 5s 30ms/step - loss: 0.1028 - mse: 0.0303 - accuracy: 0.9603\n",
            "Epoch 18/20\n",
            "172/172 [==============================] - 5s 30ms/step - loss: 0.1000 - mse: 0.0290 - accuracy: 0.9594\n",
            "Epoch 19/20\n",
            "172/172 [==============================] - 5s 30ms/step - loss: 0.0902 - mse: 0.0254 - accuracy: 0.9667\n",
            "Epoch 20/20\n",
            "172/172 [==============================] - 5s 30ms/step - loss: 0.0751 - mse: 0.0221 - accuracy: 0.9689\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PTes9KuzJFkW",
        "outputId": "3bcc2adb-17ff-49c7-b74f-29ebe28bb7b8"
      },
      "source": [
        "model_adamax = keras.models.load_model('/content/drive/My Drive/Colab Notebooks/Project/abc2.json')\n",
        "model_adamax.load_weights(\"/content/drive/My Drive/Colab Notebooks/Project/abc.h5\")\n",
        "model_adamax.compile(loss='binary_crossentropy', optimizer='Adamax', metrics=['mse', 'accuracy'])\n",
        "h_adamax = model_adamax.fit(x_train,y_train, epochs=20)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/20\n",
            "172/172 [==============================] - 3s 17ms/step - loss: 0.6420 - mse: 0.2232 - accuracy: 0.6610\n",
            "Epoch 2/20\n",
            "172/172 [==============================] - 3s 16ms/step - loss: 0.6190 - mse: 0.2146 - accuracy: 0.6674\n",
            "Epoch 3/20\n",
            "172/172 [==============================] - 3s 16ms/step - loss: 0.6065 - mse: 0.2091 - accuracy: 0.6710\n",
            "Epoch 4/20\n",
            "172/172 [==============================] - 3s 16ms/step - loss: 0.5946 - mse: 0.2038 - accuracy: 0.6840\n",
            "Epoch 5/20\n",
            "172/172 [==============================] - 3s 16ms/step - loss: 0.5827 - mse: 0.1987 - accuracy: 0.6974\n",
            "Epoch 6/20\n",
            "172/172 [==============================] - 3s 16ms/step - loss: 0.5679 - mse: 0.1926 - accuracy: 0.7071\n",
            "Epoch 7/20\n",
            "172/172 [==============================] - 3s 16ms/step - loss: 0.5583 - mse: 0.1886 - accuracy: 0.7162\n",
            "Epoch 8/20\n",
            "172/172 [==============================] - 3s 16ms/step - loss: 0.5487 - mse: 0.1847 - accuracy: 0.7245\n",
            "Epoch 9/20\n",
            "172/172 [==============================] - 3s 16ms/step - loss: 0.5384 - mse: 0.1809 - accuracy: 0.7300\n",
            "Epoch 10/20\n",
            "172/172 [==============================] - 3s 17ms/step - loss: 0.5250 - mse: 0.1755 - accuracy: 0.7378\n",
            "Epoch 11/20\n",
            "172/172 [==============================] - 3s 16ms/step - loss: 0.5177 - mse: 0.1732 - accuracy: 0.7409\n",
            "Epoch 12/20\n",
            "172/172 [==============================] - 3s 16ms/step - loss: 0.5075 - mse: 0.1697 - accuracy: 0.7485\n",
            "Epoch 13/20\n",
            "172/172 [==============================] - 3s 16ms/step - loss: 0.4988 - mse: 0.1655 - accuracy: 0.7578\n",
            "Epoch 14/20\n",
            "172/172 [==============================] - 3s 16ms/step - loss: 0.4815 - mse: 0.1592 - accuracy: 0.7602\n",
            "Epoch 15/20\n",
            "172/172 [==============================] - 3s 16ms/step - loss: 0.4652 - mse: 0.1539 - accuracy: 0.7706\n",
            "Epoch 16/20\n",
            "172/172 [==============================] - 3s 16ms/step - loss: 0.4554 - mse: 0.1499 - accuracy: 0.7793\n",
            "Epoch 17/20\n",
            "172/172 [==============================] - 3s 17ms/step - loss: 0.4452 - mse: 0.1464 - accuracy: 0.7764\n",
            "Epoch 18/20\n",
            "172/172 [==============================] - 3s 16ms/step - loss: 0.4324 - mse: 0.1421 - accuracy: 0.7864\n",
            "Epoch 19/20\n",
            "172/172 [==============================] - 3s 16ms/step - loss: 0.4176 - mse: 0.1361 - accuracy: 0.8009\n",
            "Epoch 20/20\n",
            "172/172 [==============================] - 3s 16ms/step - loss: 0.4047 - mse: 0.1311 - accuracy: 0.8062\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IZ6CjpJpJGGz"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GrJNejlEJGiA",
        "outputId": "aaec0c72-8e9a-4712-8b33-b1194bc4dab6"
      },
      "source": [
        "model_RMS = keras.models.load_model('/content/drive/My Drive/Colab Notebooks/Project/abc2.json')\n",
        "model_RMS.load_weights(\"/content/drive/My Drive/Colab Notebooks/Project/abc.h5\")\n",
        "model_RMS.compile(loss='binary_crossentropy', optimizer='RMSprop', metrics=['mse', 'accuracy'])\n",
        "h_RMS = model_RMS.fit(x_train,y_train, epochs=20)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/20\n",
            "172/172 [==============================] - 3s 17ms/step - loss: 0.6226 - mse: 0.2152 - accuracy: 0.6729\n",
            "Epoch 2/20\n",
            "172/172 [==============================] - 3s 16ms/step - loss: 0.5778 - mse: 0.1958 - accuracy: 0.7076\n",
            "Epoch 3/20\n",
            "172/172 [==============================] - 3s 16ms/step - loss: 0.5533 - mse: 0.1852 - accuracy: 0.7260\n",
            "Epoch 4/20\n",
            "172/172 [==============================] - 3s 16ms/step - loss: 0.5211 - mse: 0.1729 - accuracy: 0.7485\n",
            "Epoch 5/20\n",
            "172/172 [==============================] - 3s 17ms/step - loss: 0.4980 - mse: 0.1652 - accuracy: 0.7571\n",
            "Epoch 6/20\n",
            "172/172 [==============================] - 3s 17ms/step - loss: 0.4708 - mse: 0.1549 - accuracy: 0.7755\n",
            "Epoch 7/20\n",
            "172/172 [==============================] - 3s 17ms/step - loss: 0.4453 - mse: 0.1445 - accuracy: 0.7900\n",
            "Epoch 8/20\n",
            "172/172 [==============================] - 3s 17ms/step - loss: 0.4155 - mse: 0.1335 - accuracy: 0.8057\n",
            "Epoch 9/20\n",
            "172/172 [==============================] - 3s 16ms/step - loss: 0.3918 - mse: 0.1254 - accuracy: 0.8221\n",
            "Epoch 10/20\n",
            "172/172 [==============================] - 3s 16ms/step - loss: 0.3656 - mse: 0.1170 - accuracy: 0.8337\n",
            "Epoch 11/20\n",
            "172/172 [==============================] - 3s 16ms/step - loss: 0.3427 - mse: 0.1074 - accuracy: 0.8466\n",
            "Epoch 12/20\n",
            "172/172 [==============================] - 3s 16ms/step - loss: 0.3141 - mse: 0.0988 - accuracy: 0.8570\n",
            "Epoch 13/20\n",
            "172/172 [==============================] - 3s 17ms/step - loss: 0.2929 - mse: 0.0918 - accuracy: 0.8679\n",
            "Epoch 14/20\n",
            "172/172 [==============================] - 3s 17ms/step - loss: 0.2809 - mse: 0.0861 - accuracy: 0.8806\n",
            "Epoch 15/20\n",
            "172/172 [==============================] - 3s 17ms/step - loss: 0.2627 - mse: 0.0807 - accuracy: 0.8866\n",
            "Epoch 16/20\n",
            "172/172 [==============================] - 3s 17ms/step - loss: 0.2497 - mse: 0.0768 - accuracy: 0.8917\n",
            "Epoch 17/20\n",
            "172/172 [==============================] - 3s 17ms/step - loss: 0.2321 - mse: 0.0701 - accuracy: 0.9021\n",
            "Epoch 18/20\n",
            "172/172 [==============================] - 3s 17ms/step - loss: 0.2205 - mse: 0.0669 - accuracy: 0.9076\n",
            "Epoch 19/20\n",
            "172/172 [==============================] - 3s 17ms/step - loss: 0.2119 - mse: 0.0633 - accuracy: 0.9130\n",
            "Epoch 20/20\n",
            "172/172 [==============================] - 3s 17ms/step - loss: 0.2079 - mse: 0.0607 - accuracy: 0.9189\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "D1p6BIbMJGaf",
        "outputId": "256544c7-ad0f-4435-b6bf-da4e27d72c21"
      },
      "source": [
        "plt.plot(h_adam.history[\"accuracy\"], label=\"adam\")\n",
        "plt.plot(h_adamax.history[\"accuracy\"], label=\"adamax\")\n",
        "plt.plot(h_RMS.history[\"accuracy\"], label=\"RMS\")\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "p8zi_cbYJF3v"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AEwynuHTJREk"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vWvlnjcJv7YT"
      },
      "source": [
        "X_val_f = X_val[:,0]\n",
        "y_val_f = X_val[:,1]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ynh5kGb-wGEk"
      },
      "source": [
        "y_val_f = [int(numeric_string) for numeric_string in y_val_f]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QCauNNPYwlFz"
      },
      "source": [
        "y_val_f = np.array(y_val_f)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "B-HRikOhi1QL"
      },
      "source": [
        "# X_val = X_val[:,0]\n",
        "x_val_tokenized = x_tokenizer.texts_to_sequences(X_val_f)\n",
        "x_val = sequence.pad_sequences(x_val_tokenized, maxlen=max_text_length)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HYFASMZJj6Ng"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PVibAY-KdyGq"
      },
      "source": [
        "y_h_adam = model_adam.predict(x_val)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hfSLl6pDSpZr",
        "outputId": "12ca7ab2-f180-4f14-ae7f-9aacfba5f815"
      },
      "source": [
        "y2=[]\n",
        "for i in y_h_adam:\n",
        "  if (i>=0.5):\n",
        "    y2.append(1)\n",
        "  else:\n",
        "    y2.append(0)\n",
        "acc = 0\n",
        "for i in range(len(y2)):\n",
        "  if(y2[i]==y_val_f[i]):\n",
        "    acc+=1\n",
        "print(acc/len(y2))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "0.59\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "pJfvWNh7Tz85",
        "outputId": "3766b72b-0d01-4e76-d3dc-053c78d608f0"
      },
      "source": [
        "from sklearn.metrics import confusion_matrix\n",
        "cf_matrix = confusion_matrix(y_val_f, y2)\n",
        "import seaborn as sns\n",
        "sns.heatmap(cf_matrix, annot= True)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fb9a0262ef0>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 183
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GZGDUzTmzOqC"
      },
      "source": [
        "y_h_adamax = model_adamax.predict(x_val)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CVfniTJShChT",
        "outputId": "d18c7ba7-df97-4389-a1e3-527ee531c574"
      },
      "source": [
        "y2=[]\n",
        "for i in y_h_adamax:\n",
        "  if (i>=0.5):\n",
        "    y2.append(1)\n",
        "  else:\n",
        "    y2.append(0)\n",
        "acc = 0\n",
        "for i in range(len(y2)):\n",
        "  if(y2[i]==y_val_f[i]):\n",
        "    acc+=1\n",
        "print(acc/len(y2))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "0.646\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "GygdFjJpT5kv",
        "outputId": "000a49cf-2986-4503-a7ab-ad85db6c2370"
      },
      "source": [
        "from sklearn.metrics import confusion_matrix\n",
        "cf_matrix = confusion_matrix(y_val_f, y2)\n",
        "import seaborn as sns\n",
        "sns.heatmap(cf_matrix, annot= True)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fb9a01dc748>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 185
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8sP5FyF4jAhE"
      },
      "source": [
        "y_h_RMS = model_RMS.predict(x_val)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6Y_7tFB6TMbM",
        "outputId": "957f653b-f3c0-4aec-fd7f-81905d238654"
      },
      "source": [
        "y2=[]\n",
        "for i in y_h_RMS:\n",
        "  if (i>=0.5):\n",
        "    y2.append(1)\n",
        "  else:\n",
        "    y2.append(0)\n",
        "acc = 0\n",
        "for i in range(len(y2)):\n",
        "  if(y2[i]==y_val_f[i]):\n",
        "    acc+=1\n",
        "print(acc/len(y2))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "0.62\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "be4qhdHClBYY",
        "outputId": "2ef5545c-da99-4a3f-d149-c48f92f7bac7"
      },
      "source": [
        "from sklearn.metrics import confusion_matrix\n",
        "cf_matrix = confusion_matrix(y_val_f, y2)\n",
        "import seaborn as sns\n",
        "sns.heatmap(cf_matrix, annot= True)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fb9a0168d30>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 187
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "M0Xxiu-XnmD0"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "L36gxdtnp-2M"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5cCcZsUWnnTJ"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Sr6yNEFtnnGW"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "53zsn3fwnm1o"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RUy7kKyhnmvX"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2gbaT5xFnmiQ"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qD13juBCnmU7"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZerBKjCDlAmn"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AW3YFe3sdMMm"
      },
      "source": [
        "y_true = np.array(y_true)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pa3rQ8mWVaym"
      },
      "source": [
        "import matplotlib.pyplot as plt\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DN_Ef0XUbXfL"
      },
      "source": [
        "th=list(np.arange(0,1,0.005))\n",
        "a1= y_h_RMS2\n",
        "g= y_val_f2"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bJJuFKTJeKuD"
      },
      "source": [
        "x=[]\n",
        "y=[]\n",
        "tpr1=[]\n",
        "fpr1=[]\n",
        "for i in th:\n",
        "    tp=0\n",
        "    fn=0\n",
        "    fp=0\n",
        "    tn=0\n",
        "    c=0\n",
        "#     print(i)\n",
        "    for j in a1:\n",
        "        if(j>i):\n",
        "            if(g[c]==1):\n",
        "                tp+=1\n",
        "            else:\n",
        "                fp+=1\n",
        "        else:\n",
        "            if(g[c]==1):\n",
        "                fn+=1\n",
        "            else:\n",
        "                tn+=1  \n",
        "        c+=1\n",
        "#     print(tp,fp,tn,fn)\n",
        "    tpr1.append(tp/(tp+fn))\n",
        "    fpr1.append(fp/(fp+tn))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nRxXYvMkV7Br"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dGPm9Dgp0cih"
      },
      "source": [
        "tpr_adam=tpr1\n",
        "fpr_adam=fpr1"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6f4FOIgWWhYw"
      },
      "source": [
        "tpr_adamax=tpr1\n",
        "fpr_adamax=fpr1"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9d_j8-aq04s4"
      },
      "source": [
        "tpr_RMS=tpr1\n",
        "fpr_RMS=fpr1"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4CF4MTawWlLc"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rh7A1Xe6WptT"
      },
      "source": [
        "tpr_adam_2=tpr1\n",
        "fpr_adam_2=fpr1"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Q19ZvbFO2Z2D"
      },
      "source": [
        "tpr_adamax_2=tpr1\n",
        "fpr_adamax_2=fpr1"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KmudOmPcEpMh"
      },
      "source": [
        "tpr_RMS_2=tpr1\n",
        "fpr_RMS_2=fpr1"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_IxLGg5jgIlp",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "outputId": "2be510ac-a393-4820-c08b-853e8e5ae237"
      },
      "source": [
        "plt.plot(fpr_adam,tpr_adam, label=\"adam\")\n",
        "plt.plot(fpr_adamax,tpr_adamax, label=\"adamax\")\n",
        "plt.plot(fpr_RMS,tpr_RMS, label=\"RMS\")\n",
        "plt.xlabel(\"FPR(Sensitivity)\")\n",
        "plt.ylabel(\"TPR(Specificity)\")\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "UTgx4xzuXfob",
        "outputId": "f953ec86-ce94-4fe2-b45f-b6632859e039"
      },
      "source": [
        "plt.plot(fpr_adam_2,tpr_adam_2, label=\"adam\")\n",
        "plt.plot(fpr_adamax_2,tpr_adamax_2, label=\"adamax\")\n",
        "plt.plot(fpr_RMS_2,tpr_RMS_2, label=\"RMS\")\n",
        "plt.xlabel(\"FPR(Sensitivity)\")\n",
        "plt.ylabel(\"TPR(Specificity)\")\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "TCE8chDHXh79",
        "outputId": "2d5cc932-4e2f-4d58-f01a-0c2015e20152"
      },
      "source": [
        "plt.plot(fpr_adam,tpr_adam, label=\"adam\")\n",
        "plt.plot(fpr_adam_2,tpr_adam_2, label=\"adam(text only)\")\n",
        "plt.xlabel(\"FPR(Sensitivity)\")\n",
        "plt.ylabel(\"TPR(Specificity)\")\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "XJONfGXzXi1u",
        "outputId": "bc06f892-ecf5-4588-ed8a-4028c6b185f8"
      },
      "source": [
        "plt.plot(fpr_adamax,tpr_adamax, label=\"adamax\")\n",
        "plt.plot(fpr_adamax_2,tpr_adamax_2 ,label=\"adamax(text only)\")\n",
        "plt.xlabel(\"FPR(Sensitivity)\")\n",
        "plt.ylabel(\"TPR(Specificity)\")\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "9gkPaE60XilH",
        "outputId": "78bb658e-8c22-428e-a42a-b82e0d6a83e8"
      },
      "source": [
        "plt.plot(fpr_RMS,tpr_RMS, label=\"RMS\")\n",
        "plt.plot(fpr_RMS_2,tpr_RMS_2, label=\"RMS(text only\")\n",
        "plt.xlabel(\"FPR(Sensitivity)\")\n",
        "plt.ylabel(\"TPR(Specificity)\")\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Y-1SqQ8oXieA"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pMVVZE6iXiWI"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lhOQYQcfXiOU"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NGX0h3sQgU8z",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "47402b03-d5c0-46f5-e911-b9d6b28bba8d"
      },
      "source": [
        "from sklearn.metrics import roc_auc_score\n",
        "roc_auc_score(y_true, y_score)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.6319072479490135"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 95
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ksxTnlzG1Qy8"
      },
      "source": [
        "fpr, tpr, thresholds = roc_curve(y_true, y_score)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dUI4wBQs1Q-3",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e64c7818-ddf1-4f74-936d-4674b0605963"
      },
      "source": [
        "y_true"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['0', '1', '0', '0', '0', '1', '0', '1', '1', '0', '1', '0', '1',\n",
              "       '0', '0', '0', '0', '1', '1', '0', '0', '0', '0', '1', '0', '0',\n",
              "       '0', '1', '0', '0', '1', '0', '0', '1', '1', '0', '0', '0', '0',\n",
              "       '0', '1', '0', '0', '0', '1', '1', '0', '1', '0', '1', '1', '1',\n",
              "       '0', '1', '0', '1', '0', '0', '1', '1', '1', '0', '1', '1', '1',\n",
              "       '0', '0', '0', '0', '1', '0', '0', '1', '0', '1', '0', '1', '1',\n",
              "       '0', '0', '0', '0', '0', '1', '0', '1', '1', '0', '0', '1', '1',\n",
              "       '1', '0', '0', '0', '0', '0', '1', '1', '1', '0', '0', '1', '0',\n",
              "       '0', '1', '1', '0', '0', '0', '1', '0', '0', '0', '0', '1', '0',\n",
              "       '0', '0', '0', '1', '1', '0', '0', '0', '0', '1', '0', '0', '0',\n",
              "       '0', '1', '0', '1', '0', '0', '1', '1', '0', '1', '0', '0', '1',\n",
              "       '1', '1', '1', '0', '1', '0', '1', '0', '0', '1', '1', '1', '0',\n",
              "       '1', '0', '0', '0', '0', '0', '0', '1', '0', '0', '1', '0', '0',\n",
              "       '0', '1', '1', '1', '1', '1', '0', '0', '1', '0', '1', '0', '0',\n",
              "       '0', '0', '1', '1', '1', '1', '0', '1', '1', '0', '1', '1', '0',\n",
              "       '0', '0', '1', '1', '1', '0', '0', '0', '0', '0', '0', '1', '0',\n",
              "       '1', '1', '0', '0', '1', '0', '0', '0', '0', '1', '0', '0', '0',\n",
              "       '0', '1', '0', '0', '0', '1', '1', '1', '1', '0', '1', '0', '1',\n",
              "       '0', '1', '0', '0', '1', '1', '0', '0', '1', '0', '1', '1', '0',\n",
              "       '0', '0', '1', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0',\n",
              "       '0', '1', '1', '0', '0', '0', '0', '0', '0', '0', '0', '1', '1',\n",
              "       '1', '0', '1', '1', '0', '1', '0', '1', '1', '1', '0', '0', '1',\n",
              "       '1', '0', '1', '0', '0', '0', '1', '1', '1', '1', '0', '1', '0',\n",
              "       '0', '0', '1', '0', '1', '1', '1', '0', '1', '1', '0', '0', '0',\n",
              "       '0', '1', '0', '0', '0', '0', '0', '0', '1', '0', '0', '0', '0',\n",
              "       '0', '0', '0', '0', '0', '1', '1', '0', '0', '0', '1', '0', '0',\n",
              "       '1', '0', '0', '0', '0', '0', '1', '1', '1', '0', '0', '0', '1',\n",
              "       '0', '1', '0', '1', '0', '1', '0', '0', '0', '0', '1', '0', '1',\n",
              "       '1', '0', '1', '1', '0', '0', '1', '0', '0', '0', '1', '0', '0',\n",
              "       '0', '1', '1', '0', '0', '1', '0', '0', '1', '0', '0', '0', '1',\n",
              "       '1', '0', '1', '0', '1', '0', '0', '0', '1', '0', '1', '0', '1',\n",
              "       '1', '0', '0', '1', '1', '1', '0', '1', '0', '1', '0', '0', '0',\n",
              "       '0', '0', '0', '0', '0', '0', '1', '0', '0', '1', '0', '0', '1',\n",
              "       '1', '0', '1', '0', '1', '0', '0', '0', '0', '1', '0', '1', '1',\n",
              "       '0', '0', '0', '0', '0', '1', '0', '1', '0', '1', '1', '1', '1',\n",
              "       '0', '0', '0', '1', '1', '0', '0', '0', '1', '0', '0', '0', '1',\n",
              "       '0', '0', '0', '1', '1', '0', '0', '0', '0', '0', '0', '0', '1',\n",
              "       '1', '0', '0', '0', '1', '1', '1', '0', '0', '0', '0', '1', '1',\n",
              "       '0', '0', '1'], dtype='<U453')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 98
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qVcbz8PCgCu7"
      },
      "source": [
        "from matplotlib import pyplot as plt"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xjBOLzY8boyL"
      },
      "source": [
        "plt.plot(fpr, tpr, label='ROC curve (area = %0.3f)' % roc_auc)\n",
        "plt.plot([0, 1], [0, 1], 'k--')  # random predictions curve\n",
        "plt.xlim([0.0, 1.0])\n",
        "plt.ylim([0.0, 1.0])\n",
        "plt.xlabel('False Positive Rate or (1 - Specifity)')\n",
        "plt.ylabel('True Positive Rate or (Sensitivity)')\n",
        "plt.title('Receiver')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "buc6tX22UXdt"
      },
      "source": [
        "plt.plot(h.history['acc'])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8maXI0z5skGb"
      },
      "source": [
        "x_test=[\"you can't be racist if there is no other race.\"]\n",
        "x_test=np.array(x_test)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gPp4iPKMsoQp"
      },
      "source": [
        "x_test_tokenized = x_tokenizer.texts_to_sequences(x_test)\n",
        "x_testing = sequence.pad_sequences(x_test_tokenized, maxlen=max_text_length)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "v_fP92adkx5f"
      },
      "source": [
        "def load_jsonl(input_path) -> list:\n",
        "    data = []\n",
        "    with open(input_path, 'r', encoding='utf-8') as f:\n",
        "        for line in f:\n",
        "            data.append(json.loads(line.rstrip('\\n|\\r')))\n",
        "    print('Loaded {} records from {}'.format(len(data), input_path))\n",
        "    return data"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iAfOzgdGkykY",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "dad6bde5-edb9-4189-ec99-5306ea8dd3bc"
      },
      "source": [
        "import pandas as pd\n",
        "webpage_data = load_jsonl('/content/drive/My Drive/Colab Notebooks/Project/test.jsonl')\n",
        "db_data = []\n",
        "db_cols = ['id', 'img', 'label', 'text']\n",
        "for d in webpage_data:\n",
        "    db_data.append([])\n",
        "    for col in db_cols:\n",
        "        db_data[-1].append(d.get(col, float('nan')))\n",
        "df = pd.DataFrame(db_data, columns=db_cols)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Loaded 1000 records from /content/drive/My Drive/Colab Notebooks/Project/test.jsonl\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2qQ6uMuWlVpF"
      },
      "source": [
        "dd=df.values"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DTOx-6TVdFXv"
      },
      "source": [
        "Xte_final=[]\n",
        "for i in di.keys():\n",
        "  for j in dd:\n",
        "    if(j[1][-9:-4] == i):\n",
        "      f=[]\n",
        "      f.append(di[i]+j[3])\n",
        "      f.append(j[2])\n",
        "      Xte_final.append(f)\n",
        "      break"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "25a_CvpVdXwf"
      },
      "source": [
        "Xte_final= np.array(Xte_final)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RdUPfhexdYYa",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "498aefa9-c08b-4122-a135-f3bf1748412d"
      },
      "source": [
        "Xte_final.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(52, 2)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 76
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "D9s0owyal5cs"
      },
      "source": [
        "Xtest=Xte_final[:,0]\n",
        "x_train_tokenized = x_tokenizer.texts_to_sequences(Xtest)\n",
        "x_test = sequence.pad_sequences(x_train_tokenized, maxlen=max_text_length)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3WW0MFZ7mWW-"
      },
      "source": [
        "rn=model_new.predict(x_test)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UgmLQuicmWZ2"
      },
      "source": [
        "r=model.predict(x_test)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sGTIqiRfmWdP"
      },
      "source": [
        "y=Xte_final[:,1]\n",
        "yf=[]\n",
        "for i in y:\n",
        "  yf.append(float(i))\n",
        "yf= np.array(yf)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vTRcW-1rqi2n",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "038bd3d0-fd74-4ace-a6da-626446df8164"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([['A Picture Of A Street With A Clock On It . the before image that not many people have seen',\n",
              "        'nan'],\n",
              "       ['A Man And Woman In A Suit And Tie . the great train robbers',\n",
              "        'nan'],\n",
              "       ['A Man Holding A Cell Phone In Front Of A Crowd . that feeling when you finish your homework in record time and have extra time to chill',\n",
              "        'nan'],\n",
              "       ['A Man Wearing A Suit And Tie With A Tie . when your world cup team scores a goal',\n",
              "        'nan'],\n",
              "       [\"A Teddy Bear With A Teddy Bear Sitting On A Table . trust me... ...they're re all terrorists\",\n",
              "        'nan'],\n",
              "       ['A Man With A Hat And A Tie In His Mouth . when you got a warrant out for your arrest & you on the run.....',\n",
              "        'nan'],\n",
              "       [\"A Kitchen With A Table And A Table With A Lot Of Food . if they're in a relationship, who makes the sandwiches?\",\n",
              "        'nan'],\n",
              "       ['A Small Child Is Laying On A Bed With A Blanket . and that was the last nativity play my son was invited to take part in',\n",
              "        'nan'],\n",
              "       ['A Black And White Photo Of A Street Sign . we said we would never forget why are you voting them into our governement?',\n",
              "        'nan'],\n",
              "       ['A Man With A Hat And A Hat On A Cell Phone . when you find a shooter the same day you plan a bombing, so you team up',\n",
              "        'nan'],\n",
              "       ['A Man And A Woman Sitting On A Bench . how do you piss off a female archeologist? give her a used tampon and ask her what period it comes from',\n",
              "        'nan'],\n",
              "       [\"A Young Boy Is Brushing Her Teeth In A Mirror . when you're watching the #roots remake but you're in an interracial relationship\",\n",
              "        'nan'],\n",
              "       ['A Man Is Holding A Banana In His Hand . \"aye, tone! why would dey delouse \\'em if dey was just gonna whack \\'em?!\"',\n",
              "        'nan'],\n",
              "       ['A Close Up Of A Street Sign With A Clock On It . jew jerky: leave out in the sun until all moisture is gone store in a cool dark place for 3 days',\n",
              "        'nan'],\n",
              "       ['A Man Wearing A Suit And Tie With A Tie . just a traditional muslim man with a beard',\n",
              "        'nan'],\n",
              "       ['A Man Wearing A Suit And Tie With A Hat On It . area 51 naruto runners naruto runners let me iiiiiiiiiiiiin! let me in',\n",
              "        'nan'],\n",
              "       [\"A Man In A Suit And Tie With A Phone . american kids all across american storefronts!!! freeway off n on ramps!!! street corners!!! begging for $$$ for the're alcohol!!! n drugs!!!\",\n",
              "        'nan'],\n",
              "       [\"A Man Wearing A Suit And Tie With A Tie . three k's a day keeps the minorities away\",\n",
              "        'nan'],\n",
              "       [\"A Man Is Holding A Cell Phone In Front Of A Mirror . party tonight? i'm down\",\n",
              "        'nan'],\n",
              "       [\"A Man Sitting On A Bench With A Cat . a mother's love for the child is a divine thing\",\n",
              "        'nan'],\n",
              "       ['A Man Wearing A Suit And Tie In A Suit . the newest hate group the dumb stupid klan',\n",
              "        'nan'],\n",
              "       ['A Man Wearing A Suit And Tie With A Tie . can you hear me at the back?',\n",
              "        'nan'],\n",
              "       ['A Group Of People Standing Around A Table With A Large Cake . warning \"every\" country that has become involved in muslim immigration has eventually become an islamic state, and don\\'t the fate of your country will be any different islam is a cancer for which there is no cure',\n",
              "        'nan'],\n",
              "       ['A Teddy Bear Wearing A Red Bow Tie . imagine being so disugsting there have to be laws to try to stop normal people from hating you',\n",
              "        'nan'],\n",
              "       ['A Blue And White Photo Of A Snow Covered Mountain . just admit it white america was better',\n",
              "        'nan'],\n",
              "       [\"A Man With A Cell Phone In His Hand . i'm this pretty because both my parents are white\",\n",
              "        'nan'],\n",
              "       ['A Man Sitting On A Bench With A Laptop . this is inhuman the operation takes only a couple of seconds to perform but its image remains for years',\n",
              "        'nan'],\n",
              "       ['A Man In A Black Shirt And A Tie muslims offend me', 'nan'],\n",
              "       ['A Man Wearing A Hat And A Hat On A Cell Phone . and that was the last nativity play my son was invited to take part in',\n",
              "        'nan'],\n",
              "       ['A Man In A Suit And Tie With A Baseball Bat . if i was arrested what do u think i got arrested 4?',\n",
              "        'nan'],\n",
              "       ['A Man And Woman In A Room With A Teddy Bear . claims that her ancestors created a safe space for jews these are her ancestors',\n",
              "        'nan'],\n",
              "       ['A Close Up Of A Sign With A Sign On It . me watching the pride parade',\n",
              "        'nan'],\n",
              "       [\"A Man And Woman Sitting At A Table With A Laptop . i'd like the porn in my room to be disabled we only have regular porn you sick bastard\",\n",
              "        'nan'],\n",
              "       [\"A Man Is Holding A Cell Phone In Front Of A Crowd . there's only one race the human race and that thing on the right? that's a monkey in human clothes\",\n",
              "        'nan'],\n",
              "       ['A Group Of People Standing Around A Table With A Bunch Of Bananas . when you start burning calories instead of people',\n",
              "        'nan'],\n",
              "       ['A Pair Of Scissors With A Red Bow Tie . when you fart in crowd and  try to look normal',\n",
              "        'nan'],\n",
              "       [\"A Man Wearing A Suit And Tie With A Tie . mom won't let me use the oven with my jewish friends\",\n",
              "        'nan'],\n",
              "       ['A Man In A Suit And Tie With A Hat . this man single handedly saved this animal from poachers',\n",
              "        'nan'],\n",
              "       [\"A Small White Plate With A Piece Of Cake On It . didn't get bought today success!\",\n",
              "        'nan'],\n",
              "       [\"A Group Of Four Giraffes Standing Next To Each Other . trust me... ...they're re all terrorists\",\n",
              "        'nan'],\n",
              "       ['A Man In A Suit And Tie With A Tie . yeah, we know \"no president has done what i have done.\"',\n",
              "        'nan'],\n",
              "       ['A Group Of People Standing Around A Bunch Of Bananas . farming simulator 1800',\n",
              "        'nan'],\n",
              "       ['A Close Up Of A Cake With A Candle On It this has no place on american soil',\n",
              "        'nan'],\n",
              "       [\"A Man With A Beard And A Tie In His Mouth . this pizza is so disgusting if you take it to italv you'll get arrested\",\n",
              "        'nan'],\n",
              "       ['A Group Of People Sitting Around A Table Eating A Meal . just admit it. white america was better',\n",
              "        'nan'],\n",
              "       ['A Group Of People Standing Next To Each Other On A Table . our insurance',\n",
              "        'nan'],\n",
              "       ['A Man In A Red Shirt And A Baseball Bat . here we go again. us paralympics team refuses to stand during st.',\n",
              "        'nan'],\n",
              "       [\"A Man Wearing A Suit And Tie With A Tie . he's not a great debater, he's not a smooth talking politician, he's not part of the establishment, but he is a true american patriot! we cannot sit back and watch them destroy this man who is trying to help us ! he can clean up america and they know it !\",\n",
              "        'nan'],\n",
              "       ['A Black And White Photo Of A Man Wearing A Hat . how i see black people getting trolled on the internet',\n",
              "        'nan'],\n",
              "       [\"A Man Wearing A Suit And Tie With A Tie . i'm not racist i hate white liberals more than anybody\",\n",
              "        'nan'],\n",
              "       [\"A Man Is Holding A Piece Of Cake On A Table . it's the religion of peace. join exclusive islam!\",\n",
              "        'nan'],\n",
              "       [\"A Close Up Of A Cat Laying On A Bed makeup artist $4,000 / month personal stylist $15,000 / week i can't tell the difference\",\n",
              "        'nan']], dtype='<U297')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 77
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aAkunej8mWgk"
      },
      "source": [
        "a=[0.5,0.6,0.1,0.2]\n",
        "a=np.array(a)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Azi8HNTumWj7"
      },
      "source": [
        "rn1=[]\n",
        "for i in r:\n",
        "  if(i>=0.5):\n",
        "    rn1.append(1)\n",
        "  else:\n",
        "    rn1.append(0)\n",
        "rn1=np.array(rn1)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XVUP_Ro1nJf4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0ccd023b-9f18-47f4-d000-6db7c3b6d9ee"
      },
      "source": [
        "yf==rn1"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([False, False, False, False, False, False, False, False, False,\n",
              "       False, False, False, False, False, False, False, False, False,\n",
              "       False, False, False, False, False, False, False, False, False,\n",
              "       False, False, False, False, False, False, False, False, False,\n",
              "       False, False, False, False, False, False, False, False, False,\n",
              "       False, False, False, False, False, False, False])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 71
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TCQrWBUCnqZj"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}